{
  
    
        "post0": {
            "title": "Deployment Blog",
            "content": "Weekend of January 6 . My team began working on our reunion project using the Leuck template. We had to deploy our backend on hetvitrivedi.tk but I faced many problems. . Needed to change Java version in pom.xml file because it needs to be synched with computer properties and what Java version is running. Also remove line 101 in pom.xml file 3.30.01 | Needed to add port: 8085 in application.properties because it must match deployment. In the Dockerfile and docker-compose-yml, the port is 8085 and it impacts how it loads the application on localhost. . SEE IMAGE 2 . | Need to clarify ports and keep them consistent | In application.properties file need to have &quot;server.port: 8085&quot; based on what you are exposing | . Faced curl problem that output the Connection reset by peer . SEE IMAGE 3 . | This problem had to do with two things: my initial 8199 port was already being used by another group; the ports weren&#39;t in sync. 8129 was running for local host but 8085 needed to be exposed (see number 2) | . Created faulty nighthawk file that caused nginx to fail . SEE IMAGE 1 . | Need to cd /etc/nginx/sites-enabled | Sudo rm the faulty file | . . . .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2023/01/09/Deployment.html",
            "relUrl": "/jupyter/2023/01/09/Deployment.html",
            "date": " • Jan 9, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 6-10 Lesson Blogs",
            "content": "Table of Scores . Unit Score Grading . Unit 6 | 0.9/1 | Link | . Unit 7 | 0.95/1 | Link | . Unit 8 | 0.9/1 | Link | . Unit 9 | 1/1 | Link | . Unit 10 | 1/1 | Link | . TOTAL SCORE | 4.75/5 | N/A | . Unit 6: Arrays . See Jupyter Notebook #1 here . See Jupyter Notebook #2 here . Takeaways: . Arrays: one type of data storage | Reference types | Need import java.util Arrays | Making Arrays: using constructors or using pre-initialized arrays | Access elements through arrayName[index] | For loop: examines and iterates over every element the array contains in a fast, effective, and more controllable way. | While loop: initialize an array of integers, and traverse the array from start to end using while loop. Start with an index of zero, condition that index is less than the length of array, and increment index inside while loop. | Mutator methods: reset the value of a private variable so that other classes can modify a value stored in the variable without direct access | . /* for loop */ String[] cars = {&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Ford&quot;, &quot;Mazda&quot;}; for (int i = 0; i &lt; cars.length; i++) { System.out.println(cars[i]); } . Volvo BMW Ford Mazda . public class ArrayExample { public static void main(String[] args) { int[] numbers = {2, 4, 6, 8, 10}; int index = 0; while (index &lt; numbers.length) { System.out.println(numbers[index]); index++; } } } ArrayExample.main(null); . 2 4 6 8 10 . Unit 7 Array List . See Jupyter Notebook here . Takeaways: . Different from arrays because array lists are dynamic, part of a framework, a class with many methods, more flexible, store object references, slower than arrays, only used with import statement | Primitive Data Types: boolean, char, double, int | Wrapper class data types: boolean, character, double, int | Methods to know: size(): # of elements in the list | add(obj): adds an element at the end | add(index, object): adds element at specific index | remove(index): removes element from specific index | set(index, object): replaces element at index with new object | get(index): returns element at index | . | . import java.util.ArrayList; public class hack1 { public static void main (String[] args) { ArrayList&lt;String&gt; hetvifavs = new ArrayList&lt;String&gt;(Arrays.asList(&quot;ripped jeans&quot;, &quot;rap music&quot;, &quot;black nail polish&quot;)); System.out.println( &quot;items &quot; + hetvifavs + &quot; Hetvi&#39;s favorite things. There are &quot; + hetvifavs.size() + &quot; things in the list&quot; ); //objects you add must be of the same data type hetvifavs.add(&quot;bleached hair&quot;); System.out.println( &quot;items &quot; + hetvifavs + &quot; Hetvi&#39;s favorite things. There are &quot; + hetvifavs.size() + &quot; things in the list&quot; ); } } hack1.main(null); . items [ripped jeans, rap music, black nail polish] Hetvi&#39;s favorite things. There are 3 things in the list items [ripped jeans, rap music, black nail polish, bleached hair] Hetvi&#39;s favorite things. There are 4 things in the list . Unit 8 2D Arrays . See Jupyter Notebook here . Takeways: . Array: a data structure used to implement a collection (list) of primitive or object reference data | Element = a single value in the array | Index = the position of the element in the array (starts from 0) | Array Length = the number of elements in the array | Is public, so can be accessed in any class | Is also final, so can’t change it after array has been created | Access and update elements: nameOf2DArray[r][c] | Nested loops used to traverse 2D arrays | . /* accessing and changing elements */ public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; arr[2][0] = &quot;Athens&quot;; System.out.println(arr[2][0]); } } Test.main(null); . Athens . /* nested loop */ public class Test { public static void main(String[] args) { String[][] arr = { { &quot;a&quot;, &quot;f&quot;, &quot;g&quot;, &quot;l&quot; }, { &quot;b&quot;, &quot;e&quot;, &quot;h&quot;, &quot;k&quot; }, { &quot;c&quot;, &quot;d&quot;, &quot;i&quot;, &quot;j&quot; } }; for (int row = 0; row &lt; 3; row++) { for (int col = 0; col &lt; 4; col++) { System.out.print(arr[row][col] + &quot; &quot;); } System.out.println(&quot; &quot;); } } } Test.main(null); . a f g l b e h k c d i j . Unit 9 Inheritance . See Jupyter Notebook here . Takeaways: . Inheritance: define a base class like a car class that has methods and attributes common. For example, there can be a car steering method, gas and break method, and attributes like speed | Extend: Each car that is created will extend from this base class thus inheriting the methods and attributes defined in the base class New car classes with have special features | . | Super Class: Base class that has all the generic methods (base Car Class that has generic methods for all cars) protected: access modifier isn&#39;t affected by outside | . | Subclass constructor: inherits all methods and attributes from super class In car example, TeslaModelS was a subclass | In personal example, IphoneX and IphoneV are subclasses | . | super Keyword: superclass objects - used to call superclass methods and access the constructor use constructors defined in the superclass | can add specific attributes | super() is the use of the keywords | . | Overloading a method (same name different parameters): two methods with the same name but different arguments; static polymorphism or compile time polymorphism | Overriding a method (same signature of a method): subclass has specific implementation of a method that the superclass provides | Polymorphism: doing one task in many ways through inheritance gearShift in cars can be used in two different ways in two different classes - two implementations through overriding | . | . Unit 10 Recursion . My group presentation . Takeaways: . Recursive method calls itself | Base case: after multiple calls base case is reached and its where recursion is stopped and value is returned --&gt; should be written first to avoid infinite recursion | Recursive calls are apart of the method - each have different parameters | All recursions can be written as loops | Binary search: data must be sorted in order, more efficient than linear search | Linear recursion: a function that only makes a single call to itself each time the function runs | Selection sort: algorithm works by repeatedly finding the minimum element | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/extra/2022/12/14/Unit610blog.html",
            "relUrl": "/extra/2022/12/14/Unit610blog.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Title",
            "content": "",
            "url": "https://hetvit27.github.io/hetvitrivedi/2022/12/14/Recursion.html",
            "relUrl": "/2022/12/14/Recursion.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 9 Inheritance",
            "content": "People . Period 2, Team 9: Hetvi Trivedi, Brian Tang, Iris Yang, and Ellen Xu . Lecture Notes with Vocab . Inheritance: define a base class like a car class that has methods and attributes common. For example, there can be a car steering method, gas and break method, and attributes like speed | Extend: Each car that is created will extend from this base class thus inheriting the methods and attributes defined in the base class New car classes with have special features | . | Super Class: Base class that has all the generic methods (base Car Class that has generic methods for all cars) protected: access modifier isn&#39;t affected by outside | . | Subclass constructor: inherits all methods and attributes from super class In car example, TeslaModelS was a subclass | In personal example, IphoneX and IphoneV are subclasses | . | super Keyword: superclass objects - used to call superclass methods and access the constructor use constructors defined in the superclass | can add specific attributes | super() is the use of the keywords | . | Overloading a method (same name different parameters): two methods with the same name but different arguments; static polymorphism or compile time polymorphism | Overriding a method (same signature of a method): subclass has specific implementation of a method that the superclass provides | Polymorphism: doing one task in many ways through inheritance gearShift in cars can be used in two different ways in two different classes - two implementations through overriding | . | . Hack 1-3 . public class Phone { protected String brandName; protected double version; protected double cameraNumber; protected double maxVolume; // Constructor for the attributes present in the superclass public Phone(String brandName, double version, double cameraNumber, double maxVolume) { this.brandName = brandName; this.version = version; this.cameraNumber = cameraNumber; this.maxVolume = maxVolume; } public void flash () { System.out.println(&quot;On!&quot;); } public void homebutton () { System.out.println(&quot;Yes!&quot;); } public void darkmode () { System.out.println(&quot;on!&quot;); } public void powerbutton () { System.out.println(&quot;turning on...&quot;); } public void camera () { System.out.print(&quot;photo... &quot;); } } public class IphoneX extends Phone { // Additional attribute not present in the superclass protected String cameratype; // Constructor for Subclass public IphoneX(String brandName, double version, double cameraNumber, double maxVolume, String cameratype) { // We use the Superclass constructor for the shared attributes through the keyword &quot;super&quot; super(brandName, version, cameraNumber, maxVolume); // hornSound is not in the Superclass, so we add it separately in the constructor this.cameratype = cameratype; } // We use override to change the functionality in the subclass of an existing method in the superclass @Override public void darkmode () { System.out.println(&quot;The screen is now dark!&quot;); } public void powerbutton () { System.out.println(&quot;Iphone is on...&quot;); } // Here, we don&#39;t fully change the functionality of the existing horn method in the superclass // Instead, we take all of the functionality of the superclass method, and then add on to it public void camera () { super.camera(); System.out.println(cameratype); } public static void main(String[] args) { // 5 argument constructor IphoneX modelS = new IphoneX(&quot;Tesla&quot;, 396, 4, 200, &quot;taken&quot;); // Example of late binding Phone phone = new IphoneX(&quot;Tesla&quot;, 396, 4, 200, &quot;saved&quot;); // We can still use the methods from the child class, even though we didn&#39;t mention them in the subclass! modelS.flash(); // Using the overridden method modelS.darkmode(); modelS.homebutton(); modelS.powerbutton(); // Using the method we added on to modelS.camera(); phone.camera(); } } IphoneX.main(null); public class IphoneV extends Phone { public IphoneV (String brandName, double version, double cameraNumber, double maxVolume) { super(brandName, version, cameraNumber, maxVolume); } @Override public void darkmode () { System.out.println(&quot;Dark mode is on!&quot;); } public void dimensions (int a) { System.out.println(&quot;Length is &quot; + a); } public void dimensions (int a, int b) { System.out.println(&quot;Length is &quot; + a + &quot; and height is &quot; + b); } public static void main(String[] args) { // 4 superclass argument constructor IphoneV phone2 = new IphoneV(&quot;Apple&quot;, 348, 4, 145); // Using the overridden method phone2.darkmode(); // Using the overloaded method phone2.dimensions(1); phone2.dimensions(1, 1); } } IphoneV.main(null); . On! The screen is now dark! Yes! Iphone is on... photo... taken photo... saved Dark mode is on! Length is 1 Length is 1 and height is 1 .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/12/13/Unit9.html",
            "relUrl": "/collegeboard/2022/12/13/Unit9.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Comp Sci/Technical Business Panel Notes",
            "content": "Kathleen Beveridge . Grew up in vietnam | Went to Santa Clara University and got the opportunity to study abroad in Spain | Finance bachelors degree from Santa Clara | MBA at USC | Not a traditional education | Don&#39;t just survive. Live life with passion, compassion, humor, and style | Senior director of Marketing: lead of 50 people | . Career . Investment Banker at Wells Fargo | Switched to high tech | Started first job at HP | Moved to SD and learned how to surf | Went to Qualcomm | Went to ThermoFischer | If you are interested in software engineering, you can work even in biotechnology | All companies are interested in using technology for the good of the people. Making and providing services that the world wants | Financial banking was helping people with retirement and become wealthy | She didn&#39;t feel like it was her calling; her impact wasn&#39;t good enough for her | High tech company had a macro/global impact on people in the world | In order to commercialize product, people in her team work closely with the scrum master to bring the product to the market | . Kris Porter . Software Engineer - SRE, DevOps, Infrastructure | Went to Livermore High School, UCLA for electrical engineering | It doesn&#39;t matter what you like at this age. You can always have a tech career later on. | Studied radar systems and wireless communication | Researched between undergrad and grad school at the Center for Embedded Networked Sensors. Learned Linux operating system. | Graduated in 2008 from grad school when stock market crash | 2010: worked at a startup through email marketing automation | 2012: NBC Universal | 2014: Qualcomm for 6 years/DevOps/Automation/Monitoring | 2021: Working at Twitter on the API timeline for a user in 200 milliseconds | . Learning . Continuous learning in high tech | Twitter: added a new data center, migrated home timeline, moving twitter to GraphQL | Even if you are laid off, you can find other jobs that work with your own skills. | Most important skills in the technical industry: continuous learning and willingness to learn new things. Don&#39;t be super concerned about what you read on the news | Listen to requirements, translate it to technology and how it meets the requirements | . Summary and Reflection . From Ms. Beveridge, I realized that I don&#39;t need to be 100% determined on what I want to do in the future. Currently, I want to be a biomedical engineer but it&#39;s okay if I decide that that&#39;s not my cup of tea later on. She inspired me to be open to exploring new fields and being okay with exploring what I may not find interesting right now because I will never know until I try. I find it super cool that within one company like Qualcommn or ThermoFischer, there are multiple levels and groups of people that are needed to make the company progress. For example, ThermoFischer is a biotechnology company. However, the company has research scientists, marketing teams, biomedical engineers, software engineers, and more. Even if I go into a company as a biomedical engineer, I can always learn the more software/computer science aspect or even dabble into research. Overall, Ms. Beveridge proved the value of expanding your horizons and using your energy to maximize your impact on the world. . From Mr. Porter, I learned the value of being able to keep trying. He failed his first computer science class but never gave up. As he retook it, he started to learn more. Even though he had a break from programming for 8 years, he still ended up finding his way back to it and gained experience in different companies. This made me realize that even if I don&#39;t like something at the moment, I should be open to coming back to it. It also teaches me to always prioritize learning. Grades and scores are important but so is walking away from a class/job with more knowledge than you came in with. On a side note, Mr. Porter&#39;s interest in being a DevOps and working on deployment is very important. Without DevOps Engineers, it&#39;s hard to keep sites secure. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/extracredit/2022/12/13/EC.html",
            "relUrl": "/extracredit/2022/12/13/EC.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "FRQ 4 2019",
            "content": "Part A . creates an array using the boolean [numRows][numCols] | Access elements in 2d array that was created | Computes 40% probability | Sets all values of 2D array based on the computed probability | . public LightBoard(int numRows, int numCols) { lights = new boolean[numRows][numCols]; for (int r = 0; r &lt; numRows; r++) { for (int c = 0; c &lt; numCols; c++) { double onoff = Math.random(); lights[r][c] = onoff &lt; 0.4; } } } . Part B . Accesses an element of lights as a boolean | Traverses the columns of 2D array and counts the number of trues (lights are off &amp; number of lights is divisible by 3) | Performs division calculation | Returns true or false according to three rules | . public boolean evaluateLight(int row, int col){ int lightsOn = 0; for (int r = 0; r &lt; lights.length; r++){ if (lights[r][col]){ lightsOn++; } } if (lights[row][col] &amp;&amp; lightsOn % 2 == 0){ return false; } if (!lights[row][col] &amp;&amp; lightsOn % 3 == 0){ return true; } return lights[row][col]; } .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/12/12/FRQ4.html",
            "relUrl": "/collegeboard/2022/12/12/FRQ4.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 10 Recursion Grading",
            "content": "Homework . Google Form Multiple Choice . Grading Criteria . 1/1: No missed MC + code showing recursion | 0.95/1: Missed 1-2 MC questions + had code showing recursion | 0.90/1: Missed 1-2 MC questions + no code showing recursion | Late submission: 0.05 deducted | . | . Scores . Names Score . Bailey Say, Andrew Meng, Aarav Arora, Nicholas Mounier, Rohan Juneja | 1/1 full score on MC + good implementation of recursion in code | . Kian Pasokhi | 1/1 full score on MC + good implementation of recursion in code | . Everitt, Samuel, Kinish, Ritvik | 1/1 full score on MC + good implementation of recursion in code | . Bria Gilliam, Shraddha Kadaba, Evan Sanchez, Calissa Tyrrell | 1/1 full score on MC + good implementation of recursion in code | . Iris | 1/1 full score on MC + good implementation of recursion in code | . Evan Yang, Karthik V, Sanjay B, Pranav S, Jay M. | 0.95/1 missed one MC question + good implementation of recursion in code | . Linda Liu | 1/1 missed one MC question + good implementation of recursion in code | . Lily Wu, William Wu, Vidhi Kulkarni, Riya Patil, Saathvika Ajith | 0.95/1 missed one MC question + good implementation of recursion in code | . Sahil, Rohit, Nathan, Kurtis | 0.95/1 missed one MC question + good implementation of recursion in code | . Serafina Wong | 0.95/1 missed one MC question + good implementation of recursion in code | . Prisha Boreddy | 1/1 full score on MC + good implementation of recursion in code | . Divyanshi Suri | 0.85/1 missed one MC and submitted late | . Re&#39;em, Gabe, Soren, Avinh | 0.95/1 Full score on MC + good implementation of recursion in code + submitted late | . MC Explanations . In the first function call, 2 + dosomething(2,2). In the second call, 2+2+ dosomething (2,1). Then, base condition is met: 2+2+2 = 6 . | Ternary operator is basically a compressed if else statement, which has the format (condition) ? (Do this part after question mark if condition is true) : (do this part after colon if condition is false) and returns whichever value) So reading the statement on Line 2, it says that if num is true (aka not 0), return the module and repeat with recursive call to itself divided by 10. Otherwise, return 0. The key is that dividing by 10 is basically like stripping off the last digit, because it gets truncated (ex. 19/10=1.9 which gets rounded down to 1, so it essentially just removes the 9 by moving it behind the decimal point). So what the ternary operator is doing is adding the last digit, then stripping off the last digit, and adding THAT digit, … Essentially taking the sum of all the individual digits. So the answer rec(4567) is just 4+5+6+7 = 22 . | Recursion uses more memory than iteration because in recursion, each function call is stored in a call stack. . | Recursion can be written as loops - therefore, most similar to loops. See presentation. . | Base case is when the recursive method is stopped and a value is returned. . | The answer is 24. The recursive method will terminate when either b &lt;= 1 or b &lt;= a. In these two cases, it will return 1. Do traces of the calls: . foo(5,9) = (9-5) foo(5,8) = 4 foo(5,8) . foo(5,8) = (8-5) foo(5,7) = 3 foo(5,7) . foo(5,7) = (7-5) foo(5,6) = 2 foo(5,6) . foo(5,6) = (6-5) foo(5,5) = 1 foo(5,5) . foo(5,5) = 1 . Therefore, carefully tracing back up, we get: foo(5,9) = 4 3 2 1 1 = 24 . | The number 10 is inputed into recurs and prints count, subtracts two from count, then reentered into recurs. First iteration gives 10. The second iteration gives as, 10, 8. It places 8 after the value from the first iteration. Repeating this, we get 10 8 6 4 2. When count reaches 0, nothing is printed. . | Fibonacci is an example of iteration. Think back to Trimester 1. . | A recursive method calls itself within the method. . |",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/12/06/Recursion.html",
            "relUrl": "/collegeboard/2022/12/06/Recursion.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "2019 FRQ 3 PBL",
            "content": "Calculator.java . Converts the string expression to arraylist of tokens | Determines if the character is an operator or a separator | If no, appends character | If yes and length is greater than 0, adds the token | Reverse Polish notation in which operators follow the numbers | rpnToResult: if character is operator, number is added to stack and if it&#39;s not, two numbers are removed and result is calculated with operand. Result is then added to stack | Push things to front of the stack | Code pushes all the numbers first and then the operator second (case does that) | . Calculator.java . CalculatorApiController.java . What I added . Each operator and what it returns . . Tester Method . Result . Unbalanced Paranthesis check . Power operator . Test on Postman . . 2019 FRQ Collegeboard . Part A . creates arraylist | access elements in array tokens | compares strings in tokens with instances of the variable | adds delimeters (beginning or end of string) into ArrayList in original order | . public ArrayList&lt;String&gt; getDelimitersList(String[] tokens){ ArrayList&lt;String&gt; delims = new ArrayList&lt;String&gt;(); // store delimiters in tokens for(String token: tokens){ if(token.equals(this.openDel) || token.equals(this.closeDel)){ // check if delimeter delims.add(token); } } return delims; } . Part B . initializes accumulators | access elements in arraylist | compares strings in delimiters with instances of variables | identifies and returns boolean value to implement one rule | identifies and return boolean value for all cases | . public boolean isBalanced(ArrayList&lt;String&gt; delimiters){ int openCount = 0; int closeCount = 0; for(String delim: delimiters){ if(delim.equals(this.openDel)){ openCount++; } else{ closeCount++; if(openCount &gt;= closeCount){ continue; } else{ return false; } } } if(openCount == closeCount){ return true; } return false; } .",
            "url": "https://hetvit27.github.io/hetvitrivedi/frq/2022/12/05/FRQ3.html",
            "relUrl": "/frq/2022/12/05/FRQ3.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 7 Array Lists",
            "content": "Lesson Purpose and Objectives . Learn about the structure and functions of an arrayList and go over the key College Board concepts for arrayLists . ArrayLists are only 2.5%-7.5% but have many concepts from other units and are a good data structure to know. Also, the 3rd question of the FRQ is based on ArrayLists . 7.1 Introduction to ArrayList . Arrays ArrayLists . Static (fixed size) | Dynamic (can change size) | . Fundamental java feature | Part of a framework. Someone was nice and designed this with the behind the scenes being arrays | . An object with no methods | A class with many methods | . Not as flexible | Designed to be more flexible | . Can store more primitive data | Not designed to store primitives, they store object references | . | Slightly slower than Arrays | . | Can only be used with an import statement | . Real Life Array Example: You always have to have five players on the court . Real Life ArrayList Example: In dodgeball, the number of people in the game is changing based on who comes in or gets out . Primitive Data Types: . boolean | char | double | int | . Wrapper Class Data Types (Store the primitive values as objects) . Boolean | Character | Double | Integer | . import java.util.ArrayList; //you must import the java.util package // Instantiating: ArrayList&lt;DataType&gt; variableName = new ArrayList&lt;&gt;(n); //DataType must be nonprimitive data type public class introArrayList { public static void main (String[] args) { ArrayList&lt;Integer&gt; e1 = new ArrayList&lt;Integer&gt;(); //empty ArrayList&lt;String&gt; e2 = new ArrayList&lt;String&gt;(5); //5 elements ArrayList&lt;Dogs&gt; e3 = new ArrayList&lt;Dogs&gt;(); //you can store whatever objects you want } } . 7.2 ArrayList Methods . There are a lot of cool methods that you can use with arrayLists, but here are the ones College Board wants you to know for 7.2: . size(); . Returns the number of elements in the list | . add(obj); . Adds element at the end | . add(index, object); . Adds element at specific index | . remove(index); . Removes element from specific index | . set(index, object); . Replaces element at index with new object | . get(index); . Returns element at index | . import java.util.ArrayList; public class methodsArrayList { public static void main (String[] args) { ArrayList&lt;String&gt; dogs = new ArrayList&lt;String&gt;(Arrays.asList(&quot;Sparky&quot;, &quot;Duke&quot;, &quot;Noodle&quot;)); ArrayList&lt;String&gt; dogs2 = new ArrayList&lt;&gt;(Arrays.asList(&quot;Sparky&quot;, &quot;Duke&quot;, &quot;Noodle&quot;)); System.out.println(&quot;There are &quot; + dogs.size() + &quot; in the ArrayList&quot;); System.out.println(&quot;There are &quot; + dogs2.size() + &quot; in the ArrayList&quot;); //objects you add must be of the same data type dogs.add(&quot;Peanut&quot;); System.out.println(&quot;There are now &quot; + dogs.size() + &quot; dogs in the ArrayList&quot;); String myDog = dogs.get(2); System.out.println(&quot;My dog is named &quot; + myDog); } } //Note: you don&#39;t need to declare &lt;String&gt; again after new ArrayList methodsArrayList.main(null); . There are 3 in the ArrayList There are 3 in the ArrayList There are now 4 dogs in the ArrayList My dog is named Noodle . //Hmmmm... seems suspect import java.util.ArrayList; public class example { public static void main (String[] args) { ArrayList&lt;Boolean&gt; questions = new ArrayList&lt;&gt;(); questions.add(true); questions.add(false); myMethod(questions); } public static void myMethod(ArrayList arr) { if (arr.size()&gt;0) { arr.set(0,&quot;Hello&quot;); //String with boolean??? Uh oh! System.out.println(arr.get(0)); } } } example.main(null); . Hello . import java.util.ArrayList; public class example { public static void main (String[] args) { ArrayList&lt;Boolean&gt; questions = new ArrayList&lt;&gt;(); questions.add(true); questions.add(false); myMethod(questions); } public static void myMethod(ArrayList&lt;Boolean&gt; arr) { if (arr.size()&gt;0) { arr.set(0,&quot;Hello&quot;); //String with boolean??? Uh oh! System.out.println(arr.get(0)); } } } example.main(null); . //Returning an ArrayList public static ArrayList methodName (ArrayList arr){ return arr; } . Hack 1 . // HACK!!!! // Create an arrayList and use one of the cool methods for it import java.util.ArrayList; public class hack1 { public static void main (String[] args) { ArrayList&lt;Integer&gt; hacklist = new ArrayList&lt;Integer&gt;(); hacklist.add(1); hacklist.add(2); hacklist.add(3); for (int each : hacklist) { System.out.println(each); } } } hack1.main(null); . 1 2 3 . 7.3 Traversing ArrayLists . there are 2 ways to traverse arraylists: for loops and enhanced for loops | use get() instead of bracket notation for getting an element of an arraylist | use size() to find number of elements in arraylist instead of using .length | . for loop . import java.util.*; public class main { public static void main(String[] args) { List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4, 5); for (int i = 0; i &lt; numbers.size(); i++) { System.out.print(numbers.get(i) + &quot; &quot;); } } } main.main(null); . 1 2 3 4 5 . enhance for loops . import java.util.*; public class main { public static void main(String[] args) { List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4, 5); for ( int num : numbers ) System.out.print(num + &quot; &quot;); } } main.main(null); . 1 2 3 4 5 . Common Mistakes . don&#39;t forget to import java.util.ArrayList | don&#39;t declare or instantiate ArrayList with a primitive data type, which are things such as int, double, and booleans. | don&#39;t forget the parentheses at the end of the constructor and the element types with the brackets: ArrayList list = new ArrayList(); &lt;/li&gt; don&#39;t confuse arrays with arraylists, don&#39;t use [], don&#39;t use .length use .size() instead | &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Hack #2 . import java.util.ArrayList; ArrayList&lt;String&gt; color = new ArrayList&lt;String&gt;(); color.add(&quot;red apple&quot;); color.add(&quot;green box&quot;); color.add(&quot;blue water&quot;); color.add(&quot;red panda&quot;); for (int i = 0; i&lt;color.size(); i++) { if (color.get(i).contains(&quot;red&quot;)) { color.remove(i); } } System.out.println(color); . [green box, blue water] . 7.4 Developing Algorithms Using ArrayLists . Modify Array Values . ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); for (int i = 0; i &lt; num.size(); i++) { num.set(i, num.get(i) * 2); } System.out.print(num); . [10, 2, 6] . find max value . ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); int maxValue = num.get(0); for (int number: num) { if (number &gt; maxValue) { maxValue = number; } } System.out.print(maxValue); . 5 . find min value . ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); int minValue = num.get(0); for (int number: num) { if (number &lt; minValue) { //if new min value found, replace current minValue minValue = number; } } System.out.print(minValue); . 1 . Hack #3 . ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); int sum = 0; for (int i : num){ sum += i; } System.out.println(sum); . 9 . 7.5 Searching . Often times we need to locate data inside linear structures. Normally we would use for loops in order to specify each element, one at a time, and do not need to track the index after execution. | . for ( int index = 0; index &lt; items.size(); index++ ){ //forward searching if ( items.get(index) == num ){ return index; } } . Important Things to Keep in Mind . When looking at int values, the == operator should be used. | When searching for a double value, we need to make sure the value is close enough by doing some math. | Object instances should always use the .equals(otherThing) method to check for a match. | . When searching a linear structure we need to send it the structure and what we are looking for as parameters. A standard for loop with an if block is all we need to search any linear structure. . public int whereIsMyNumber(int magicNumber, int [] myNumbers) { for (int index = 0; index &lt; myNumbers.length; index++) //search through every single spot { if (myNumbers[index] == magicNumber) //do they match? if so return index { return index; } } return -1; // if searched through every single spot, indicate its not there } . You shouldn&#39;t use the == operator when looking for an object. It will only return true if the variable and the element stored at the index point to the same memory, are aliases of each other. | . Here is an example of how you would search for a traditional object: . public int findTheWord(String searchedPhrase, ArrayList&lt;Book&gt; myBooks) { for (int index = 0; index &lt; myBooks.size(); index++) //search through every book in structure { Book currentBook = myBooks.get(index); //hold current book with current book variable String currentPhrase = currentBook.getDescription(); //get description of current book and store in variable currentPhrase if (currentPhrase.equals(searchedPhrase)) //if parameter = current phrase of book looking at - using .equals instead of == operator { return index; } } return -1; //if no match found, indicate its not there } . 7.6 Sorting . Selection sort identifies either the maximum or minimum of the compared values and iterates over the structure checking if the item stored at the index matches the condition, if so, it will swap the value stored at the index and continue. | The insertion sort is characterized by building a sorted structure as it proceeds. It inserts each value it finds at the appropriate location in the data structure. This is often accomplished by using a while loop as the inner loop. | . for (int outer = 1; outer &lt; randomList.size(); outer++) { DebugDuck tested = randomList.get(outer); //extract out a value out of list, passes to outer int inner = outer - 1; //goes back and compares to previous while ( inner &gt;= 0 &amp;&amp; tested.compareTo(randomList.get(inner)) &lt; 0 ) //checks to see if index is valid { randomList.set(inner + 1, randomList.get(inner)); //move up by one and replace original location inner--; } randomList.set(inner + 1, tested); //anything taken out would be placed back into structure } . 7.7 Ethical Issues Around Data Collection . Safety with Data Collection . It is very important to minimize user data collection in our programs. While collecting data in a smaller program may not be a big issue, establishing good practices with data security is always a safer bet when eventually moving to larger projects that manage data. . Whenever you come across data that you no longer will need, it is a good practice to explicitly remove that data altogether. . import java.util.Scanner; import java.util.Arrays; public class dataRemoval { public static void main(String[] args) { // just a scanner object Scanner sc = new Scanner(System.in); // makes an arraylist with some users already in it ArrayList&lt;String&gt; userList = new ArrayList&lt;&gt;(Arrays.asList(&quot;Kian&quot;, &quot;Kiannp44@gmail.com&quot;, &quot;Samuel&quot;, &quot;samuelwaang@gmail.com&quot;, &quot;Calissa&quot;, &quot;calissaT@gmail.com&quot;)); // takes user&#39;s name System.out.println(&quot;Log in &quot;); System.out.println(&quot;Please enter your name:&quot;); String name = sc.nextLine(); System.out.println(name); userList.add(name); // takes user&#39;s email System.out.println(&quot;Please enter your email:&quot;); String email = sc.nextLine(); System.out.println(email); userList.add(email); // prints all the current users in arraylist System.out.println(); System.out.println(&quot;Current users in databse &quot;); System.out.println(userList); // prompt to log out System.out.println(); System.out.println(&quot;Would you like to log out? (y/n)&quot;); String logOut = sc.nextLine(); if (logOut.equals(&quot;y&quot;)) { // if user logs out, remove their name and email from arraylist System.out.println(logOut); userList.remove(name); userList.remove(email); } // reprints current users in arraylist System.out.println(); System.out.println(&quot;Current users in database &quot;); System.out.println(userList); } } dataRemoval.main(null); . Log in Please enter your name: Evan Please enter your email: evanjoelsanchez@gmail.com Current users in databse [Kian, Kiannp44@gmail.com, Samuel, samuelwaang@gmail.com, Calissa, calissaT@gmail.com, Evan, evanjoelsanchez@gmail.com] Would you like to log out? (y/n) y Current users in database [Kian, Kiannp44@gmail.com, Samuel, samuelwaang@gmail.com, Calissa, calissaT@gmail.com] . Anonymizing Personal Data . Instead of using names for users, we can use hash codes instead, which means that each user will simply be identified by their hash code. . public class hashUsers { public static void main(String[] args) { Scanner sc = new Scanner(System.in); String name = sc.nextLine(); // this .hashCode() method will convert the name to a code which cannot be traced back to that original name int id = name.hashCode(); name = null; // name is now null, and nobody will ever know the original name I put in System.out.println(&quot;Hash Code: &quot; + id); } } hashUsers.main(null); . Hash Code: 2172094 . The Takeaway . It is important to understand that as a programmer handling user data, it is your responsibility to protect that collected data. The less data you collect, the less you have to safeguard. A compromised database will generally be an expensive lawsuit in a large scale project. . Homework . Quizziz . . &lt;/div&gt; | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/java/labs/2022/11/30/arrayslist.html",
            "relUrl": "/java/labs/2022/11/30/arrayslist.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Unit 4 MCQ",
            "content": "Final Score . My score was 38/40 but I guessed on about 5 of them so my score should be 33/40 some of them that I was unsure about. | . . Corrections . Question 4 . Consider the following code segment. . int x = 7; int y = 3; if ((x &lt; 10) &amp;&amp; (y &lt; 0)) System.out.println(&quot;Value is: &quot; + x * y); else System.out.println(&quot;Value is: &quot; + x/y); . What is printed as a result of executing the code segment? . When evaluating x &lt; 10 &amp;&amp; y &lt; 0 for x having the value 7 and y have a value of 3, x &lt; 10 is true since 7 is less than 10 and y is less than 0 makes it false since 3 is not less than 0. The operator &amp;&amp; evaluates to true when both conditions are true and evaluates to false otherwise. As a result, compiler will skip first output and execute the else statement for integer division for 7 / 3, which is 2. . Question 6 . Consider the following method that is intended to determine if the double values d1 and d2 are close enough to be considered equal. For example, given a tolerance of 0.001, the values 54.32271 and 54.32294 would be considered equal. . /** @return true if d1 and d2 are within the specified tolerance, * false otherwise */ public boolean almostEqual (double d1, double d2, double tolerance) { /* missing code */ } . Which of the following should replace / missing code / so that almostEqual will work as intended? . The answer that I put was D: return ((d1+d2)/2) &gt;= tolerance. This is incorrect because this would calculate whether the average of d1 and d2 is greater than equal to the tolerance instead of figuring out how close they are. The correct answer was E: returnMath.abs(d1-d2) &lt;= tolerance because this would return the absolute value of the difference between d1 and d2 and determine if it&#39;s less than the tolerance number, figuring out whether to return true or false. . Question 9 . Consider the following method that is intended to return the sum of the elements in the array key. . public static int sumArray(int[] key) { int sum = 0; for (int i=1; i &lt;= key.length; i++) { /* missing code */ } return sum; } . Which of the following statements should be used to replace / missing code / so that sumArray will work as intended? . The answer was B because the array key has an index of 0 for key.length-1. The for loop control variable i is initialized to 1 and will increase by 1 until it is equal to key.length. The access to key should be 1 because otherwise 0 won&#39;t be in the sum and when i is the key.length an error will be thrown. . Question 26 . Assume that the array arr has been defined and initialized as follows. . int [] arr = / initial values for the array / ; . Which of the following will correctly print all of the odd integers contained in arr but none of the even integers contained in arr ? . The correct answer was A. . for (int x : arr) if (x % 2 != 0) System.out.println(x); . This uses an enhanced loop to assign the elements to x. Using the % allows the code to check what the remainder is when dividing by 2 and figuring out if the element is even. If x is even, then the remainder will be zero. If x i odd, then the code will output 1. . Question 30 . Consider the follow method . public static String scramble (String word, int howFar) { return word.substring(howFar + 1, word.length()) + word.substring(0, howFar); } . What value is returned as a result of the call scramble(&quot;compiler&quot;, 3)? . The answer was C. The two parameter substring method returns the substring beginning at the first parameter and ending at the second parameter -1. When word is assigned &quot;compiler&quot; and howFar is assigned 3, the value of word.substring(howFar + 1, wordlength()) is &quot;iler&quot; since 4 letters are subtracted from the beginning of compiler. It ends at 8-1 = 7. The method returns &quot;ilercom.&quot; . Question 37 . Consider the following code segment . int x = 1; while ( /* missing */ ) { System.out.print(x+&quot;&quot;); x = x + 2; } . Consider the following possible replacements for / missing code /. . I. x &lt; 6 . II. x != 6 . III. x &lt; 7 . Which of the proposed replacements for / missing code / will cause the code segment to print only the values 1 3 5? . I put A as the answer but Choice III also works because it will cause the while loop to iterate when x is less than 7. X is assigned to 1 and then will increase by 2. When x reaches 7, the output will be 1,3,5. I know that Choice I works because the variable x is assigned to 1 and then will increase by 2 each time. When x has the output of 7, the loop will terminate. . Question 38 . Assume that x and y have been declared and initialized with int values. Consider the following Java expression. . (y &gt; 10000) ll (x &gt; 1000 &amp;&amp; x &lt; 1500) . Which of the following is equivalent to the expression given above? . The correct answer is A because it represents both the possibilities of y &gt; 1000 or x &gt; 1000 &amp;&amp; x &lt; 1500 . Questions I had to research concepts for . Question 11 . I needed to figure out what a recursive method was because the seqSearchRec depends on the outputs of the smaller instances | Last must be greater than 0 for seqSearchRecHelper | . Question 21 . The code was using a nested loop to iterate over mat so the if statement needs to be defined for this | . Concepts to Review . 2D Arrays | Recursive methods | Boolean expressions | De Morgan&#39;s Law | Array methods | Problems with mystery methods | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/11/07/collegeboard.html",
            "relUrl": "/collegeboard/2022/11/07/collegeboard.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Night at the Museum",
            "content": ". .jpg) . .",
            "url": "https://hetvit27.github.io/hetvitrivedi/extra/2022/11/06/test.html",
            "relUrl": "/extra/2022/11/06/test.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Unit 1-5 Lesson Blogs",
            "content": "Table of Scores . Unit Score Grading . Unit 1 | 0.9/1 | Link | . Unit 2 | 0.95/1 | Link | . Unit 3 | 0.9/1 | Link.html) | . Unit 4 | 0.8/1 | Link | . Unit 5 | 0.9/1 | Link | . TOTAL SCORE | 4.45/5 | N/A | . Unit 1: Primitives . See Jupyter Notebook here . Takeaways: . Java provides wrapper classes for all primitive data types like char, int, double, boolean where you can call in static methods that return values | Primitive wrapper objects or string objects are immutable so the methods can&#39;t change | Boolean, char, int, float, double are all primitive data types | String, Array, etc. are non-primitive data types | String class are unable to be changed | Learned to declare a variable that can be accessible and/or changed | Learned how to store data as variables | (=) is used to initialize variables or change its associated value | Operators are + - * / % | Compound operators are +=, -=, *=, /=, %= | Increment/decrement ++ or -- | . public class Integer103 { public static void main(String[] args) { System.out.println(Integer.MAX_VALUE); System.out.println(Integer.MIN_VALUE); int low = Integer.MAX_VALUE; int high = Integer.MIN_VALUE; } } Integer103.main(null); // creating a class, wrapper classes for int . 2147483647 -2147483648 . Unit 2: Objects . See Jupyter Notebook here . Takeaways: . Learned the difference between classes vs. objects | Classes are blueprints for creating objects | Objects are instances within a class | Methods: certain set of code that runs a specific task | Class attributes are inherited by objects | Learned about myPainter in Code.org | Non static methods are dot operators | Overloaded methods give multiple methods the same name with different signatures | Void methods don&#39;t return values | Non void methods return a value of the same type defined in the method signature | Strings are created with String class constructor | Wrapper class: integer and double class are part of the java.lang package | Comparing numbers and objects using .equals() | static methods are a part of a class instead of an instance of a class which is why it&#39;s in a bracket in the class | class methods were just like in Code.org lessons | math classes are static that directly invoke methods | . public class ComparingObjects { public static void main(String[] args) { //creating constructor of the Double class Double x = new Double(100.50); //creating constructor of the Long class Long y = new Long(12345); //invoking the equals() method System.out.println(&quot;Objects are not equal, hence it&#39;s &quot; + x.equals(y)); } } ComparingObjects.main(null); // comparing objects using .equals() . Objects are not equal, hence it&#39;s false . public class JavaMathExample1 { public static void main(String[] args) { double x = 28; double y = 4; // return the maximum of two numbers System.out.println(&quot;Maximum number of x and y is: &quot; +Math.max(x, y)); // return the square root of y System.out.println(&quot;Square root of y is: &quot; + Math.sqrt(y)); //returns 28 power of 4 i.e. 28*28*28*28 System.out.println(&quot;Power of x and y is: &quot; + Math.pow(x, y)); // return the logarithm of given value System.out.println(&quot;Logarithm of x is: &quot; + Math.log(x)); System.out.println(&quot;Logarithm of y is: &quot; + Math.log(y)); // return the logarithm of given value when base is 10 System.out.println(&quot;log10 of x is: &quot; + Math.log10(x)); System.out.println(&quot;log10 of y is: &quot; + Math.log10(y)); // return the log of x + 1 System.out.println(&quot;log1p of x is: &quot; +Math.log1p(x)); // return a power of 2 System.out.println(&quot;exp of a is: &quot; +Math.exp(x)); // return (a power of 2)-1 System.out.println(&quot;expm1 of a is: &quot; +Math.expm1(x)); } } JavaMathExample1.main(null); . Maximum number of x and y is: 28.0 Square root of y is: 2.0 Power of x and y is: 614656.0 Logarithm of x is: 3.332204510175204 Logarithm of y is: 1.3862943611198906 log10 of x is: 1.4471580313422192 log10 of y is: 0.6020599913279624 log1p of x is: 3.367295829986474 exp of a is: 1.446257064291475E12 expm1 of a is: 1.446257064290475E12 . Unit 3: Boolean . See Jupyter Notebook #1 here . See Jupyter Notebook #2 here . Takeaways: . Whether boolean expression is true or false dictates whether the code will run | If-else statements sets up alternate code if the first expression turns false | Else-if statements allow for more conditions to be defined | De Morgan&#39;s law: logical operators &amp;&amp; (and) ll(or) and !(not) | Comparing objects through == | Compound boolean expression check multiple values in a single statement with &amp;&amp; - like DeMorgan&#39;s Law | . public class Test1 { public static void main(String[] args) { boolean cleanedRoom = true; boolean didHomework = false; if (cleanedRoom &amp;&amp; didHomework) { System.out.println(&quot;You can go out&quot;); } else { System.out.println(&quot;No, you can&#39;t go out&quot;); } } } Test1.main(null); . No, you can&#39;t go out . Unit 4: Iteration . See Jupyter Notebook here . Takeaways: . While/for loops: repeats lines of code until a specific condition comes out false; can iterate over multiple elements | For loops are most tested | Strings: array chairs | Nested iteration: loop within a loop like when we did the monkeys and the rhymes | . import java.util.ArrayList; /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkey: a 2D array of Monkey * As well as method to print the Poem */ class Monkey { //The area between class definition and the 1st method is where we keep data for object in Java private static ArrayList&lt;String[]&gt; monkeyList = new ArrayList&lt;String[]&gt;(); //2D Array: AP CSA Unit 8: 2D array of strings private String[] monkeyASCII; /** * Constructor initializes a 2D array of Monkey */ public Monkey(String[] monkeyASCII) { this.monkeyASCII = monkeyASCII; monkeyList.add(monkeyASCII); } /** * Loop and print monkey in array * ... repeat until you reach zero ... */ public static void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java with Objects!!!&quot;); // monkey (non-primitive) defined in constructor knows its length int monkeyCount = monkeyList.size(); for (int i = 1; i &lt;= monkeyCount; i++) //loops through 2D array length forwards { //this print statement shows current count of Monkey // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkey jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; i; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeyList.get(row).length; col++) { // prints specific part of the monkey from the column System.out.print(monkeyList.get(row)[col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;Too many monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { Monkey monkey0 = new Monkey(new String[]{ &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }); Monkey monkey1 = new Monkey(new String[]{ &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }); Monkey monkey2 = new Monkey(new String[]{ &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }); Monkey monkey3 = new Monkey(new String[]{ &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }); Monkey monkey4 = new Monkey(new String[]{ &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }); Monkey.printPoem(); //a new monkey list and output in one step } } Monkey.main(null); . Monkey Jumpers Poem in Java with Objects!!! 1 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ 2 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ 3 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 Too many monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Unit 5: Writing Classes . See Jupyter Notebook here . Takeaways: . Classes are blueprints to create objects and define attributes | Instances: attributes, constructors, methods, objects | Public classes: no restricted access - constructors | Private classes: restricted access - instance variables | Accessor method (getter): allows other objects to obtain values of instance variables or static variables | Non void methods return a single value | toString() method is a overridden method that provides description of a specific object | Mutator Method (setter): void method that changes value of instance variables/static variable | . Unit 6: Arrays . See Jupyter Notebook #1 here . See Jupyter Notebook #2 here . Takeaways: . Arrays: one type of data storage | Reference types | Need import java.util Arrays | Initialize arrays using constructors | Access elements through arrayName[index] | . Reflection . Coming into AP CSA with absolutely no background did make the beginning of the year a little difficult. I remember feeling confused and unsure about a lot of concepts my classmates already knew. However, I soon started finding my rhythm. I began feeling more comfortable asking for help to Mr. M and my peers. I felt like the lessons were important for me to learn and apply the material. I learned the importance of practical application and creating tangible projects. My favorite activity of the year was defining the N@TM project because it was cool to see the intersection of code and Physics. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/extra/2022/11/06/Endoftheyear.html",
            "relUrl": "/extra/2022/11/06/Endoftheyear.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Unit 8 - 2D Arrays",
            "content": "Learning Objective! . Represent collections of related primitive and object reference data using two dimensional array objects. . 2D Array Vocab: . Array = a data structure used to implement a collection (list) of primitive or object reference data | Element = a single value in the array | Index = the position of the element in the array (starts from 0) | Array Length = the number of elements in the array Is public, so can be accessed in any class | Is also final, so can’t change it after array has been created | . | . The Basics: . A 2D array is an array of arrays, and can be a better way to store data | Declaring a 2D array: DataType[][] nameOf2DArray | . | Initializing a 2D array DataType[][] nameOf2DArray = new DataType[r][c]; r = # of rows The # of arrays in the array | r = list.length c = # of columns | . | The # of elements in the inner arrays | c = list[0].length | . | . | . | . Initializing a Sample Array: . public class Test { public static void main(String[] args) { int[][] arr = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } }; System.out.println(&quot;arr[0][0] = &quot; + arr[0][0]); System.out.println(&quot;arr[1][2] = &quot; + arr[1][2]); System.out.println(&quot;arr[2][1] = &quot; + arr[2][1]); } } Test.main(null); . arr[0][0] = 1 arr[2][0] = 6 arr[2][1] = 8 . Accessing and Updating Elements of a 2D Array: . nameOf2DArray[r][c] | . Hack 1: Access the last element of the 2D Array list: . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;a&quot;, &quot;f&quot;, &quot;g&quot; }, { &quot;b&quot;, &quot;e&quot;, &quot;h&quot; }, { &quot;c&quot;, &quot;d&quot;, &quot;i&quot; } }; System.out.println(arr[arr.length - 1][arr[0].length - 1]); } } Test.main(null); . i . a quick tip for the future: list[list.length - 1][list[0].length - 1] | Updating an element: list[r][c] = value; | . | . Hack 2: Changing a Value: . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; arr[2][0] = &quot;Athens&quot;; System.out.println(arr[2][0]); } } Test.main(null); . Athens . Nested Loops, Our Beloved: . You can use Nested Loops to traverse 2D Arrays for example: to print out an entire array in order, you need to use these | . | . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;a&quot;, &quot;f&quot;, &quot;g&quot;, &quot;l&quot; }, { &quot;b&quot;, &quot;e&quot;, &quot;h&quot;, &quot;k&quot; }, { &quot;c&quot;, &quot;d&quot;, &quot;i&quot;, &quot;j&quot; } }; for (int row = 0; row &lt; 3; row++) { for (int col = 0; col &lt; 4; col++) { System.out.print(arr[row][col] + &quot; &quot;); } System.out.println(&quot; &quot;); } } } Test.main(null); . a f g l b e h k c d i j . Make sure your columns for loop is always inside your rows for loop! Unless you want it printed the other way of course | . | Print spaces and lines in between to make a neater matrix | . Hack 3: Unknown Dimensions: . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; for (int row = 0; row &lt; 3; row++) { for (int col = 0; col &lt; 3; col++) { System.out.print(arr[row][col] + &quot; &quot;); } System.out.println(&quot; &quot;); } } } Test.main(null); . Atlanta Baltimore Chicago Australia Boston Cincinnati Austin Beaumont Columbus . Searching for a Value in a 2D Array: . Here&#39;s a quick example to illustrate: | . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; String match = &quot;&quot;; String name = &quot;Boston&quot;; for (String[] row : arr) { for (String item : row) { if (item.equals(name)) { match = name; } } } if (match.length() == 0) { System.out.println(&quot;No Match!&quot;); } else { System.out.println(name); } } } Test.main(null); . Boston . Note: in the code, you see the use of : which essentially means within. | . Hack 4: Finding the Min/Max Value: . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; String longest = arr[0][0]; for (int i = 0; i &lt; arr.length; i++){ for (int j = 0; j &lt; arr[i].length; j++){ if (longest.length() &lt; arr[i][j].length()) { longest = arr[i][j]; } } } System.out.println(longest); String shortest = arr[0][0]; for (int i = 0; i &lt; arr.length; i++){ for (int j = 0; j &lt; arr[i].length; j++){ if (shortest.length() &gt; arr[i][j].length()) { shortest = arr[i][j]; } } } System.out.println(shortest); } } Test.main(null); . Cincinnati Boston . HW! . Please submit screenshots of your 4 hacks up and running to our Google Form, which also has a few 2D array related multiple choice questions. . Additionally, Complete and send a screenshot of your code for 2017 FRQ Q4: Successor Array in that same google form. . Please submit as a pair or group. . 2017 FRQ - Part A . public static Position findPosition(int num, int[][] intArr) { for (int row=0; row &lt; intArray.length; row++) { for (int col=0; col &lt; intArray[0].length; col++) { if (intArray[row][col] == num) { return new Position(rol, col); } } } return.null; } . 2017 FRQ - Part B . public static Position[][] getSuccessorArray(int[][] intArr) { Position[][] newArray = new Position[intArray.length][intArray[0].length]; for (int row=0; row &lt; intArray.length; row++) { for (int col=0; col &lt; intArray[0].length; col++) { newArray[row][col] = findPosition(intArray[row][col]+1, intArray); } } return newArray; } . Christmas Tree EC . public class ChristmasTree { public static void main(String[] args) { String[][] tree = { { &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;}, { &quot; &quot;, &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;, &quot; &quot;}, { &quot; &quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot; &quot;}, { &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;, &quot;*&quot;}, }; // Print the last element in the array! for (String[] row : tree) { for (String item : row) { System.out.print(item + &quot; &quot;); } System.out.println(&#39; &#39;); } } } ChristmasTree.main(null); . * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/10/27/2DArray.html",
            "relUrl": "/jupyter/2022/10/27/2DArray.html",
            "date": " • Oct 27, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Unit 6 Arrays",
            "content": "6.1 Array Creation and Access . Used to store one data type | Fixed size and canno tbe chnaged | Import array through: import java.util.Arrays; | Making Arrays: using constructors or using pre-initialized arrays | . 6.2 Traversing Arrays . For loop or while loop | Bound errors: appears when using loops to access array elements | When there&#39;s not enough items to reach an index | . 6.3 Enhanced For Loops . Traverse through most data structures | Elements in array need to have something done to | Mutator methods: set the value on instance variables | . 6.4 Developing Algorithms using Arrays . Minimum and maximum of a list of elements | Compute sum, average, or mode | If you want to find if an array has a specific property | Can determine duplicates | .length can be used to find the length of an array | array [i] to find the value | change value: array [i] = new element | . Hack 1 . for (int num : arrayOne) { if (num % 2 == 0) { System.out.println(num); } } . Hack 2 . The answer is B . Hack 3 . import java.util.Arrays; public class arraySorter { public static void main(int[] a) { Arrays.sort(a); for (int i : a) { System.out.println(i); } } } int[] myNumbers = new int[] {5, 3, 4, 1, 2}; arraySorter.main(myNumbers); . 1 2 3 4 5 . Hack 4 . The answer is B . Hack 5 . public class ForEachDemo { public static void main(String[] args) { int[] highScores = { 10, 9, 8, 8}; String[] names = {&quot;Jamal&quot;, &quot;Emily&quot;, &quot;Destiny&quot;, &quot;Mateo&quot;}; // for each loop with an int array for (int value : highScores) { System.out.println( value ); } // for each loop with a String array for (String value : names) { System.out.println(value); // this time it&#39;s a name! } } } . Hack 6 . The answer is D . Hack 7 . public class leftShifted { public static int[] main(int[] a) { int first = a[0]; for (int i=1; i&lt;a.length; i++) { a[i-1] = a[i]; } a[a.length-1] = first; return a; } } int[] array = {7,9,4}; int[] array_out = leftShifted.main(array); Arrays.toString(array_out) . [9, 4, 7] . Hack 8 . public class findDuplicate { public static int main(int[] a, int b) { int d=0; for (int number : a) { if (number==b) { d++; } } return d; } } int[] array = {7,7,9,4}; findDuplicate.main(array, 7); . 2 . Hack 9 . public class reverseString { public static char[] main(char[] s) { char[] reverse = new char[s.length]; for (int i=s.length-1; i&gt;=0; i--) { reverse[s.length-i-1] = s[i]; } return reverse; } } String s = &quot;hello&quot;; char[] c = s.toCharArray(); char[] reverse = reverseString.main(c); // Arrays.toString(reverse) String reversed = new String(reverse); System.out.println(reversed); . olleh . FRQ Part A . public void addMembers(String[] names, int gradYear) { for (String name : names) { MemberInfo member = new MemberInfo(name, gradYear, true); memberList.add(member); } } .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/25/Arrays.html",
            "relUrl": "/collegeboard/2022/10/25/Arrays.html",
            "date": " • Oct 25, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Writing Classes Lessons",
            "content": "5.1 Anatomy of a Class . Class: blueprint used to create objects | Instances, attributes, constructors, methods | Objects: instances of a class | public: no restricted access -- classes and constructors | private: restrict access -- instance variables | . 5.2 Constructors . initializes instance variables when an object is created | Each object has attributes which are the instance of a class | Constructors set the initial state of an object by assigning initial values to instance variables | . 5.3 Comments . ignored by compiler | make code more readable | not required for the AP exam | . 5.4 Accessor Method . Allows objects outside of the class to obtain values | non void returns a single value | toString() Method | . 5.5 Mutator Method . Don&#39;t return values | Must be used when different classes need to modify instance variables | . public class cow { } Cow myCow = new Cow(); . public class Snack{ private String name; // instance variable 1 private int calories; // instance variable 2 public Snack(){ // constructor with no argument name = null; calories = 0; } public Snack (String n, int c){ name = n; calories = x; } public String getName(){ // calling a method and accessor return name; } public int getCalories(){ return calories; } public void setName(String n){ name = n; } public static void main(String[] args){ Snack one = new Snack(&quot;Chips&quot;, 100); System.out.println(one.getName()); } } Snack.main(null); . 2019 FRQ Question 2 . public class StepTracker { private int minSteps; private int totalSteps; private int numDays; private int numActiveDays; public StepTracker(int threshold) { minSteps = threshold; totalSteps = 0; numDays = 0; numActiveDays = 0; } public void addDailySteps(int steps) { totalSteps += steps; numDays++; if (steps &gt;= minSteps) { numActiveDays++; } } public int activeDays() { return numActiveDays; } public double averageSteps() { if (numDays == 0) { return 0.0; } else { return (double) totalSteps / numDays; } } } .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/20/Writingclasses.html",
            "relUrl": "/collegeboard/2022/10/20/Writingclasses.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 3 Booleans",
            "content": "3.1 Boolean Expressions . Represent logical and tell whether something is true or false | =, !, &lt;, &gt;, &gt;= are different operators | . 3.2 If Statements and Control Flow . Perform computation depending on whether a Boolean conditions is true or false | If Statements: If the statement is true, it will return true; otherwise false | . 3.3 If-Else Statements . Run a block of code if there is more than one alternative | . 3.4 Else-If Statements . More conditions | If the first condition is proven false, the other conditions will be evaluated | . 3.5 Compound Boolean Statements . Nested if statements: if-statements within if-statement -- allows more flexibility to run the code; if outer if-statement is false, internal if-statement won&#39;t be evaluated | Logical operators: &amp;&amp; (and) ll(or) and !(not) | Short circulated evaluation: the result of a compound Boolean expression can be determined just by looking at a few expressions | . 3.6 Compound Boolean Expressions . De Morgan&#39;s laws: simplifies Boolean expressions | !(a&amp;7B) = (!a ll !b) | !(a ll b) = (!a &amp;&amp; !b) | . 3.7 Comparing Objects . Use &#39;==&#39; to see if two objects are referring to aliases for the same object | Use &#39;.equals()&#39; to see if the attributes of two objects are the same | Ex: vehicle car = new Vehicle(&quot;blue,&quot; 4); vehicle car2 = new Vehicle (&quot;blue,&quot; 4) --&gt; Vehicle blue car = car | Both the vehicles have the same attributes | . boolean cloudy = true; boolean rainy = false; if (!cloudy &amp;&amp; !rainy) { System.out.println(&quot;Don&#39;t forget to bring a hat!&quot;); } . 2019 FRQ 1 Part A . public static int numberOfLeapYears(int year1, int year2) { int count = 0; for (int y = year1; y &lt;= year2; y++) { if (isLeapYear(y)) { count++; } } return count; } . 2019 Part B . public static int dayOfWeek(int month, int day, int year) { int startDay = firstDayOfYear(year); int nthDay = dayOfYear(month, day, year); int returnDay = (startDay + nthDay - 1) % 7; return returnDay; } . Quizziz . . Even Numbered Conditional Exercises . Problem 2 . import java.util.Scanner; public class Problem2 { public static void main(String[] Strings) { Scanner input = new Scanner(System.in); System.out.print(&quot;What is the coefficient A?: &quot;); double a = input.nextDouble(); System.out.print(&quot;What is the coefficient B?: &quot;); double b = input.nextDouble(); System.out.print(&quot;What is the coefficient C?: &quot;); double c = input.nextDouble(); double result = b * b - 4.0 * a * c; if (result &gt; 0.0) { double r1 = (-b + (b * b - 4 * a * c)/(2*a)); double r2 = (-b - (b * b - 4 * a * c)/(2*a)); System.out.println(&quot;The roots are &quot; + r1 + &quot; and &quot; + r2); } else if (result == 0.0) { double r1 = -b / (2.0 * a); System.out.println(&quot;The root is &quot; + r1); } else { System.out.println(&quot;The equation has no real roots.&quot;); } } } Exercise2.main(null); . Input a: Input b: Input c: The roots are -0.20871215252208009 and -4.7912878474779195 . Problem 4 . public class Problem4 { public static void main(String[] args) { Scanner input = new Scanner(System.in); System.out.print(&quot;number: &quot;); double number = input.nextDouble(); System.out.println(number); if (number &gt; 0) { System.out.println(&quot;positive&quot;); } else if (number == 0) { System.out.println(&quot;zero&quot;); } else { System.out.println(&quot;neg&quot;); } if (number &lt; 1) { System.out.println(&quot;neg&quot;); } else if (number &gt; 1000000) { System.out.println(&quot;too big &quot;); } } } Problem4.main(null); . number: 25.0 positive . Problem 6 . import java.util.Scanner; public class Problem6 { public static void main(String[] args) { Scanner in = new Scanner(System.in); System.out.print(&quot;Input number: &quot;); double x = in.nextDouble(); System.out.print(&quot;Input another number: &quot;); double y = in.nextDouble(); x = Math.round(x * 1000); x = x / 1000; y = Math.round(y * 1000); y = y / 1000; if (x == y) { System.out.println(&quot;They are the same up to three decimal places&quot;); } else { System.out.println(&quot;They are different&quot;); } } } Problem6.main(null); . Input number: Input another number: They are different . Problem 8 . Wasn&#39;t sure how to do this one. Had to look at solutions . import java.util.Scanner; public class Exercise8 { public static void main(String[] args) { Scanner in = new Scanner(System.in); System.out.print(&quot;Input an alphabet: &quot;); String input = in.next().toLowerCase(); boolean uppercase = input.charAt(0) &gt;= 65 &amp;&amp; input.charAt(0) &lt;= 90; boolean lowercase = input.charAt(0) &gt;= 97 &amp;&amp; input.charAt(0) &lt;= 122; boolean vowels = input.equals(&quot;a&quot;) || input.equals(&quot;e&quot;) || input.equals(&quot;i&quot;) || input.equals(&quot;o&quot;) || input.equals(&quot;u&quot;); if (input.length() &gt; 1) { System.out.println(&quot;Error. Not a single character.&quot;); } else if (!(uppercase || lowercase)) { System.out.println(&quot;Error. Not a letter. Enter uppercase or lowercase letter.&quot;); } else if (vowels) { System.out.println(&quot;Input letter is Vowel&quot;); } else { System.out.println(&quot;Input letter is Consonant&quot;); } } } Exercise8.main(null); . Input an alphabet: Input letter is Consonant . Problem 10 . public class Problem10 { public static void main(String[] args) { System.out.println(&quot;The First 10 Natural Numbers are&quot;); for(int i = 1; i &lt;= 10; i++) { System.out.println(i); } } } Problem10.main(null); . The First 10 Natural Numbers are 1 2 3 4 5 6 7 8 9 10 . Problem 12 . import java.util.Scanner; public class Problem12 { public static void main(String[] args){ Scanner input = new Scanner(System.in); int sum = 0; int avg = 0; System.out.println(&quot;Input the 5 numbers: &quot;); for(int i=1; i&lt;=5; i++){ int num = input.nextInt(); sum += num; } System.out.println(&quot;The sum of the given number is &quot; + sum); avg = sum/5; System.out.println(&quot;The average of the given number is &quot; + avg); } } Problem12.main(null); . Input the 5 numbers: The sum of the given number is 15 The average of the given number is 3 . Problem 14 . public class Problem14 { public static void main(String[] args) { int num = 5; for(int i = 1; i &lt;= 10; ++i) { System.out.printf(&quot;%d * %d = %d n&quot;, num, i, num * i); } } } Problem14.main(null); . 5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 5 * 6 = 30 5 * 7 = 35 5 * 8 = 40 5 * 9 = 45 5 * 10 = 50 . Problem 16 . public class Problem16 { public static void main(String[] args) { System.out.print(&quot;rows: &quot;); Scanner input = new Scanner(System.in); int num = input.nextInt(); System.out.println(num); for (int i = 1; i &lt;= num; i++) { for (int j = 1; j &lt;= i; j++) { System.out.print(j); } System.out.println(); } } } Problem16.main(null); . rows: 4 1 12 123 1234 . Problem 18 . I didn&#39;t know how to do this one so I looked at solutions . import java.util.Scanner; public class Exercise18 { public static void main(String[] args) { int i,j,n,k=1; System.out.print(&quot;Input number of rows : &quot;); Scanner in = new Scanner(System.in); n = in.nextInt(); for(i=1;i&lt;=n;i++) { for(j=1;j&lt;=i;j++) System.out.print(k++); System.out.println(&quot;&quot;); } } } Exercise18.main(null); . Input number of rows : 1 23 456 78910 . Problem 20 . Didn&#39;t know how to do this one either . import java.util.Scanner; public class Main { public static void main(String[] args) { int numberOfRows; System.out.print(&quot;Input number of rows : &quot;); Scanner in = new Scanner(System.in); numberOfRows = in.nextInt(); int number = 1; for (int row = 1; row &lt;= numberOfRows; row++) { for (int column = 1; column &lt;= row; column++) { System.out.print(number + &quot; &quot;); number++; } System.out.println(); } } } Main.main(null); . Input number of rows : 1 2 3 4 5 6 .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/18/Boolean.html",
            "relUrl": "/collegeboard/2022/10/18/Boolean.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Unit 1 Primitives",
            "content": "Learning Objectives . System class methods print output to the console. . String literals | Primitive Data Types | Declaring variables to different data types | Use of arithmetic expressions in a program | Data stored in variables | Assignment Statements | . String Literals . Declare a class: public class &quot;name&quot; | Define where the class begins and ends through curly brackets | Inside the curly brackets (class) you must have methods - at least one | Main methods: public static void main(String[] args) | Another curly bracket to define where the method begins and ends -- indented this time | System.out.println (&quot;&quot;); -- lets us output text to our console, must end with a semicolon | public class MyFirstProgram { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } MyFirstProgram.main(null) . Hello World! . Declaring and Initializing Variables . Variables defined within a method are local variables | &quot;Int&quot; can hold any whole number | You need an initial value in order to change it or increment it | No quotation mark around variable because this will output the value stored by variable | public class UsingAVariable{ public static void main(String[] args) { int x; x = 10; x = 5; x = x + 1; int myFinalScore = 10; System.out.println(myFinalScore); } } UsingAVariable.main(null) . 10 . 8 Primitve Data Types . Byte: minimum value of -128 and maximum value of 127 (inclusive). It is useful for saving memory in large arrays | Short: Minimum value of -32,768 and maximum value of 32,767. Same purpose as Byte | Int: Any integer or whole number | Long: Greater range than int | Float: floating point numbers that tend to have decimals | Double: not good for precise data | Boolean: logic that evaluates whether a condition is true or false | Char | . public class PrimitiveDataTypes { public static void main(String[] args) { int a = 3; double b = 3.0; b = 3; // only works for double a = (int) 3.999; // casting cuts off everything after the decimal System.out.println(a); boolean c = true; c = false; System.out.println(c); } } PrimitiveDataTypes.main(null) . 3 false . Arithmetic Operations . public class Operators { public static void main(String[] args) { int x; x = 3; System.out.println(3+3); System.out.println(3-3); System.out.println(3*3); System.out.println(3/3); x = 3*3; x = 3 * x; System.out.println(4 % 3); } } Operators.main(null) . 6 0 9 1 1 . Practice 2013 FRQ 1 . Part A . public DownloadInfo getDownloadInfo(String title) { // define the class for (DownloadInfo info : downloadList){ if (info.getTitle().equals(title)){ return info; } } return null; // method inside the class } . Part B . public void updateDownloads(List&lt;String&gt; titles) { for (String title : titles) { DownloadInfo foundInfo = getDownloadInfo(title); // calls method if (foundInfo == null){ downloadList.add(new DownloadInfo(title)); // makes new object } else { foundInfo.incrementTimesDownloaded(); } } } . Resources Used . https://www.youtube.com/watch?v=BjRvQbWsTfM&amp;ab_channel=BillBarnum . https://uploads-ssl.webflow.com/605fe570e5454a357d1e1811/60a17976f1de864fab86c46a_AP-CS-A-Study-Guide-Unit-1.pdf . Homework from Presentation . Hack 1.1 . public class Printing { public static void main(String[] args){ System.out.println(&quot;Hetvi Trivedi&quot;); System.out.println(&quot;JEHB&quot;); } } Printing.main(null); . Hetvi Trivedi JEHB . Hack 1.2 . public class Biodata { public static void main(String[] args) { String name = &quot;Hetvi&quot;; int age = 17; boolean underclassman = false; double height = 5.3; System.out.println(name); System.out.println(age); System.out.println(underclassman); System.out.println(height); } } Biodata.main(null); . Hetvi 17 false 5.3 . Hack 1.3 . public class Num { public static void main(String[] args) { double num = ( ( ( 6 * 1234124 ) / 11345 ) - 890809 + 90800 ) % 980098; num = num / 100; System.out.println(num); } } Num.main(null); . -7993.57 . Hack 1.4 . Used operators slightly different in a more user friendly way! | . import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Greatest Common Factor&quot;); System.out.println(&quot;5 - Least Common Multiple&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: // two numbers from user input Scanner input = new Scanner(System.in); System.out.println(&quot;Enter a number: &quot;); int a = input.nextInt(); System.out.println(&quot;Enter another number: &quot;); Scanner input2 = new Scanner(System.in); int b = input2.nextInt(); int c = Math.min(a, b); input.close(); input2.close(); int gcd = 1; for(int i = c; i &gt; 0; i--){ // descending if(a % i == 0 &amp;&amp; b % i == 0){ gcd = i; break; // exit loop if it is a factor } } System.out.println(&quot;The greatest common factor of &quot; + a + &quot; and &quot; + b + &quot; is &quot; + gcd); break; case 5: Scanner num1 = new Scanner(System.in); System.out.println(&quot;Enter a number: &quot;); int x = num1.nextInt(); Scanner num2 = new Scanner(System.in); System.out.println(&quot;Enter another number: &quot;); int y = num2.nextInt(); num1.close(); num2.close(); int m = Math.max(x, y); // least common multiple must be at least as large as the larger of the two numbers while (true) { // repeat until break if(m % x == 0 &amp;&amp; m % y == 0){ System.out.println(&quot;The least common multiple of &quot; + x + &quot; and &quot; + y + &quot; is &quot; + m); break; } m += 1; } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Greatest Common Factor 5 - Least Common Multiple 0 - Quit - 4: Enter a number: Enter another number: The greatest common factor of 4 and 5 is 1 0: Goodbye, World! . Hack 1.5 . public class CastActivity { public static void main(String[] args) { double dNum = 123456.123456; int dInt = (int) dNum; System.out.println(&quot;the double to the integer is: &quot; + dInt); } } CastActivity.main(null); . the double to the integer is: 123456 .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/15/primitivedatatypes.html",
            "relUrl": "/collegeboard/2022/10/15/primitivedatatypes.html",
            "date": " • Oct 15, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit 2 Objects",
            "content": "Learning Objectives . Object oriented programming | Objects, classes, and methods | Creating classes and methods | Declaring methods | Calling methods | . Object Oriented Programming . Organizes software design around objects | Compartmentalizes data and functions in such a way that data and the functions that operate on data are bound together | . Objects, Classes, and Methods . Classes are a template or a blueprint from which objects are created. | Objects created under the same class will share common methods and attributes. | Objects are instances of a class. | Methods, otherwise known as functions, are a set of code that perform a specific task. | Example: class fruit contains an object like an apple | Class attributes are things that the objects inherit | Example: calorie count or quantity | Methods of a class could be stored or consumed | . Creating Classes and Objects . An object is initialized by calling a class constructor | . Painter myPainter = new Painter (); . Declaring Methods . Access modifier: public, protected, private, or default | Return type: No return value would mean void | Method name: name of method | Parameter list: the list of variables the method will operate on based on what&#39;s in the parentheses | Exception list: exceptions during runtime | Method body: Internal code the method will execute | . public int max (int x, int y) // modifier, return type, method name, parameter list { if (x&gt;y) // body of the method return x; else return y; } . Calling Methods . Advantageous because it allows for code reuse and optimization | Calling a method looks like this: methodName (parameter1, parameter2); | Calling an object&#39;s method: objectReference.methodName(parameter 1, parameter 2); | . Practice with 2021 FRQ 1 . Part A . public int scoreGuess (String guess) { int count = 0; for (int i = 0; i &lt;= secret.length() - guess.length(); i++) { if (secret.substring (i, i + guess.length()).equals(guess)) { count++; } } return count * guess.length() * guess.length(); } . Part B . public String findBetterGuess( String guess1, String guess2) // defines a method { if (scoreGuess(guess1) &gt; scoreGuess(guess2)) { return guess1; } if (scoreGuess(guess2) &gt; scoreGuess(guess1)) { return guess2; } if (guess1.compareTo(guess2) &gt; 0) { return guess1; } return guess2; } . Resources . https://www.youtube.com/watch?v=7Nx4I1EK-_Q&amp;ab_channel=TokyoEdtech . https://www.youtube.com/watch?v=8YloGeUnkxY&amp;ab_channel=AjayGandecha . GUI Console with Classes . https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/05/MathConsole.html#Desktop-GUI-Menu .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/15/Objects.html",
            "relUrl": "/collegeboard/2022/10/15/Objects.html",
            "date": " • Oct 15, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Iteration Lesson",
            "content": "Iteration in Java . Lesson Purpose: Review types of iteration and usages . Lesson Objectives: . review while/for loops | review string | nested iteration review | Iteration may be one of the most crucial features for any programming language, since they allow computers to do what they do best: do copious amounts of menial tasks quickly and efficiently. . Of course, Java can also perform iteration using numerous different structures. Today we&#39;ll be going over some of them. . First of all, the exam weights Iteration as 17.5-22.5% of the test, with 7-9 MC and part of FRQ 1. This is one of the largest if not the largest unit, so understanding how iteration works is critical to performance on the test as well as in basically all aspects of coding. . The overall purpose of iteration is to simplify code by allowing it to repeat. Loops will usually include some sort of conditional to check against, and while that conditional is true, the code within the loop will repeat. . 4.1 While Loops (2.B, 3.C) . Repeats lines of code until a certain condition evaluates to false | . While loops consist of 2 portions: the boolean expression and the brackets which store the looping code inside. . while (condition) { ... } . The boolean expression is checked before the loop is started and every time the loop ends and is about to start anew. Usually, inside the loop something is done that slightly changes the conditions for the boolean expression until it reads false and ends. In the example below, the condition is x &gt; 0, meaning that x has to be changed for the loop to stop. Inside the loop, x is decremented by 1 every time, changing the conditions over and over again until it finally returns false and terminates the while loop. . int x = 5; // The boolean expression in this case is x &gt; 0 while (x &gt; 0) { System.out.println(x); x--; } . 5 4 3 2 1 . One of the most basic applications of while loops is its ability to iterate over numerous elements. One such example would be summing up the numbers in an array: . int[] array = {3, 7, 0, 2, 4, 5, 9, 1, 3, 6, 3}; int total = 0; int i = 0; while (i &lt; array.length) { total += array[i]; i++; } System.out.println(total); . 43 . One unique application of while loops lie in infinite while loops, loops that run over and over again permanently. This is usually accomplished by setting the boolean condition to be true at all times. The only way to stop these loops are to use a break command, which ends the loop regardless of the conditions present. . This can be used for various things, like having a running process at all times or constantly taking in input from the user, like the example below: . import java.util.Scanner; Scanner input = new Scanner(System.in); String choice; while (true) { System.out.println(&quot;Would you like to continue: &quot;); choice = input.nextLine(); if (choice.equals(&quot;No&quot;)) { break; } } . Would you like to continue: Would you like to continue: Would you like to continue: . Hacks . Say you have a company that makes a profit of $5,450,000 this year. Every year, the company has a profit increase of 5%. Determine how many years it would take to make a profit of at least $30,000,000 using a while loop. . public class WhileLoops { public static void main(String[] args) { int profit = 5450000; int i = 0; while (profit &lt; 30000000) { profit *= 1.05; i++; } System.out.println(i); } } WhileLoops.main(null); . 35 . 4.2 For Loops . One of the most tested concepts in the APCSA exam | Skills 3.C, 4.C, and 5.C | . Three Parts of a For Loop . Initialization of a variable | Test condition | . for (initialize; test condition; change) { loop body } . Example . for (int x = 1; x &lt;= 5; x++) { System.out.println(x); } . 1 2 3 4 5 . Control Flow Diagram . The code in the initialization area is executed only one time before the loop begins | the test condition is checked each time through the loop and the loop continues as long as the condition is true | the loop control variable change is done at the end of each execution of the body of the loop | When the loop condition is false, execution will continue at the next statement after the body of the loop. | . Hacks . - Change the code above to iterate instead from 1-5 to 10-15. (Print numbers 10-15) . - Convert 10 numbers of your choice from two temperature units (F to C, C to F, C to K) . public class ForLoops { public static void main(String[] args) { for (int i = 10; i&lt;= 15, i++); { System.out.println(i) } } } ForLoops.main(null); . | for (int i = 10; i&lt;= 15, i++); { &#39;;&#39; expected | System.out.println(i) &#39;;&#39; expected . 4.3 Loops and Strings . Strings can also be manipulated through the use of iteration. Strings can actually be thought of as an array of chars, so each char can also be manipulated as well! . String name = &quot;CodeCodeCode&quot;; for (int i = 0; i &lt; name.length(); i+=2) { System.out.println(name.substring(i,i+2)); } . Co de Co de Co de . 4.4 Nested Iteration . Nested iteration is where there is a loop within a loop. It&#39;s kind of similar to the nested conditional that we learned yesterday in syntax. . A typical usage of nested looping is for two dimensions, like getting the pixel value of each pixel in an image across the columns and rows of pixels. Or, it can be used to print across these rows and columns to display some text . A very common nested iteration is the use of nested for loops, as they are concise enough to be used within each other without getting confused. Here is an example of code that uses nested for loops: . for (int row = 0; row &lt; 5; row ++) { for (int column = 0; column &lt; 4; column++) { System.out.print(&#39;*&#39;); } System.out.println(); } . **** **** **** **** **** . As seen, the code above has an output of 20 stars, with 5 rows and 4 columns. The amount of times the nested iterations loop in total will be the amount the outer one iterates multiplied by the inner one. The inner loop must finish all of its iterations before the outer loop can continue. . Question: . What happens if you swap the inner with the outer loop? What change will the output make? | . There can also be nested while loops, although they are not as practical, having to write out those variables outside of the condition. . import java.util.ArrayList; /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkey: a 2D array of Monkey * As well as method to print the Poem */ class Monkey { //The area between class definition and the 1st method is where we keep data for object in Java private static ArrayList&lt;String[]&gt; monkeyList = new ArrayList&lt;String[]&gt;(); //2D Array: AP CSA Unit 8: 2D array of strings private String[] monkeyASCII; /** * Constructor initializes a 2D array of Monkey */ public Monkey(String[] monkeyASCII) { this.monkeyASCII = monkeyASCII; monkeyList.add(monkeyASCII); } /** * Loop and print monkey in array * ... repeat until you reach zero ... */ public static void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java with Objects!!!&quot;); // monkey (non-primitive) defined in constructor knows its length int monkeyCount = monkeyList.size(); for (int i = 1; i &lt;= monkeyCount; i++) //loops through 2D array length forwards { //this print statement shows current count of Monkey // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkey jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; i; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeyList.get(row).length; col++) { // prints specific part of the monkey from the column System.out.print(monkeyList.get(row)[col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;Too many monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { Monkey monkey0 = new Monkey(new String[]{ &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }); Monkey monkey1 = new Monkey(new String[]{ &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }); Monkey monkey2 = new Monkey(new String[]{ &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }); Monkey monkey3 = new Monkey(new String[]{ &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }); Monkey monkey4 = new Monkey(new String[]{ &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }); Monkey.printPoem(); //a new monkey list and output in one step } } Monkey.main(null); . Monkey Jumpers Poem in Java with Objects!!! 1 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ 2 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ 3 little monkey jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 Too many monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Some modification to the code has been made, such as making monkeys an object, but the overall idea remains the same. It first iterates into a row on the 2d array, and then iterates through all columns of that row in the 2d array by using the nested iteration. . Questions: . Do you remember how to make it not backwards? | What would swapping the inner and outer loops do? (assuming that array indices are fixed) | What if we only wanted to print every other monkey? | What if we wanted to print every other body part of the monkey? | public class NestedIteration { public static void main(String[] args) { } } NestedIteration.main(null); . For Each Loops . What is a for each loop? . As the name suggests, for-each loops are similar to for loops. In Java, the for-each loop is used to iterate through elements of arrays and collections (like ArrayList). It is also known as the enhanced for loop. . Here is the syntax for a for-each loop: . for(dataType item : array) { ... } . includes: . array: an array or collection | item: each value in an array or collection | dataType: specify the type of data in the array (int) | . Example . public class ForEachLoops { public static void main(String[] args) { // create an array int[] data = {2, 10, 5, 12}; // for each loop for (int number: data) { System.out.println(number); } } } . Output: . 2 10 5 12 . In this example we used for each loops to iterate through the array, &quot;data&quot; and print out each number. The code is saying that for each value in the array, print out the number. . So why not just stick to the for loop? What&#39;s the purpose? . //For Loop char[] word = {&#39;m&#39;, &#39;o&#39;, &#39;n&#39;, &#39;k&#39;, &#39;e&#39;, &#39;y&#39;}; for (int i = 0; i &lt; word.length; ++ i) { System.out.println(word[i]); } . m o n k e y . //For Each Loop char[] word = {&#39;m&#39;, &#39;o&#39;, &#39;n&#39;, &#39;k&#39;, &#39;e&#39;, &#39;y&#39;}; for (char letter: word) { System.out.println(letter); } . m o n k e y . Both lines of codes yield the same results but the for-each loop is obviously much simpiler and easier to understand. . For each iteration, the for-each loop takes each element of the collection and stores it in a loop variable. Thus, it executes the code written in the body of the loop for each element of the array or collection. . Most importantly, the traversal happens until the last element of the array or collection. No indexing is involved . Pros: . makes code easier to read and understand | eliminates possible coding mistakes | . Cons: . The drawback of the enhanced for loop (for-each loop) is that it cannot traverse the elements in reverse order. In the for each loop you do not have the option to skip any element because it does not work on an index basis. Moreover, you cannot traverse the odd or even elements only. | limited variability to the collection | situational | . Hacks . Could I use a for-each loop to print out 4 of the 5 elements of an array only? . Write a for-each loop that adds up all the values of the array (sum): . int numbers[] = {2, 5, 7, 12} . and print the results . Stream . TODO: Explain Stream (these are extra) . public class Stream { public static void main(String[] args) { } } Stream.main(null); . Final Hacks . Try to write a caesar cipher program that shifts each letter in a message 3 letters forward. Use any of the methods you learned today. Use it to decode the 3 messages we&#39;ve given you! . public class CaesarCipher { public static String decode (String message) { String decoded = &quot;&quot;; for (int i = 0; i&lt;message.length(); i++) { if (message.charAt(i) &lt; &#39;a&#39; || message.charAt(i) &gt; &#39;z&#39;) { decoded += message.charAt(i); continue; } int letter = message.charAt(i)-&#39;a&#39;; int new_letter = (letter+3)%26; decoded += (char)(new_letter+&#39;a&#39;); } return decoded; } public static void main(String[] args) { String message1 = &quot;kfzb gly!&quot;; System.out.println(decode(message1)); String message2 = &quot;zlab zlab zlab&quot;; System.out.println(decode(message2)); String message3 = &quot;prmbozxifcoxdfifpqfzbumfxifalzflrp&quot;; System.out.println(decode(message3)); } } CaesarCipher.main(null); . nice job! code code code supercalifragilisticexpialidocious .",
            "url": "https://hetvit27.github.io/hetvitrivedi/collegeboard/2022/10/10/unit4iteration.html",
            "relUrl": "/collegeboard/2022/10/10/unit4iteration.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Lists and Array Lists",
            "content": "import java.util.ArrayList; ArrayList&lt;String&gt; physics = new ArrayList&lt;String&gt;(); . add(int index, element) . physics.add(&quot;potential energy&quot;); physics.add(&quot;kinetic energy&quot;); physics.add(&quot;conservation of energy&quot;); . true . addAll(int index, Collection collection) . import java.util.ArrayList; ArrayList&lt;String&gt; calculators = new ArrayList&lt;String&gt;(); physics.addAll(calculators); System.out.println(&quot;Calculators:&quot; + physics + &quot; n&quot;); . Calculators:[potential energy, kinetic energy, conservation of energy] . size() This method is used to return the size of the list. . System.out.println(&quot;The number of calculators on the website is currently &quot; + physics.size()); . The number of calculators on the website is currently 3 . clear() This method is used to remove all the elements in the list. However, the reference of the list created is still stored. . calculators.clear(); System.out.println(&quot;Calculators: &quot; + calculators); . Calculators: [] . remove(int index) This method removes an element from the specified index. It shifts subsequent elements(if any) to left and decreases their indexes by 1. . physics.remove(0); System.out.println(&quot;Calculators: &quot; + physics); . Calculators: [kinetic energy, conservation of energy] . remove(element) This method is used to remove the first occurrence of the given element in the list. . physics.add(&quot;Work&quot;); physics.remove(&quot;Potential Energy&quot;); System.out.println(&quot;Calculators&quot; + physics); . Calculators[kinetic energy, conservation of energy, Work] . get(int index) This method returns elements at the specified index. . System.out.println(&quot;The first calculator is &quot; + physics.get(0)); . The first calculator is kinetic energy . set(int index, element) This method replaces elements at a given index with the new element. This function returns the element which was just replaced by a new element. . physics.set(0, &quot;Kinetic Energy&quot;); System.out.println(&quot;Calculators: &quot; + physics); . Calculators: [Kinetic Energy, conservation of energy, Work] . indexOf(element) This method returns the first occurrence of the given element or -1 if the element is not present in the list. . System.out.println(&quot;The gravity calculator is &quot; + physics.indexOf(&quot;the first calculator&quot;)); . The gravity calculator is -1 . lastIndexOf(element) This method returns the last occurrence of the given element or -1 if the element is not present in the list. . System.out.println(&quot;The potential energy calculator is &quot; + physics.indexOf(&quot;Physics Tutoring 1 hr sessions&quot;)); . The potential energy calculator is -1 . equals(element) This method is used to compare the equality of the given element with the elements of the list. . if (physics.equals(calculators) == true) { System.out.println(&quot;The inventory matches the listings!&quot;); } else { System.out.println(&quot;The inventory does not match the listings!&quot;); } . The inventory does not match the listings! . hashCode() This method is used to return the hashcode value of the given list. . System.out.println(&quot;The hashcode for this list is &quot; + physics.hashCode()); . The hashcode for this list is 832184209 . isEmpty() This method is used to check if the list is empty or not. It returns true if the list is empty, else false. . System.out.println(&quot;Calculators is empty &quot; + physics.isEmpty()); . Calculators is empty false . contains(element) This method is used to check if the list contains the given element or not. It returns true if the list contains the element. . System.out.println(&quot;Calculators contains potential energy is &quot; + physics.contains(&quot;potential energy&quot;)); . Calculators contains potential energy is false . containsAll(Collection collection) This method is used to check if the list contains all the collection of elements. . if (physics.containsAll(calculators) == true) { System.out.println(&quot;The calculators are all working&quot;); } else { System.out.println(&quot;The calculators are broken&quot;); } . The calculators are all working . sort(Comparator comp) This method is used to sort the elements of the list on the basis of the given comparator. . Collections.sort(physics); System.out.println(&quot;Calculators arranged &quot; + physics); . Calculators arranged [Kinetic Energy, Work, conservation of energy] .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/10/09/ListsandArrayLists.html",
            "relUrl": "/jupyter/2022/10/09/ListsandArrayLists.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Arrays and Images",
            "content": "Saving PNG to GIF . Image IO read and Image IO write are focus of this code. A key portion of working with Images, or any file, is to know location of the input and output directories. . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . Success . Image Scaling and ASCII Conversion . In this example we print out a row of text for each row in the image. However, it seems as if the image is too tall. To address this problem, try to output a single character per block of pixels. In particular, average the greyscale values in a rectangular block that’s twice as tall as it is wide, and print out a single character for this block. . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 10497 100x87 images/tmp/pumpkin.png . Hacks . Look at comments above and see if there is better conversions for ASCII to reduce elongation and distortion. | Try to convert images into Grey Scale, Red Scale, Blue Scale, and Green Scale. | Rescale ASCII Images . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } //chnaged i++ to i+=3 to shorten length of ASCII mona lisa (billmongan.com said 2 columns wide and 4 rows tall) for (int i = 0; i &lt; img.getHeight(); i+=3) { for (int j = 0; j &lt; img.getWidth(); j+=1) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 10497 100x87 images/tmp/pumpkin.png . The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click &lt;a href=&#39;https://aka.ms/vscodeJupyterKernelCrash&#39;&gt;here&lt;/a&gt; for more info. View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. . . . Grey Scale . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String greyFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.greyFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; this.setStats(); } public void convertToGrey() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col // .getGreen() * 0.11))); int r = (int) (col.getRed() * 0.299); int g = (int) (col.getGreen() * 0.587); int b = (int) (col.getBlue() * 0.114); Color greyScale = new Color( r + g + b, r + g + b, r + g + b); img.setRGB(j, i, greyScale.getRGB()); } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.greyFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToGrey(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToGrey(); } } Pics.main(null); . . ) . Green Scale . Changed by setting red and blue to zero and just have the green in the photo . public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String greyFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.greyFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; this.setStats(); } public void convertToGrey() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col.getGreen() * 0.11))); int r = (int) (col.getRed() * 0); int g = (int) (col.getGreen() ); int b = (int) (col.getBlue() * 0); Color greyScale = new Color( r, g, b); img.setRGB(j, i, greyScale.getRGB()); } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.greyFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToGrey(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToGrey(); } } Pics.main(null); . . .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/10/02/Arrays&Images.html",
            "relUrl": "/jupyter/2022/10/02/Arrays&Images.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Java RapidAPI",
            "content": "Java and RapidAPI use case . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . An HttpClient can be used to send requests and retrieve their responses | An HttpRequest sets up header and body to API provider | An HttpResponse is returned as a result of sending an HttpRequest | . Typically a response body will be received, if all goes well Next step, is to format the response body according to your data science needs . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; //RapidAPI header https://rapidapi.com/spamakashrajtech/api/corona-virus-world-and-india-data HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot;)) .header(&quot;x-rapidapi-key&quot;, &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;) .header(&quot;x-rapidapi-host&quot;, &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //RapidAPI Body System.out.println(response.body()); . {&#34;countries_stat&#34;:[{&#34;country_name&#34;:&#34;USA&#34;,&#34;cases&#34;:&#34;82,649,779&#34;,&#34;deaths&#34;:&#34;1,018,316&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;80,434,925&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,465&#34;,&#34;active_cases&#34;:&#34;1,196,538&#34;,&#34;total_cases_per_1m_population&#34;:&#34;247,080&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,044&#34;,&#34;total_tests&#34;:&#34;1,000,275,726&#34;,&#34;tests_per_1m_population&#34;:&#34;2,990,303&#34;},{&#34;country_name&#34;:&#34;India&#34;,&#34;cases&#34;:&#34;43,057,545&#34;,&#34;deaths&#34;:&#34;522,193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;42,519,479&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;698&#34;,&#34;active_cases&#34;:&#34;15,873&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;372&#34;,&#34;total_tests&#34;:&#34;834,717,702&#34;,&#34;tests_per_1m_population&#34;:&#34;594,319&#34;},{&#34;country_name&#34;:&#34;Brazil&#34;,&#34;cases&#34;:&#34;30,345,654&#34;,&#34;deaths&#34;:&#34;662,663&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,364,400&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8,318&#34;,&#34;active_cases&#34;:&#34;318,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;140,954&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,078&#34;,&#34;total_tests&#34;:&#34;63,776,166&#34;,&#34;tests_per_1m_population&#34;:&#34;296,238&#34;},{&#34;country_name&#34;:&#34;France&#34;,&#34;cases&#34;:&#34;28,244,977&#34;,&#34;deaths&#34;:&#34;145,020&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,852,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,677&#34;,&#34;active_cases&#34;:&#34;2,247,125&#34;,&#34;total_cases_per_1m_population&#34;:&#34;430,996&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,213&#34;,&#34;total_tests&#34;:&#34;266,484,045&#34;,&#34;tests_per_1m_population&#34;:&#34;4,066,333&#34;},{&#34;country_name&#34;:&#34;Germany&#34;,&#34;cases&#34;:&#34;24,109,433&#34;,&#34;deaths&#34;:&#34;134,624&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;21,243,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,980&#34;,&#34;active_cases&#34;:&#34;2,731,809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;286,106&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,598&#34;,&#34;total_tests&#34;:&#34;122,332,384&#34;,&#34;tests_per_1m_population&#34;:&#34;1,451,714&#34;},{&#34;country_name&#34;:&#34;UK&#34;,&#34;cases&#34;:&#34;21,933,206&#34;,&#34;deaths&#34;:&#34;173,352&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,782,350&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;977,504&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,530&#34;,&#34;total_tests&#34;:&#34;514,985,782&#34;,&#34;tests_per_1m_population&#34;:&#34;7,514,777&#34;},{&#34;country_name&#34;:&#34;Russia&#34;,&#34;cases&#34;:&#34;18,137,137&#34;,&#34;deaths&#34;:&#34;374,902&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,474,628&#34;,&#34;new_deaths&#34;:&#34;168&#34;,&#34;new_cases&#34;:&#34;8,446&#34;,&#34;serious_critical&#34;:&#34;2,300&#34;,&#34;active_cases&#34;:&#34;287,607&#34;,&#34;total_cases_per_1m_population&#34;:&#34;124,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,567&#34;,&#34;total_tests&#34;:&#34;273,400,000&#34;,&#34;tests_per_1m_population&#34;:&#34;1,871,995&#34;},{&#34;country_name&#34;:&#34;S. Korea&#34;,&#34;cases&#34;:&#34;16,895,194&#34;,&#34;deaths&#34;:&#34;22,133&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;109&#34;,&#34;new_cases&#34;:&#34;64,725&#34;,&#34;serious_critical&#34;:&#34;726&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;329,028&#34;,&#34;deaths_per_1m_population&#34;:&#34;431&#34;,&#34;total_tests&#34;:&#34;15,804,065&#34;,&#34;tests_per_1m_population&#34;:&#34;307,778&#34;},{&#34;country_name&#34;:&#34;Italy&#34;,&#34;cases&#34;:&#34;16,079,209&#34;,&#34;deaths&#34;:&#34;162,609&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,684,371&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;409&#34;,&#34;active_cases&#34;:&#34;1,232,229&#34;,&#34;total_cases_per_1m_population&#34;:&#34;266,648&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,697&#34;,&#34;total_tests&#34;:&#34;211,365,630&#34;,&#34;tests_per_1m_population&#34;:&#34;3,505,156&#34;},{&#34;country_name&#34;:&#34;Turkey&#34;,&#34;cases&#34;:&#34;15,016,270&#34;,&#34;deaths&#34;:&#34;98,676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,854,475&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;975&#34;,&#34;active_cases&#34;:&#34;63,119&#34;,&#34;total_cases_per_1m_population&#34;:&#34;174,654&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,148&#34;,&#34;total_tests&#34;:&#34;158,110,923&#34;,&#34;tests_per_1m_population&#34;:&#34;1,838,986&#34;},{&#34;country_name&#34;:&#34;Spain&#34;,&#34;cases&#34;:&#34;11,786,036&#34;,&#34;deaths&#34;:&#34;103,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,261,340&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;420,788&#34;,&#34;total_cases_per_1m_population&#34;:&#34;251,906&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,221&#34;,&#34;total_tests&#34;:&#34;471,036,328&#34;,&#34;tests_per_1m_population&#34;:&#34;10,067,575&#34;},{&#34;country_name&#34;:&#34;Vietnam&#34;,&#34;cases&#34;:&#34;10,563,502&#34;,&#34;deaths&#34;:&#34;43,013&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,086,075&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;8,813&#34;,&#34;serious_critical&#34;:&#34;612&#34;,&#34;active_cases&#34;:&#34;1,434,414&#34;,&#34;total_cases_per_1m_population&#34;:&#34;106,789&#34;,&#34;deaths_per_1m_population&#34;:&#34;435&#34;,&#34;total_tests&#34;:&#34;85,789,114&#34;,&#34;tests_per_1m_population&#34;:&#34;867,262&#34;},{&#34;country_name&#34;:&#34;Argentina&#34;,&#34;cases&#34;:&#34;9,060,923&#34;,&#34;deaths&#34;:&#34;128,344&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,895,999&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;412&#34;,&#34;active_cases&#34;:&#34;36,580&#34;,&#34;total_cases_per_1m_population&#34;:&#34;197,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,793&#34;,&#34;total_tests&#34;:&#34;35,716,069&#34;,&#34;tests_per_1m_population&#34;:&#34;777,376&#34;},{&#34;country_name&#34;:&#34;Netherlands&#34;,&#34;cases&#34;:&#34;8,035,603&#34;,&#34;deaths&#34;:&#34;22,206&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,643,520&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;94&#34;,&#34;active_cases&#34;:&#34;369,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;467,096&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,291&#34;,&#34;total_tests&#34;:&#34;21,107,399&#34;,&#34;tests_per_1m_population&#34;:&#34;1,226,938&#34;},{&#34;country_name&#34;:&#34;Japan&#34;,&#34;cases&#34;:&#34;7,621,562&#34;,&#34;deaths&#34;:&#34;29,284&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,135,403&#34;,&#34;new_deaths&#34;:&#34;27&#34;,&#34;new_cases&#34;:&#34;43,721&#34;,&#34;serious_critical&#34;:&#34;195&#34;,&#34;active_cases&#34;:&#34;456,875&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,596&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;46,690,473&#34;,&#34;tests_per_1m_population&#34;:&#34;371,215&#34;},{&#34;country_name&#34;:&#34;Iran&#34;,&#34;cases&#34;:&#34;7,216,040&#34;,&#34;deaths&#34;:&#34;140,975&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,966,954&#34;,&#34;new_deaths&#34;:&#34;13&#34;,&#34;new_cases&#34;:&#34;528&#34;,&#34;serious_critical&#34;:&#34;1,046&#34;,&#34;active_cases&#34;:&#34;108,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,641&#34;,&#34;total_tests&#34;:&#34;50,811,054&#34;,&#34;tests_per_1m_population&#34;:&#34;591,284&#34;},{&#34;country_name&#34;:&#34;Colombia&#34;,&#34;cases&#34;:&#34;6,091,094&#34;,&#34;deaths&#34;:&#34;139,771&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,924,433&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;342&#34;,&#34;active_cases&#34;:&#34;26,890&#34;,&#34;total_cases_per_1m_population&#34;:&#34;117,448&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,695&#34;,&#34;total_tests&#34;:&#34;34,355,022&#34;,&#34;tests_per_1m_population&#34;:&#34;662,433&#34;},{&#34;country_name&#34;:&#34;Indonesia&#34;,&#34;cases&#34;:&#34;6,043,768&#34;,&#34;deaths&#34;:&#34;156,067&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,868,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2,771&#34;,&#34;active_cases&#34;:&#34;19,450&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,682&#34;,&#34;deaths_per_1m_population&#34;:&#34;560&#34;,&#34;total_tests&#34;:&#34;94,877,499&#34;,&#34;tests_per_1m_population&#34;:&#34;340,374&#34;},{&#34;country_name&#34;:&#34;Poland&#34;,&#34;cases&#34;:&#34;5,991,197&#34;,&#34;deaths&#34;:&#34;115,948&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,334,375&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;344&#34;,&#34;serious_critical&#34;:&#34;1,588&#34;,&#34;active_cases&#34;:&#34;540,874&#34;,&#34;total_cases_per_1m_population&#34;:&#34;158,616&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,070&#34;,&#34;total_tests&#34;:&#34;36,027,053&#34;,&#34;tests_per_1m_population&#34;:&#34;953,808&#34;},{&#34;country_name&#34;:&#34;Mexico&#34;,&#34;cases&#34;:&#34;5,733,514&#34;,&#34;deaths&#34;:&#34;324,117&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,033,892&#34;,&#34;new_deaths&#34;:&#34;57&#34;,&#34;new_cases&#34;:&#34;802&#34;,&#34;serious_critical&#34;:&#34;4,798&#34;,&#34;active_cases&#34;:&#34;375,505&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,641&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,467&#34;,&#34;total_tests&#34;:&#34;15,762,889&#34;,&#34;tests_per_1m_population&#34;:&#34;119,981&#34;},{&#34;country_name&#34;:&#34;Australia&#34;,&#34;cases&#34;:&#34;5,689,377&#34;,&#34;deaths&#34;:&#34;6,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,274,197&#34;,&#34;new_deaths&#34;:&#34;21&#34;,&#34;new_cases&#34;:&#34;34,769&#34;,&#34;serious_critical&#34;:&#34;135&#34;,&#34;active_cases&#34;:&#34;408,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;218,537&#34;,&#34;deaths_per_1m_population&#34;:&#34;269&#34;,&#34;total_tests&#34;:&#34;68,845,476&#34;,&#34;tests_per_1m_population&#34;:&#34;2,644,452&#34;},{&#34;country_name&#34;:&#34;Ukraine&#34;,&#34;cases&#34;:&#34;4,997,224&#34;,&#34;deaths&#34;:&#34;108,306&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;177&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;115,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,504&#34;,&#34;total_tests&#34;:&#34;19,521,252&#34;,&#34;tests_per_1m_population&#34;:&#34;451,259&#34;},{&#34;country_name&#34;:&#34;Malaysia&#34;,&#34;cases&#34;:&#34;4,427,067&#34;,&#34;deaths&#34;:&#34;35,491&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,310,599&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;89&#34;,&#34;active_cases&#34;:&#34;80,977&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,690&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,072&#34;,&#34;total_tests&#34;:&#34;58,332,799&#34;,&#34;tests_per_1m_population&#34;:&#34;1,761,549&#34;},{&#34;country_name&#34;:&#34;Thailand&#34;,&#34;cases&#34;:&#34;4,165,874&#34;,&#34;deaths&#34;:&#34;27,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,954,945&#34;,&#34;new_deaths&#34;:&#34;126&#34;,&#34;new_cases&#34;:&#34;17,784&#34;,&#34;serious_critical&#34;:&#34;1,496&#34;,&#34;active_cases&#34;:&#34;183,151&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,414&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;17,270,775&#34;,&#34;tests_per_1m_population&#34;:&#34;246,317&#34;},{&#34;country_name&#34;:&#34;Austria&#34;,&#34;cases&#34;:&#34;4,104,859&#34;,&#34;deaths&#34;:&#34;18,047&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,989,860&#34;,&#34;new_deaths&#34;:&#34;12&#34;,&#34;new_cases&#34;:&#34;5,810&#34;,&#34;serious_critical&#34;:&#34;121&#34;,&#34;active_cases&#34;:&#34;96,952&#34;,&#34;total_cases_per_1m_population&#34;:&#34;451,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,983&#34;,&#34;total_tests&#34;:&#34;181,825,734&#34;,&#34;tests_per_1m_population&#34;:&#34;19,982,688&#34;},{&#34;country_name&#34;:&#34;Israel&#34;,&#34;cases&#34;:&#34;4,054,342&#34;,&#34;deaths&#34;:&#34;10,658&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,009,152&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;34,532&#34;,&#34;total_cases_per_1m_population&#34;:&#34;434,735&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,143&#34;,&#34;total_tests&#34;:&#34;41,373,364&#34;,&#34;tests_per_1m_population&#34;:&#34;4,436,346&#34;},{&#34;country_name&#34;:&#34;Belgium&#34;,&#34;cases&#34;:&#34;4,015,791&#34;,&#34;deaths&#34;:&#34;31,319&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,726,457&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;169&#34;,&#34;active_cases&#34;:&#34;258,015&#34;,&#34;total_cases_per_1m_population&#34;:&#34;343,798&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,681&#34;,&#34;total_tests&#34;:&#34;33,456,470&#34;,&#34;tests_per_1m_population&#34;:&#34;2,864,259&#34;},{&#34;country_name&#34;:&#34;Czechia&#34;,&#34;cases&#34;:&#34;3,895,544&#34;,&#34;deaths&#34;:&#34;40,081&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,838,099&#34;,&#34;new_deaths&#34;:&#34;5&#34;,&#34;new_cases&#34;:&#34;911&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;17,364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;362,550&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,730&#34;,&#34;total_tests&#34;:&#34;55,117,064&#34;,&#34;tests_per_1m_population&#34;:&#34;5,129,629&#34;},{&#34;country_name&#34;:&#34;Portugal&#34;,&#34;cases&#34;:&#34;3,791,744&#34;,&#34;deaths&#34;:&#34;22,162&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;61&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,827&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,185&#34;,&#34;total_tests&#34;:&#34;40,748,372&#34;,&#34;tests_per_1m_population&#34;:&#34;4,017,371&#34;},{&#34;country_name&#34;:&#34;South Africa&#34;,&#34;cases&#34;:&#34;3,759,689&#34;,&#34;deaths&#34;:&#34;100,298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,632,572&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;175&#34;,&#34;active_cases&#34;:&#34;26,819&#34;,&#34;total_cases_per_1m_population&#34;:&#34;61,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,653&#34;,&#34;total_tests&#34;:&#34;24,313,334&#34;,&#34;tests_per_1m_population&#34;:&#34;400,824&#34;},{&#34;country_name&#34;:&#34;Canada&#34;,&#34;cases&#34;:&#34;3,695,585&#34;,&#34;deaths&#34;:&#34;38,777&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,426,082&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;426&#34;,&#34;active_cases&#34;:&#34;230,726&#34;,&#34;total_cases_per_1m_population&#34;:&#34;96,391&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,011&#34;,&#34;total_tests&#34;:&#34;60,536,359&#34;,&#34;tests_per_1m_population&#34;:&#34;1,578,955&#34;},{&#34;country_name&#34;:&#34;Philippines&#34;,&#34;cases&#34;:&#34;3,684,500&#34;,&#34;deaths&#34;:&#34;60,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,610,658&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;205&#34;,&#34;serious_critical&#34;:&#34;289&#34;,&#34;active_cases&#34;:&#34;13,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,835&#34;,&#34;deaths_per_1m_population&#34;:&#34;536&#34;,&#34;total_tests&#34;:&#34;29,427,586&#34;,&#34;tests_per_1m_population&#34;:&#34;262,246&#34;},{&#34;country_name&#34;:&#34;Switzerland&#34;,&#34;cases&#34;:&#34;3,579,867&#34;,&#34;deaths&#34;:&#34;13,816&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,378,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;90&#34;,&#34;active_cases&#34;:&#34;187,544&#34;,&#34;total_cases_per_1m_population&#34;:&#34;408,247&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,576&#34;,&#34;total_tests&#34;:&#34;20,666,182&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,766&#34;},{&#34;country_name&#34;:&#34;Peru&#34;,&#34;cases&#34;:&#34;3,559,343&#34;,&#34;deaths&#34;:&#34;212,724&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;356&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;105,303&#34;,&#34;deaths_per_1m_population&#34;:&#34;6,293&#34;,&#34;total_tests&#34;:&#34;29,592,270&#34;,&#34;tests_per_1m_population&#34;:&#34;875,489&#34;},{&#34;country_name&#34;:&#34;Chile&#34;,&#34;cases&#34;:&#34;3,544,463&#34;,&#34;deaths&#34;:&#34;57,375&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,368,772&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;286&#34;,&#34;active_cases&#34;:&#34;118,316&#34;,&#34;total_cases_per_1m_population&#34;:&#34;182,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,956&#34;,&#34;total_tests&#34;:&#34;36,711,724&#34;,&#34;tests_per_1m_population&#34;:&#34;1,891,147&#34;},{&#34;country_name&#34;:&#34;Greece&#34;,&#34;cases&#34;:&#34;3,277,557&#34;,&#34;deaths&#34;:&#34;28,867&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,151,717&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;277&#34;,&#34;active_cases&#34;:&#34;96,973&#34;,&#34;total_cases_per_1m_population&#34;:&#34;317,250&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,794&#34;,&#34;total_tests&#34;:&#34;78,872,546&#34;,&#34;tests_per_1m_population&#34;:&#34;7,634,431&#34;},{&#34;country_name&#34;:&#34;Denmark&#34;,&#34;cases&#34;:&#34;2,959,040&#34;,&#34;deaths&#34;:&#34;6,072&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,929,091&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;23,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;507,639&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,042&#34;,&#34;total_tests&#34;:&#34;127,141,200&#34;,&#34;tests_per_1m_population&#34;:&#34;21,811,751&#34;},{&#34;country_name&#34;:&#34;Romania&#34;,&#34;cases&#34;:&#34;2,888,318&#34;,&#34;deaths&#34;:&#34;65,427&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,606,660&#34;,&#34;new_deaths&#34;:&#34;6&#34;,&#34;new_cases&#34;:&#34;494&#34;,&#34;serious_critical&#34;:&#34;216&#34;,&#34;active_cases&#34;:&#34;216,231&#34;,&#34;total_cases_per_1m_population&#34;:&#34;151,968&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,442&#34;,&#34;total_tests&#34;:&#34;22,594,702&#34;,&#34;tests_per_1m_population&#34;:&#34;1,188,815&#34;},{&#34;country_name&#34;:&#34;Sweden&#34;,&#34;cases&#34;:&#34;2,498,388&#34;,&#34;deaths&#34;:&#34;18,656&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,464,421&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;15,311&#34;,&#34;total_cases_per_1m_population&#34;:&#34;244,630&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,827&#34;,&#34;total_tests&#34;:&#34;18,493,218&#34;,&#34;tests_per_1m_population&#34;:&#34;1,810,763&#34;},{&#34;country_name&#34;:&#34;Iraq&#34;,&#34;cases&#34;:&#34;2,324,141&#34;,&#34;deaths&#34;:&#34;25,204&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,295,947&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;2,990&#34;,&#34;total_cases_per_1m_population&#34;:&#34;55,534&#34;,&#34;deaths_per_1m_population&#34;:&#34;602&#34;,&#34;total_tests&#34;:&#34;18,450,939&#34;,&#34;tests_per_1m_population&#34;:&#34;440,871&#34;},{&#34;country_name&#34;:&#34;Serbia&#34;,&#34;cases&#34;:&#34;2,001,144&#34;,&#34;deaths&#34;:&#34;15,953&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,967,786&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;17,405&#34;,&#34;total_cases_per_1m_population&#34;:&#34;230,710&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,839&#34;,&#34;total_tests&#34;:&#34;9,427,662&#34;,&#34;tests_per_1m_population&#34;:&#34;1,086,907&#34;},{&#34;country_name&#34;:&#34;Bangladesh&#34;,&#34;cases&#34;:&#34;1,952,532&#34;,&#34;deaths&#34;:&#34;29,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,893,131&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,297&#34;,&#34;active_cases&#34;:&#34;30,274&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,646&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;13,956,056&#34;,&#34;tests_per_1m_population&#34;:&#34;83,245&#34;},{&#34;country_name&#34;:&#34;Hungary&#34;,&#34;cases&#34;:&#34;1,890,953&#34;,&#34;deaths&#34;:&#34;46,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,776,617&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;68,288&#34;,&#34;total_cases_per_1m_population&#34;:&#34;196,645&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,789&#34;,&#34;total_tests&#34;:&#34;11,295,119&#34;,&#34;tests_per_1m_population&#34;:&#34;1,174,608&#34;},{&#34;country_name&#34;:&#34;Slovakia&#34;,&#34;cases&#34;:&#34;1,774,808&#34;,&#34;deaths&#34;:&#34;19,839&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,730,712&#34;,&#34;new_deaths&#34;:&#34;10&#34;,&#34;new_cases&#34;:&#34;1,155&#34;,&#34;serious_critical&#34;:&#34;88&#34;,&#34;active_cases&#34;:&#34;24,257&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,794&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,631&#34;,&#34;total_tests&#34;:&#34;7,057,901&#34;,&#34;tests_per_1m_population&#34;:&#34;1,291,611&#34;},{&#34;country_name&#34;:&#34;Jordan&#34;,&#34;cases&#34;:&#34;1,694,216&#34;,&#34;deaths&#34;:&#34;14,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,678,941&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;124&#34;,&#34;active_cases&#34;:&#34;1,227&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,353&#34;,&#34;total_tests&#34;:&#34;16,670,254&#34;,&#34;tests_per_1m_population&#34;:&#34;1,605,074&#34;},{&#34;country_name&#34;:&#34;Georgia&#34;,&#34;cases&#34;:&#34;1,654,255&#34;,&#34;deaths&#34;:&#34;16,800&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,635,791&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;92&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,664&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,129&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,226&#34;,&#34;total_tests&#34;:&#34;16,807,205&#34;,&#34;tests_per_1m_population&#34;:&#34;4,227,861&#34;},{&#34;country_name&#34;:&#34;Pakistan&#34;,&#34;cases&#34;:&#34;1,527,856&#34;,&#34;deaths&#34;:&#34;30,369&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,493,998&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;105&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;3,489&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,683&#34;,&#34;deaths_per_1m_population&#34;:&#34;133&#34;,&#34;total_tests&#34;:&#34;28,048,307&#34;,&#34;tests_per_1m_population&#34;:&#34;122,679&#34;},{&#34;country_name&#34;:&#34;Ireland&#34;,&#34;cases&#34;:&#34;1,509,536&#34;,&#34;deaths&#34;:&#34;6,996&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,415,949&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;41&#34;,&#34;active_cases&#34;:&#34;86,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;299,669&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,389&#34;,&#34;total_tests&#34;:&#34;12,016,948&#34;,&#34;tests_per_1m_population&#34;:&#34;2,385,571&#34;},{&#34;country_name&#34;:&#34;Norway&#34;,&#34;cases&#34;:&#34;1,423,509&#34;,&#34;deaths&#34;:&#34;2,871&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;258,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;522&#34;,&#34;total_tests&#34;:&#34;11,002,430&#34;,&#34;tests_per_1m_population&#34;:&#34;2,001,256&#34;},{&#34;country_name&#34;:&#34;Kazakhstan&#34;,&#34;cases&#34;:&#34;1,305,457&#34;,&#34;deaths&#34;:&#34;13,660&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,290,988&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;10&#34;,&#34;serious_critical&#34;:&#34;24&#34;,&#34;active_cases&#34;:&#34;809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;68,056&#34;,&#34;deaths_per_1m_population&#34;:&#34;712&#34;,&#34;total_tests&#34;:&#34;11,575,012&#34;,&#34;tests_per_1m_population&#34;:&#34;603,428&#34;},{&#34;country_name&#34;:&#34;Hong Kong&#34;,&#34;cases&#34;:&#34;1,201,431&#34;,&#34;deaths&#34;:&#34;9,236&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;115&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;157,942&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,214&#34;,&#34;total_tests&#34;:&#34;44,972,952&#34;,&#34;tests_per_1m_population&#34;:&#34;5,912,223&#34;},{&#34;country_name&#34;:&#34;Singapore&#34;,&#34;cases&#34;:&#34;1,180,124&#34;,&#34;deaths&#34;:&#34;1,325&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,109,387&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;69,412&#34;,&#34;total_cases_per_1m_population&#34;:&#34;198,895&#34;,&#34;deaths_per_1m_population&#34;:&#34;223&#34;,&#34;total_tests&#34;:&#34;23,712,995&#34;,&#34;tests_per_1m_population&#34;:&#34;3,996,529&#34;},{&#34;country_name&#34;:&#34;Morocco&#34;,&#34;cases&#34;:&#34;1,164,670&#34;,&#34;deaths&#34;:&#34;16,065&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,148,154&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;293&#34;,&#34;active_cases&#34;:&#34;451&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,893&#34;,&#34;deaths_per_1m_population&#34;:&#34;426&#34;,&#34;total_tests&#34;:&#34;11,237,010&#34;,&#34;tests_per_1m_population&#34;:&#34;298,062&#34;},{&#34;country_name&#34;:&#34;Bulgaria&#34;,&#34;cases&#34;:&#34;1,152,892&#34;,&#34;deaths&#34;:&#34;36,849&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;959,542&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;156,501&#34;,&#34;total_cases_per_1m_population&#34;:&#34;168,206&#34;,&#34;deaths_per_1m_population&#34;:&#34;5,376&#34;,&#34;total_tests&#34;:&#34;9,797,011&#34;,&#34;tests_per_1m_population&#34;:&#34;1,429,377&#34;},{&#34;country_name&#34;:&#34;Croatia&#34;,&#34;cases&#34;:&#34;1,117,175&#34;,&#34;deaths&#34;:&#34;15,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,096,829&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;22&#34;,&#34;active_cases&#34;:&#34;4,568&#34;,&#34;total_cases_per_1m_population&#34;:&#34;275,195&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,887&#34;,&#34;total_tests&#34;:&#34;4,762,146&#34;,&#34;tests_per_1m_population&#34;:&#34;1,173,065&#34;},{&#34;country_name&#34;:&#34;Cuba&#34;,&#34;cases&#34;:&#34;1,101,486&#34;,&#34;deaths&#34;:&#34;8,523&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,091,603&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;1,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;97,355&#34;,&#34;deaths_per_1m_population&#34;:&#34;753&#34;,&#34;total_tests&#34;:&#34;12,920,253&#34;,&#34;tests_per_1m_population&#34;:&#34;1,141,957&#34;},{&#34;country_name&#34;:&#34;Lebanon&#34;,&#34;cases&#34;:&#34;1,096,320&#34;,&#34;deaths&#34;:&#34;10,374&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,079,455&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;6,491&#34;,&#34;total_cases_per_1m_population&#34;:&#34;161,931&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,532&#34;,&#34;total_tests&#34;:&#34;4,795,578&#34;,&#34;tests_per_1m_population&#34;:&#34;708,328&#34;},{&#34;country_name&#34;:&#34;Lithuania&#34;,&#34;cases&#34;:&#34;1,054,618&#34;,&#34;deaths&#34;:&#34;9,063&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,016,510&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;427&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;29,045&#34;,&#34;total_cases_per_1m_population&#34;:&#34;397,407&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,415&#34;,&#34;total_tests&#34;:&#34;8,217,113&#34;,&#34;tests_per_1m_population&#34;:&#34;3,096,414&#34;},{&#34;country_name&#34;:&#34;Tunisia&#34;,&#34;cases&#34;:&#34;1,039,532&#34;,&#34;deaths&#34;:&#34;28,533&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;29&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;86,327&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,369&#34;,&#34;total_tests&#34;:&#34;4,563,397&#34;,&#34;tests_per_1m_population&#34;:&#34;378,962&#34;},{&#34;country_name&#34;:&#34;Slovenia&#34;,&#34;cases&#34;:&#34;1,003,970&#34;,&#34;deaths&#34;:&#34;6,576&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;980,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;30&#34;,&#34;active_cases&#34;:&#34;16,893&#34;,&#34;total_cases_per_1m_population&#34;:&#34;482,805&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,162&#34;,&#34;total_tests&#34;:&#34;2,640,107&#34;,&#34;tests_per_1m_population&#34;:&#34;1,269,615&#34;},{&#34;country_name&#34;:&#34;Finland&#34;,&#34;cases&#34;:&#34;1,000,472&#34;,&#34;deaths&#34;:&#34;3,638&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;46,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;950,834&#34;,&#34;total_cases_per_1m_population&#34;:&#34;180,062&#34;,&#34;deaths_per_1m_population&#34;:&#34;655&#34;,&#34;total_tests&#34;:&#34;10,644,579&#34;,&#34;tests_per_1m_population&#34;:&#34;1,915,782&#34;},{&#34;country_name&#34;:&#34;Nepal&#34;,&#34;cases&#34;:&#34;978,743&#34;,&#34;deaths&#34;:&#34;11,951&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;966,523&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;11&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;269&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,535&#34;,&#34;deaths_per_1m_population&#34;:&#34;397&#34;,&#34;total_tests&#34;:&#34;5,616,752&#34;,&#34;tests_per_1m_population&#34;:&#34;186,711&#34;},{&#34;country_name&#34;:&#34;Belarus&#34;,&#34;cases&#34;:&#34;977,434&#34;,&#34;deaths&#34;:&#34;6,922&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;928,536&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;41,976&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,501&#34;,&#34;deaths_per_1m_population&#34;:&#34;733&#34;,&#34;total_tests&#34;:&#34;13,092,771&#34;,&#34;tests_per_1m_population&#34;:&#34;1,386,401&#34;},{&#34;country_name&#34;:&#34;Bolivia&#34;,&#34;cases&#34;:&#34;904,377&#34;,&#34;deaths&#34;:&#34;21,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;855,123&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;83&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;27,346&#34;,&#34;total_cases_per_1m_population&#34;:&#34;75,614&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,832&#34;,&#34;total_tests&#34;:&#34;2,693,845&#34;,&#34;tests_per_1m_population&#34;:&#34;225,230&#34;},{&#34;country_name&#34;:&#34;UAE&#34;,&#34;cases&#34;:&#34;897,136&#34;,&#34;deaths&#34;:&#34;2,302&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;879,787&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;244&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;15,047&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,772&#34;,&#34;deaths_per_1m_population&#34;:&#34;228&#34;,&#34;total_tests&#34;:&#34;154,420,740&#34;,&#34;tests_per_1m_population&#34;:&#34;15,279,961&#34;},{&#34;country_name&#34;:&#34;Uruguay&#34;,&#34;cases&#34;:&#34;895,775&#34;,&#34;deaths&#34;:&#34;7,197&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;886,654&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;1,924&#34;,&#34;total_cases_per_1m_population&#34;:&#34;256,268&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,059&#34;,&#34;total_tests&#34;:&#34;6,091,188&#34;,&#34;tests_per_1m_population&#34;:&#34;1,742,599&#34;},{&#34;country_name&#34;:&#34;New Zealand&#34;,&#34;cases&#34;:&#34;884,289&#34;,&#34;deaths&#34;:&#34;636&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;824,272&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;5,714&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;59,381&#34;,&#34;total_cases_per_1m_population&#34;:&#34;176,784&#34;,&#34;deaths_per_1m_population&#34;:&#34;127&#34;,&#34;total_tests&#34;:&#34;6,983,031&#34;,&#34;tests_per_1m_population&#34;:&#34;1,396,020&#34;},{&#34;country_name&#34;:&#34;Ecuador&#34;,&#34;cases&#34;:&#34;868,053&#34;,&#34;deaths&#34;:&#34;35,581&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;759&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;47,888&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,963&#34;,&#34;total_tests&#34;:&#34;2,470,170&#34;,&#34;tests_per_1m_population&#34;:&#34;136,273&#34;},{&#34;country_name&#34;:&#34;Costa Rica&#34;,&#34;cases&#34;:&#34;847,784&#34;,&#34;deaths&#34;:&#34;8,383&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;829,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;9,886&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,725&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,619&#34;,&#34;total_tests&#34;:&#34;4,240,743&#34;,&#34;tests_per_1m_population&#34;:&#34;818,979&#34;},{&#34;country_name&#34;:&#34;Guatemala&#34;,&#34;cases&#34;:&#34;841,341&#34;,&#34;deaths&#34;:&#34;17,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;821,185&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;2,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;45,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;945&#34;,&#34;total_tests&#34;:&#34;4,402,305&#34;,&#34;tests_per_1m_population&#34;:&#34;237,787&#34;},{&#34;country_name&#34;:&#34;Latvia&#34;,&#34;cases&#34;:&#34;817,316&#34;,&#34;deaths&#34;:&#34;5,743&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;803,135&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;322&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;8,438&#34;,&#34;total_cases_per_1m_population&#34;:&#34;442,135&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,107&#34;,&#34;total_tests&#34;:&#34;7,154,016&#34;,&#34;tests_per_1m_population&#34;:&#34;3,870,035&#34;},{&#34;country_name&#34;:&#34;Azerbaijan&#34;,&#34;cases&#34;:&#34;792,476&#34;,&#34;deaths&#34;:&#34;9,707&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;782,634&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,908&#34;,&#34;deaths_per_1m_population&#34;:&#34;942&#34;,&#34;total_tests&#34;:&#34;6,792,132&#34;,&#34;tests_per_1m_population&#34;:&#34;659,165&#34;},{&#34;country_name&#34;:&#34;Panama&#34;,&#34;cases&#34;:&#34;771,486&#34;,&#34;deaths&#34;:&#34;8,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;759,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;3,472&#34;,&#34;total_cases_per_1m_population&#34;:&#34;173,862&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,844&#34;,&#34;total_tests&#34;:&#34;5,820,472&#34;,&#34;tests_per_1m_population&#34;:&#34;1,311,699&#34;},{&#34;country_name&#34;:&#34;Saudi Arabia&#34;,&#34;cases&#34;:&#34;753,332&#34;,&#34;deaths&#34;:&#34;9,076&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;740,467&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;3,789&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,047&#34;,&#34;deaths_per_1m_population&#34;:&#34;254&#34;,&#34;total_tests&#34;:&#34;41,817,866&#34;,&#34;tests_per_1m_population&#34;:&#34;1,168,345&#34;},{&#34;country_name&#34;:&#34;Sri Lanka&#34;,&#34;cases&#34;:&#34;663,131&#34;,&#34;deaths&#34;:&#34;16,502&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;642,574&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;4,055&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,736&#34;,&#34;deaths_per_1m_population&#34;:&#34;765&#34;,&#34;total_tests&#34;:&#34;6,486,117&#34;,&#34;tests_per_1m_population&#34;:&#34;300,627&#34;},{&#34;country_name&#34;:&#34;Paraguay&#34;,&#34;cases&#34;:&#34;649,034&#34;,&#34;deaths&#34;:&#34;18,795&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;624,673&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;5,566&#34;,&#34;total_cases_per_1m_population&#34;:&#34;89,022&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,578&#34;,&#34;total_tests&#34;:&#34;2,623,300&#34;,&#34;tests_per_1m_population&#34;:&#34;359,816&#34;},{&#34;country_name&#34;:&#34;Kuwait&#34;,&#34;cases&#34;:&#34;631,294&#34;,&#34;deaths&#34;:&#34;2,555&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;627,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;840&#34;,&#34;total_cases_per_1m_population&#34;:&#34;143,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;583&#34;,&#34;total_tests&#34;:&#34;7,999,656&#34;,&#34;tests_per_1m_population&#34;:&#34;1,824,506&#34;},{&#34;country_name&#34;:&#34;Myanmar&#34;,&#34;cases&#34;:&#34;612,733&#34;,&#34;deaths&#34;:&#34;19,434&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;591,609&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,690&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,127&#34;,&#34;deaths_per_1m_population&#34;:&#34;353&#34;,&#34;total_tests&#34;:&#34;7,891,077&#34;,&#34;tests_per_1m_population&#34;:&#34;143,296&#34;},{&#34;country_name&#34;:&#34;Palestine&#34;,&#34;cases&#34;:&#34;581,816&#34;,&#34;deaths&#34;:&#34;5,353&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;575,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;17&#34;,&#34;active_cases&#34;:&#34;564&#34;,&#34;total_cases_per_1m_population&#34;:&#34;109,459&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,007&#34;,&#34;total_tests&#34;:&#34;3,078,533&#34;,&#34;tests_per_1m_population&#34;:&#34;579,175&#34;},{&#34;country_name&#34;:&#34;Dominican Republic&#34;,&#34;cases&#34;:&#34;578,954&#34;,&#34;deaths&#34;:&#34;4,376&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;574,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;16&#34;,&#34;active_cases&#34;:&#34;281&#34;,&#34;total_cases_per_1m_population&#34;:&#34;52,421&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;3,261,060&#34;,&#34;tests_per_1m_population&#34;:&#34;295,272&#34;},{&#34;country_name&#34;:&#34;Estonia&#34;,&#34;cases&#34;:&#34;570,257&#34;,&#34;deaths&#34;:&#34;2,531&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;507,474&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;181&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;60,252&#34;,&#34;total_cases_per_1m_population&#34;:&#34;429,364&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,906&#34;,&#34;total_tests&#34;:&#34;3,311,935&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,655&#34;},{&#34;country_name&#34;:&#34;Bahrain&#34;,&#34;cases&#34;:&#34;565,830&#34;,&#34;deaths&#34;:&#34;1,475&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;560,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;3,560&#34;,&#34;total_cases_per_1m_population&#34;:&#34;312,916&#34;,&#34;deaths_per_1m_population&#34;:&#34;816&#34;,&#34;total_tests&#34;:&#34;9,695,962&#34;,&#34;tests_per_1m_population&#34;:&#34;5,362,081&#34;},{&#34;country_name&#34;:&#34;Venezuela&#34;,&#34;cases&#34;:&#34;522,121&#34;,&#34;deaths&#34;:&#34;5,705&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;515,305&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;230&#34;,&#34;active_cases&#34;:&#34;1,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;18,456&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;3,359,014&#34;,&#34;tests_per_1m_population&#34;:&#34;118,733&#34;},{&#34;country_name&#34;:&#34;Moldova&#34;,&#34;cases&#34;:&#34;516,986&#34;,&#34;deaths&#34;:&#34;11,489&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;504,142&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;49&#34;,&#34;active_cases&#34;:&#34;1,355&#34;,&#34;total_cases_per_1m_population&#34;:&#34;128,698&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,860&#34;,&#34;total_tests&#34;:&#34;3,216,305&#34;,&#34;tests_per_1m_population&#34;:&#34;800,665&#34;},{&#34;country_name&#34;:&#34;Egypt&#34;,&#34;cases&#34;:&#34;515,645&#34;,&#34;deaths&#34;:&#34;24,613&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;442,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;122&#34;,&#34;active_cases&#34;:&#34;48,850&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,873&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;3,693,367&#34;,&#34;tests_per_1m_population&#34;:&#34;34,903&#34;},{&#34;country_name&#34;:&#34;Libya&#34;,&#34;cases&#34;:&#34;501,862&#34;,&#34;deaths&#34;:&#34;6,429&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;490,900&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;101&#34;,&#34;active_cases&#34;:&#34;4,533&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,288&#34;,&#34;deaths_per_1m_population&#34;:&#34;913&#34;,&#34;total_tests&#34;:&#34;2,476,960&#34;,&#34;tests_per_1m_population&#34;:&#34;351,844&#34;},{&#34;country_name&#34;:&#34;Cyprus&#34;,&#34;cases&#34;:&#34;470,481&#34;,&#34;deaths&#34;:&#34;1,011&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;124,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;60&#34;,&#34;active_cases&#34;:&#34;345,100&#34;,&#34;total_cases_per_1m_population&#34;:&#34;384,623&#34;,&#34;deaths_per_1m_population&#34;:&#34;827&#34;,&#34;total_tests&#34;:&#34;9,477,138&#34;,&#34;tests_per_1m_population&#34;:&#34;7,747,665&#34;},{&#34;country_name&#34;:&#34;Ethiopia&#34;,&#34;cases&#34;:&#34;470,417&#34;,&#34;deaths&#34;:&#34;7,510&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;454,967&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;7,940&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,917&#34;,&#34;deaths_per_1m_population&#34;:&#34;63&#34;,&#34;total_tests&#34;:&#34;4,763,756&#34;,&#34;tests_per_1m_population&#34;:&#34;39,665&#34;},{&#34;country_name&#34;:&#34;Mongolia&#34;,&#34;cases&#34;:&#34;469,580&#34;,&#34;deaths&#34;:&#34;2,177&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;313,256&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;30&#34;,&#34;serious_critical&#34;:&#34;192&#34;,&#34;active_cases&#34;:&#34;154,147&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,194&#34;,&#34;deaths_per_1m_population&#34;:&#34;645&#34;,&#34;total_tests&#34;:&#34;4,030,048&#34;,&#34;tests_per_1m_population&#34;:&#34;1,194,595&#34;},{&#34;country_name&#34;:&#34;Armenia&#34;,&#34;cases&#34;:&#34;422,825&#34;,&#34;deaths&#34;:&#34;8,622&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;410,558&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;3&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,645&#34;,&#34;total_cases_per_1m_population&#34;:&#34;142,210&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,900&#34;,&#34;total_tests&#34;:&#34;3,035,104&#34;,&#34;tests_per_1m_population&#34;:&#34;1,020,807&#34;},{&#34;country_name&#34;:&#34;Honduras&#34;,&#34;cases&#34;:&#34;422,275&#34;,&#34;deaths&#34;:&#34;10,892&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;131,100&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;280,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,445&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,069&#34;,&#34;total_tests&#34;:&#34;1,263,329&#34;,&#34;tests_per_1m_population&#34;:&#34;123,991&#34;},{&#34;country_name&#34;:&#34;Oman&#34;,&#34;cases&#34;:&#34;388,995&#34;,&#34;deaths&#34;:&#34;4,257&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;384,055&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;683&#34;,&#34;total_cases_per_1m_population&#34;:&#34;72,833&#34;,&#34;deaths_per_1m_population&#34;:&#34;797&#34;,&#34;total_tests&#34;:&#34;25,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;4,680,828&#34;},{&#34;country_name&#34;:&#34;Bosnia and Herzegovina&#34;,&#34;cases&#34;:&#34;376,699&#34;,&#34;deaths&#34;:&#34;15,756&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;192,218&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;168,725&#34;,&#34;total_cases_per_1m_population&#34;:&#34;116,122&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,857&#34;,&#34;total_tests&#34;:&#34;1,752,716&#34;,&#34;tests_per_1m_population&#34;:&#34;540,297&#34;},{&#34;country_name&#34;:&#34;R u00e9union&#34;,&#34;cases&#34;:&#34;374,295&#34;,&#34;deaths&#34;:&#34;742&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;355,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;17,948&#34;,&#34;total_cases_per_1m_population&#34;:&#34;412,744&#34;,&#34;deaths_per_1m_population&#34;:&#34;818&#34;,&#34;total_tests&#34;:&#34;1,603,660&#34;,&#34;tests_per_1m_population&#34;:&#34;1,768,393&#34;},{&#34;country_name&#34;:&#34;Qatar&#34;,&#34;cases&#34;:&#34;364,089&#34;,&#34;deaths&#34;:&#34;677&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;362,568&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;844&#34;,&#34;total_cases_per_1m_population&#34;:&#34;129,670&#34;,&#34;deaths_per_1m_population&#34;:&#34;241&#34;,&#34;total_tests&#34;:&#34;3,425,362&#34;,&#34;tests_per_1m_population&#34;:&#34;1,219,943&#34;},{&#34;country_name&#34;:&#34;Kenya&#34;,&#34;cases&#34;:&#34;323,696&#34;,&#34;deaths&#34;:&#34;5,649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;317,909&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;138&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,790&#34;,&#34;deaths_per_1m_population&#34;:&#34;101&#34;,&#34;total_tests&#34;:&#34;3,581,506&#34;,&#34;tests_per_1m_population&#34;:&#34;64,060&#34;},{&#34;country_name&#34;:&#34;Zambia&#34;,&#34;cases&#34;:&#34;318,984&#34;,&#34;deaths&#34;:&#34;3,974&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;314,075&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;935&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;206&#34;,&#34;total_tests&#34;:&#34;3,408,441&#34;,&#34;tests_per_1m_population&#34;:&#34;176,487&#34;},{&#34;country_name&#34;:&#34;North Macedonia&#34;,&#34;cases&#34;:&#34;309,062&#34;,&#34;deaths&#34;:&#34;9,271&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;299,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;727&#34;,&#34;total_cases_per_1m_population&#34;:&#34;148,358&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,450&#34;,&#34;total_tests&#34;:&#34;2,007,553&#34;,&#34;tests_per_1m_population&#34;:&#34;963,678&#34;},{&#34;country_name&#34;:&#34;Botswana&#34;,&#34;cases&#34;:&#34;305,859&#34;,&#34;deaths&#34;:&#34;2,688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;303,026&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,491&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,103&#34;,&#34;total_tests&#34;:&#34;2,026,898&#34;,&#34;tests_per_1m_population&#34;:&#34;831,613&#34;},{&#34;country_name&#34;:&#34;Albania&#34;,&#34;cases&#34;:&#34;274,791&#34;,&#34;deaths&#34;:&#34;3,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;270,869&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;426&#34;,&#34;total_cases_per_1m_population&#34;:&#34;95,675&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,217&#34;,&#34;total_tests&#34;:&#34;1,799,730&#34;,&#34;tests_per_1m_population&#34;:&#34;626,620&#34;},{&#34;country_name&#34;:&#34;Algeria&#34;,&#34;cases&#34;:&#34;265,761&#34;,&#34;deaths&#34;:&#34;6,874&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;178,344&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;80,543&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,869&#34;,&#34;deaths_per_1m_population&#34;:&#34;152&#34;,&#34;total_tests&#34;:&#34;230,861&#34;,&#34;tests_per_1m_population&#34;:&#34;5,099&#34;},{&#34;country_name&#34;:&#34;Nigeria&#34;,&#34;cases&#34;:&#34;255,685&#34;,&#34;deaths&#34;:&#34;3,143&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;249,890&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;2,652&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;5,036,813&#34;,&#34;tests_per_1m_population&#34;:&#34;23,388&#34;},{&#34;country_name&#34;:&#34;Zimbabwe&#34;,&#34;cases&#34;:&#34;247,524&#34;,&#34;deaths&#34;:&#34;5,468&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;241,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;12&#34;,&#34;active_cases&#34;:&#34;694&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,227&#34;,&#34;deaths_per_1m_population&#34;:&#34;358&#34;,&#34;total_tests&#34;:&#34;2,240,305&#34;,&#34;tests_per_1m_population&#34;:&#34;146,872&#34;},{&#34;country_name&#34;:&#34;Uzbekistan&#34;,&#34;cases&#34;:&#34;238,469&#34;,&#34;deaths&#34;:&#34;1,637&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;236,483&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;27&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;349&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,943&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;1,377,915&#34;,&#34;tests_per_1m_population&#34;:&#34;40,120&#34;},{&#34;country_name&#34;:&#34;Montenegro&#34;,&#34;cases&#34;:&#34;234,619&#34;,&#34;deaths&#34;:&#34;2,713&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;231,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;609&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,473&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,319&#34;,&#34;total_tests&#34;:&#34;2,444,820&#34;,&#34;tests_per_1m_population&#34;:&#34;3,891,730&#34;},{&#34;country_name&#34;:&#34;Luxembourg&#34;,&#34;cases&#34;:&#34;233,966&#34;,&#34;deaths&#34;:&#34;1,058&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;221,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;11,407&#34;,&#34;total_cases_per_1m_population&#34;:&#34;363,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,642&#34;,&#34;total_tests&#34;:&#34;4,213,886&#34;,&#34;tests_per_1m_population&#34;:&#34;6,539,666&#34;},{&#34;country_name&#34;:&#34;Mozambique&#34;,&#34;cases&#34;:&#34;225,358&#34;,&#34;deaths&#34;:&#34;2,201&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;223,104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;53&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,863&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;1,308,458&#34;,&#34;tests_per_1m_population&#34;:&#34;39,849&#34;},{&#34;country_name&#34;:&#34;Laos&#34;,&#34;cases&#34;:&#34;205,975&#34;,&#34;deaths&#34;:&#34;732&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,660&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;1,082&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;197,583&#34;,&#34;total_cases_per_1m_population&#34;:&#34;27,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;98&#34;,&#34;total_tests&#34;:&#34;1,232,128&#34;,&#34;tests_per_1m_population&#34;:&#34;165,029&#34;},{&#34;country_name&#34;:&#34;Kyrgyzstan&#34;,&#34;cases&#34;:&#34;200,983&#34;,&#34;deaths&#34;:&#34;2,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;196,386&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;131&#34;,&#34;active_cases&#34;:&#34;1,606&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,915&#34;,&#34;deaths_per_1m_population&#34;:&#34;445&#34;,&#34;total_tests&#34;:&#34;1,907,195&#34;,&#34;tests_per_1m_population&#34;:&#34;283,874&#34;},{&#34;country_name&#34;:&#34;China&#34;,&#34;cases&#34;:&#34;200,654&#34;,&#34;deaths&#34;:&#34;4,725&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;166,398&#34;,&#34;new_deaths&#34;:&#34;39&#34;,&#34;new_cases&#34;:&#34;1,580&#34;,&#34;serious_critical&#34;:&#34;236&#34;,&#34;active_cases&#34;:&#34;29,531&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;160,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;111,163&#34;},{&#34;country_name&#34;:&#34;Iceland&#34;,&#34;cases&#34;:&#34;183,974&#34;,&#34;deaths&#34;:&#34;112&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;75,685&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;108,177&#34;,&#34;total_cases_per_1m_population&#34;:&#34;532,886&#34;,&#34;deaths_per_1m_population&#34;:&#34;324&#34;,&#34;total_tests&#34;:&#34;1,953,616&#34;,&#34;tests_per_1m_population&#34;:&#34;5,658,702&#34;},{&#34;country_name&#34;:&#34;Maldives&#34;,&#34;cases&#34;:&#34;178,883&#34;,&#34;deaths&#34;:&#34;298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;163,687&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;14,898&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,737&#34;,&#34;deaths_per_1m_population&#34;:&#34;534&#34;,&#34;total_tests&#34;:&#34;2,213,831&#34;,&#34;tests_per_1m_population&#34;:&#34;3,969,395&#34;},{&#34;country_name&#34;:&#34;Afghanistan&#34;,&#34;cases&#34;:&#34;178,689&#34;,&#34;deaths&#34;:&#34;7,682&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;161,748&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;39&#34;,&#34;serious_critical&#34;:&#34;1,124&#34;,&#34;active_cases&#34;:&#34;9,259&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,411&#34;,&#34;deaths_per_1m_population&#34;:&#34;190&#34;,&#34;total_tests&#34;:&#34;940,341&#34;,&#34;tests_per_1m_population&#34;:&#34;23,212&#34;},{&#34;country_name&#34;:&#34;Uganda&#34;,&#34;cases&#34;:&#34;164,069&#34;,&#34;deaths&#34;:&#34;3,596&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;100,205&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;60,268&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,394&#34;,&#34;deaths_per_1m_population&#34;:&#34;74&#34;,&#34;total_tests&#34;:&#34;2,612,795&#34;,&#34;tests_per_1m_population&#34;:&#34;54,043&#34;},{&#34;country_name&#34;:&#34;El Salvador&#34;,&#34;cases&#34;:&#34;162,089&#34;,&#34;deaths&#34;:&#34;4,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;150,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;7,300&#34;,&#34;total_cases_per_1m_population&#34;:&#34;24,764&#34;,&#34;deaths_per_1m_population&#34;:&#34;631&#34;,&#34;total_tests&#34;:&#34;1,950,448&#34;,&#34;tests_per_1m_population&#34;:&#34;297,993&#34;},{&#34;country_name&#34;:&#34;Ghana&#34;,&#34;cases&#34;:&#34;161,124&#34;,&#34;deaths&#34;:&#34;1,445&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;159,655&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;24&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,997&#34;,&#34;deaths_per_1m_population&#34;:&#34;45&#34;,&#34;total_tests&#34;:&#34;2,433,244&#34;,&#34;tests_per_1m_population&#34;:&#34;75,465&#34;},{&#34;country_name&#34;:&#34;Namibia&#34;,&#34;cases&#34;:&#34;158,332&#34;,&#34;deaths&#34;:&#34;4,023&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;153,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;647&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,341&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,533&#34;,&#34;total_tests&#34;:&#34;1,001,354&#34;,&#34;tests_per_1m_population&#34;:&#34;381,621&#34;},{&#34;country_name&#34;:&#34;Martinique&#34;,&#34;cases&#34;:&#34;147,519&#34;,&#34;deaths&#34;:&#34;918&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;146,497&#34;,&#34;total_cases_per_1m_population&#34;:&#34;393,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,450&#34;,&#34;total_tests&#34;:&#34;828,928&#34;,&#34;tests_per_1m_population&#34;:&#34;2,212,008&#34;},{&#34;country_name&#34;:&#34;Trinidad and Tobago&#34;,&#34;cases&#34;:&#34;144,359&#34;,&#34;deaths&#34;:&#34;3,812&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;133,604&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;6,943&#34;,&#34;total_cases_per_1m_population&#34;:&#34;102,552&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,708&#34;,&#34;total_tests&#34;:&#34;696,148&#34;,&#34;tests_per_1m_population&#34;:&#34;494,540&#34;},{&#34;country_name&#34;:&#34;Brunei&#34;,&#34;cases&#34;:&#34;141,014&#34;,&#34;deaths&#34;:&#34;218&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;139,724&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,072&#34;,&#34;total_cases_per_1m_population&#34;:&#34;316,857&#34;,&#34;deaths_per_1m_population&#34;:&#34;490&#34;,&#34;total_tests&#34;:&#34;717,784&#34;,&#34;tests_per_1m_population&#34;:&#34;1,612,853&#34;},{&#34;country_name&#34;:&#34;Guadeloupe&#34;,&#34;cases&#34;:&#34;140,130&#34;,&#34;deaths&#34;:&#34;854&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,250&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;137,026&#34;,&#34;total_cases_per_1m_population&#34;:&#34;350,108&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,134&#34;,&#34;total_tests&#34;:&#34;938,039&#34;,&#34;tests_per_1m_population&#34;:&#34;2,343,644&#34;},{&#34;country_name&#34;:&#34;Cambodia&#34;,&#34;cases&#34;:&#34;136,200&#34;,&#34;deaths&#34;:&#34;3,056&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;132,896&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;248&#34;,&#34;total_cases_per_1m_population&#34;:&#34;7,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;178&#34;,&#34;total_tests&#34;:&#34;2,946,965&#34;,&#34;tests_per_1m_population&#34;:&#34;171,969&#34;},{&#34;country_name&#34;:&#34;Rwanda&#34;,&#34;cases&#34;:&#34;129,764&#34;,&#34;deaths&#34;:&#34;1,458&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;45,522&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;82,784&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9,590&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;5,225,494&#34;,&#34;tests_per_1m_population&#34;:&#34;386,173&#34;},{&#34;country_name&#34;:&#34;Jamaica&#34;,&#34;cases&#34;:&#34;129,489&#34;,&#34;deaths&#34;:&#34;2,943&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82,965&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;43,581&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,387&#34;,&#34;deaths_per_1m_population&#34;:&#34;986&#34;,&#34;total_tests&#34;:&#34;981,688&#34;,&#34;tests_per_1m_population&#34;:&#34;328,929&#34;},{&#34;country_name&#34;:&#34;Cameroon&#34;,&#34;cases&#34;:&#34;119,780&#34;,&#34;deaths&#34;:&#34;1,927&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;117,791&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;62&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,318&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;1,751,774&#34;,&#34;tests_per_1m_population&#34;:&#34;63,154&#34;},{&#34;country_name&#34;:&#34;Angola&#34;,&#34;cases&#34;:&#34;99,194&#34;,&#34;deaths&#34;:&#34;1,900&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;97,149&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,858&#34;,&#34;deaths_per_1m_population&#34;:&#34;55&#34;,&#34;total_tests&#34;:&#34;1,499,795&#34;,&#34;tests_per_1m_population&#34;:&#34;43,209&#34;},{&#34;country_name&#34;:&#34;Malta&#34;,&#34;cases&#34;:&#34;90,595&#34;,&#34;deaths&#34;:&#34;688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,646&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;196&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;5,261&#34;,&#34;total_cases_per_1m_population&#34;:&#34;204,196&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,551&#34;,&#34;total_tests&#34;:&#34;1,872,465&#34;,&#34;tests_per_1m_population&#34;:&#34;4,220,438&#34;},{&#34;country_name&#34;:&#34;DRC&#34;,&#34;cases&#34;:&#34;87,023&#34;,&#34;deaths&#34;:&#34;1,337&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;50,930&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;34,756&#34;,&#34;total_cases_per_1m_population&#34;:&#34;921&#34;,&#34;deaths_per_1m_population&#34;:&#34;14&#34;,&#34;total_tests&#34;:&#34;846,704&#34;,&#34;tests_per_1m_population&#34;:&#34;8,962&#34;},{&#34;country_name&#34;:&#34;Senegal&#34;,&#34;cases&#34;:&#34;85,984&#34;,&#34;deaths&#34;:&#34;1,966&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;17&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,902&#34;,&#34;deaths_per_1m_population&#34;:&#34;112&#34;,&#34;total_tests&#34;:&#34;1,063,849&#34;,&#34;tests_per_1m_population&#34;:&#34;60,653&#34;},{&#34;country_name&#34;:&#34;Malawi&#34;,&#34;cases&#34;:&#34;85,747&#34;,&#34;deaths&#34;:&#34;2,633&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,938&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;67&#34;,&#34;active_cases&#34;:&#34;1,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,283&#34;,&#34;deaths_per_1m_population&#34;:&#34;132&#34;,&#34;total_tests&#34;:&#34;571,585&#34;,&#34;tests_per_1m_population&#34;:&#34;28,548&#34;},{&#34;country_name&#34;:&#34;Ivory Coast&#34;,&#34;cases&#34;:&#34;81,887&#34;,&#34;deaths&#34;:&#34;799&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,061&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;27&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;29&#34;,&#34;total_tests&#34;:&#34;1,494,624&#34;,&#34;tests_per_1m_population&#34;:&#34;54,238&#34;},{&#34;country_name&#34;:&#34;French Guiana&#34;,&#34;cases&#34;:&#34;80,422&#34;,&#34;deaths&#34;:&#34;394&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,254&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;68,774&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,228&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,260&#34;,&#34;total_tests&#34;:&#34;622,646&#34;,&#34;tests_per_1m_population&#34;:&#34;1,991,518&#34;},{&#34;country_name&#34;:&#34;Suriname&#34;,&#34;cases&#34;:&#34;79,302&#34;,&#34;deaths&#34;:&#34;1,327&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;49,396&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;28,579&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,030&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,226&#34;,&#34;total_tests&#34;:&#34;235,824&#34;,&#34;tests_per_1m_population&#34;:&#34;395,598&#34;},{&#34;country_name&#34;:&#34;Channel Islands&#34;,&#34;cases&#34;:&#34;73,609&#34;,&#34;deaths&#34;:&#34;166&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;72,059&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,384&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;939&#34;,&#34;total_tests&#34;:&#34;1,252,808&#34;,&#34;tests_per_1m_population&#34;:&#34;7,087,782&#34;},{&#34;country_name&#34;:&#34;French Polynesia&#34;,&#34;cases&#34;:&#34;72,648&#34;,&#34;deaths&#34;:&#34;648&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;255,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,283&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Eswatini&#34;,&#34;cases&#34;:&#34;70,284&#34;,&#34;deaths&#34;:&#34;1,397&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;68,764&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;123&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,470&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,182&#34;,&#34;total_tests&#34;:&#34;1,012,397&#34;,&#34;tests_per_1m_population&#34;:&#34;856,623&#34;},{&#34;country_name&#34;:&#34;Barbados&#34;,&#34;cases&#34;:&#34;67,256&#34;,&#34;deaths&#34;:&#34;389&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;63,424&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,443&#34;,&#34;total_cases_per_1m_population&#34;:&#34;233,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,351&#34;,&#34;total_tests&#34;:&#34;640,085&#34;,&#34;tests_per_1m_population&#34;:&#34;2,222,440&#34;},{&#34;country_name&#34;:&#34;Fiji&#34;,&#34;cases&#34;:&#34;64,524&#34;,&#34;deaths&#34;:&#34;862&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,677&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;985&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,048&#34;,&#34;deaths_per_1m_population&#34;:&#34;949&#34;,&#34;total_tests&#34;:&#34;506,642&#34;,&#34;tests_per_1m_population&#34;:&#34;557,871&#34;},{&#34;country_name&#34;:&#34;Madagascar&#34;,&#34;cases&#34;:&#34;64,121&#34;,&#34;deaths&#34;:&#34;1,391&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;59,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;3,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,213&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;418,849&#34;,&#34;tests_per_1m_population&#34;:&#34;14,455&#34;},{&#34;country_name&#34;:&#34;Guyana&#34;,&#34;cases&#34;:&#34;63,413&#34;,&#34;deaths&#34;:&#34;1,228&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,092&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;93&#34;,&#34;total_cases_per_1m_population&#34;:&#34;79,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,548&#34;,&#34;total_tests&#34;:&#34;590,638&#34;,&#34;tests_per_1m_population&#34;:&#34;744,436&#34;},{&#34;country_name&#34;:&#34;Sudan&#34;,&#34;cases&#34;:&#34;62,093&#34;,&#34;deaths&#34;:&#34;4,930&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,359&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;562,941&#34;,&#34;tests_per_1m_population&#34;:&#34;12,319&#34;},{&#34;country_name&#34;:&#34;New Caledonia&#34;,&#34;cases&#34;:&#34;60,457&#34;,&#34;deaths&#34;:&#34;312&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;60,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;81&#34;,&#34;total_cases_per_1m_population&#34;:&#34;208,148&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,074&#34;,&#34;total_tests&#34;:&#34;98,964&#34;,&#34;tests_per_1m_population&#34;:&#34;340,724&#34;},{&#34;country_name&#34;:&#34;Mauritania&#34;,&#34;cases&#34;:&#34;58,683&#34;,&#34;deaths&#34;:&#34;982&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;57,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;12,050&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;799,187&#34;,&#34;tests_per_1m_population&#34;:&#34;164,099&#34;},{&#34;country_name&#34;:&#34;Bhutan&#34;,&#34;cases&#34;:&#34;57,771&#34;,&#34;deaths&#34;:&#34;20&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;53,080&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;431&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;4,671&#34;,&#34;total_cases_per_1m_population&#34;:&#34;73,412&#34;,&#34;deaths_per_1m_population&#34;:&#34;25&#34;,&#34;total_tests&#34;:&#34;2,284,301&#34;,&#34;tests_per_1m_population&#34;:&#34;2,902,749&#34;},{&#34;country_name&#34;:&#34;Belize&#34;,&#34;cases&#34;:&#34;57,419&#34;,&#34;deaths&#34;:&#34;676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;56,534&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;209&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,823&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,646&#34;,&#34;total_tests&#34;:&#34;534,770&#34;,&#34;tests_per_1m_population&#34;:&#34;1,302,237&#34;},{&#34;country_name&#34;:&#34;Taiwan&#34;,&#34;cases&#34;:&#34;56,468&#34;,&#34;deaths&#34;:&#34;856&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;23,729&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;5,172&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;31,883&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,363&#34;,&#34;deaths_per_1m_population&#34;:&#34;36&#34;,&#34;total_tests&#34;:&#34;14,289,370&#34;,&#34;tests_per_1m_population&#34;:&#34;598,017&#34;},{&#34;country_name&#34;:&#34;Cabo Verde&#34;,&#34;cases&#34;:&#34;56,004&#34;,&#34;deaths&#34;:&#34;401&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;55,538&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;65&#34;,&#34;total_cases_per_1m_population&#34;:&#34;98,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;707&#34;,&#34;total_tests&#34;:&#34;400,982&#34;,&#34;tests_per_1m_population&#34;:&#34;707,340&#34;},{&#34;country_name&#34;:&#34;Syria&#34;,&#34;cases&#34;:&#34;55,795&#34;,&#34;deaths&#34;:&#34;3,150&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;52,090&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;555&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;172&#34;,&#34;total_tests&#34;:&#34;146,269&#34;,&#34;tests_per_1m_population&#34;:&#34;8,007&#34;},{&#34;country_name&#34;:&#34;Gabon&#34;,&#34;cases&#34;:&#34;47,597&#34;,&#34;deaths&#34;:&#34;303&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;47,282&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;12&#34;,&#34;total_cases_per_1m_population&#34;:&#34;20,512&#34;,&#34;deaths_per_1m_population&#34;:&#34;131&#34;,&#34;total_tests&#34;:&#34;1,592,483&#34;,&#34;tests_per_1m_population&#34;:&#34;686,270&#34;},{&#34;country_name&#34;:&#34;Papua New Guinea&#34;,&#34;cases&#34;:&#34;43,732&#34;,&#34;deaths&#34;:&#34;649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;43,025&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;58&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,726&#34;,&#34;deaths_per_1m_population&#34;:&#34;70&#34;,&#34;total_tests&#34;:&#34;249,149&#34;,&#34;tests_per_1m_population&#34;:&#34;26,927&#34;},{&#34;country_name&#34;:&#34;Seychelles&#34;,&#34;cases&#34;:&#34;42,079&#34;,&#34;deaths&#34;:&#34;165&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,260&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;654&#34;,&#34;total_cases_per_1m_population&#34;:&#34;423,134&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,659&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Cura u00e7ao&#34;,&#34;cases&#34;:&#34;41,966&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;442&#34;,&#34;total_cases_per_1m_population&#34;:&#34;253,872&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,652&#34;,&#34;total_tests&#34;:&#34;496,693&#34;,&#34;tests_per_1m_population&#34;:&#34;3,004,725&#34;},{&#34;country_name&#34;:&#34;Andorra&#34;,&#34;cases&#34;:&#34;41,013&#34;,&#34;deaths&#34;:&#34;153&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;40,343&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;517&#34;,&#34;total_cases_per_1m_population&#34;:&#34;529,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,974&#34;,&#34;total_tests&#34;:&#34;249,838&#34;,&#34;tests_per_1m_population&#34;:&#34;3,224,215&#34;},{&#34;country_name&#34;:&#34;Burundi&#34;,&#34;cases&#34;:&#34;38,887&#34;,&#34;deaths&#34;:&#34;38&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;773&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;38,076&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,104&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;345,742&#34;,&#34;tests_per_1m_population&#34;:&#34;27,594&#34;},{&#34;country_name&#34;:&#34;Mauritius&#34;,&#34;cases&#34;:&#34;37,656&#34;,&#34;deaths&#34;:&#34;990&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,656&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,010&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,521&#34;,&#34;deaths_per_1m_population&#34;:&#34;776&#34;,&#34;total_tests&#34;:&#34;358,675&#34;,&#34;tests_per_1m_population&#34;:&#34;281,186&#34;},{&#34;country_name&#34;:&#34;Mayotte&#34;,&#34;cases&#34;:&#34;37,038&#34;,&#34;deaths&#34;:&#34;187&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,964&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;33,887&#34;,&#34;total_cases_per_1m_population&#34;:&#34;130,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;657&#34;,&#34;total_tests&#34;:&#34;176,919&#34;,&#34;tests_per_1m_population&#34;:&#34;621,442&#34;},{&#34;country_name&#34;:&#34;Togo&#34;,&#34;cases&#34;:&#34;36,977&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;36,679&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;25&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,285&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;727,740&#34;,&#34;tests_per_1m_population&#34;:&#34;84,338&#34;},{&#34;country_name&#34;:&#34;Guinea&#34;,&#34;cases&#34;:&#34;36,459&#34;,&#34;deaths&#34;:&#34;440&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,976&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,647&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;660,107&#34;,&#34;tests_per_1m_population&#34;:&#34;47,919&#34;},{&#34;country_name&#34;:&#34;Faeroe Islands&#34;,&#34;cases&#34;:&#34;34,658&#34;,&#34;deaths&#34;:&#34;28&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26,937&#34;,&#34;total_cases_per_1m_population&#34;:&#34;704,460&#34;,&#34;deaths_per_1m_population&#34;:&#34;569&#34;,&#34;total_tests&#34;:&#34;778,000&#34;,&#34;tests_per_1m_population&#34;:&#34;15,813,651&#34;},{&#34;country_name&#34;:&#34;Aruba&#34;,&#34;cases&#34;:&#34;34,589&#34;,&#34;deaths&#34;:&#34;212&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;34,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;126&#34;,&#34;total_cases_per_1m_population&#34;:&#34;321,507&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,971&#34;,&#34;total_tests&#34;:&#34;177,885&#34;,&#34;tests_per_1m_population&#34;:&#34;1,653,452&#34;},{&#34;country_name&#34;:&#34;Tanzania&#34;,&#34;cases&#34;:&#34;33,864&#34;,&#34;deaths&#34;:&#34;803&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;539&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Bahamas&#34;,&#34;cases&#34;:&#34;33,463&#34;,&#34;deaths&#34;:&#34;789&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;32,310&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,652&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,972&#34;,&#34;total_tests&#34;:&#34;229,817&#34;,&#34;tests_per_1m_population&#34;:&#34;574,504&#34;},{&#34;country_name&#34;:&#34;Lesotho&#34;,&#34;cases&#34;:&#34;32,910&#34;,&#34;deaths&#34;:&#34;697&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;24,155&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8,058&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,146&#34;,&#34;deaths_per_1m_population&#34;:&#34;321&#34;,&#34;total_tests&#34;:&#34;431,221&#34;,&#34;tests_per_1m_population&#34;:&#34;198,454&#34;},{&#34;country_name&#34;:&#34;Mali&#34;,&#34;cases&#34;:&#34;30,727&#34;,&#34;deaths&#34;:&#34;731&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;201&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,442&#34;,&#34;deaths_per_1m_population&#34;:&#34;34&#34;,&#34;total_tests&#34;:&#34;663,805&#34;,&#34;tests_per_1m_population&#34;:&#34;31,160&#34;},{&#34;country_name&#34;:&#34;Haiti&#34;,&#34;cases&#34;:&#34;30,640&#34;,&#34;deaths&#34;:&#34;835&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,389&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;416&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,629&#34;,&#34;deaths_per_1m_population&#34;:&#34;72&#34;,&#34;total_tests&#34;:&#34;132,422&#34;,&#34;tests_per_1m_population&#34;:&#34;11,363&#34;},{&#34;country_name&#34;:&#34;Isle of Man&#34;,&#34;cases&#34;:&#34;28,416&#34;,&#34;deaths&#34;:&#34;87&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;26,794&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,535&#34;,&#34;total_cases_per_1m_population&#34;:&#34;331,015&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,013&#34;,&#34;total_tests&#34;:&#34;150,753&#34;,&#34;tests_per_1m_population&#34;:&#34;1,756,107&#34;},{&#34;country_name&#34;:&#34;Benin&#34;,&#34;cases&#34;:&#34;26,952&#34;,&#34;deaths&#34;:&#34;163&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,506&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;1,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,123&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;604,310&#34;,&#34;tests_per_1m_population&#34;:&#34;47,598&#34;},{&#34;country_name&#34;:&#34;Somalia&#34;,&#34;cases&#34;:&#34;26,485&#34;,&#34;deaths&#34;:&#34;1,350&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11,953&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,587&#34;,&#34;deaths_per_1m_population&#34;:&#34;81&#34;,&#34;total_tests&#34;:&#34;400,466&#34;,&#34;tests_per_1m_population&#34;:&#34;23,990&#34;},{&#34;country_name&#34;:&#34;Congo&#34;,&#34;cases&#34;:&#34;24,079&#34;,&#34;deaths&#34;:&#34;385&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,178&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,516&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,178&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;347,815&#34;,&#34;tests_per_1m_population&#34;:&#34;60,352&#34;},{&#34;country_name&#34;:&#34;Saint Lucia&#34;,&#34;cases&#34;:&#34;23,239&#34;,&#34;deaths&#34;:&#34;368&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,736&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,988&#34;,&#34;total_tests&#34;:&#34;142,630&#34;,&#34;tests_per_1m_population&#34;:&#34;770,382&#34;},{&#34;country_name&#34;:&#34;Timor-Leste&#34;,&#34;cases&#34;:&#34;22,860&#34;,&#34;deaths&#34;:&#34;130&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,714&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;16&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,762&#34;,&#34;deaths_per_1m_population&#34;:&#34;95&#34;,&#34;total_tests&#34;:&#34;261,007&#34;,&#34;tests_per_1m_population&#34;:&#34;191,388&#34;},{&#34;country_name&#34;:&#34;Cayman Islands&#34;,&#34;cases&#34;:&#34;21,755&#34;,&#34;deaths&#34;:&#34;26&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,553&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;13,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,145&#34;,&#34;deaths_per_1m_population&#34;:&#34;387&#34;,&#34;total_tests&#34;:&#34;222,773&#34;,&#34;tests_per_1m_population&#34;:&#34;3,319,273&#34;},{&#34;country_name&#34;:&#34;Burkina Faso&#34;,&#34;cases&#34;:&#34;20,853&#34;,&#34;deaths&#34;:&#34;382&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,439&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;951&#34;,&#34;deaths_per_1m_population&#34;:&#34;17&#34;,&#34;total_tests&#34;:&#34;248,995&#34;,&#34;tests_per_1m_population&#34;:&#34;11,350&#34;},{&#34;country_name&#34;:&#34;Nicaragua&#34;,&#34;cases&#34;:&#34;18,491&#34;,&#34;deaths&#34;:&#34;225&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,225&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;14,041&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,733&#34;,&#34;deaths_per_1m_population&#34;:&#34;33&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Gibraltar&#34;,&#34;cases&#34;:&#34;17,706&#34;,&#34;deaths&#34;:&#34;102&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,579&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,025&#34;,&#34;total_cases_per_1m_population&#34;:&#34;525,822&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,029&#34;,&#34;total_tests&#34;:&#34;534,283&#34;,&#34;tests_per_1m_population&#34;:&#34;15,866,807&#34;},{&#34;country_name&#34;:&#34;South Sudan&#34;,&#34;cases&#34;:&#34;17,422&#34;,&#34;deaths&#34;:&#34;138&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,514&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;3,770&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,524&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;376,391&#34;,&#34;tests_per_1m_population&#34;:&#34;32,928&#34;},{&#34;country_name&#34;:&#34;Tajikistan&#34;,&#34;cases&#34;:&#34;17,388&#34;,&#34;deaths&#34;:&#34;124&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,264&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,752&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Liechtenstein&#34;,&#34;cases&#34;:&#34;17,103&#34;,&#34;deaths&#34;:&#34;85&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,831&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;12&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;187&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,251&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,218&#34;,&#34;total_tests&#34;:&#34;102,174&#34;,&#34;tests_per_1m_population&#34;:&#34;2,665,919&#34;},{&#34;country_name&#34;:&#34;San Marino&#34;,&#34;cases&#34;:&#34;16,140&#34;,&#34;deaths&#34;:&#34;114&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;473,870&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,347&#34;,&#34;total_tests&#34;:&#34;149,271&#34;,&#34;tests_per_1m_population&#34;:&#34;4,382,590&#34;},{&#34;country_name&#34;:&#34;Equatorial Guinea&#34;,&#34;cases&#34;:&#34;15,907&#34;,&#34;deaths&#34;:&#34;183&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,698&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26&#34;,&#34;total_cases_per_1m_population&#34;:&#34;10,704&#34;,&#34;deaths_per_1m_population&#34;:&#34;123&#34;,&#34;total_tests&#34;:&#34;310,972&#34;,&#34;tests_per_1m_population&#34;:&#34;209,251&#34;},{&#34;country_name&#34;:&#34;Djibouti&#34;,&#34;cases&#34;:&#34;15,611&#34;,&#34;deaths&#34;:&#34;189&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,411&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,396&#34;,&#34;deaths_per_1m_population&#34;:&#34;186&#34;,&#34;total_tests&#34;:&#34;303,924&#34;,&#34;tests_per_1m_population&#34;:&#34;299,748&#34;},{&#34;country_name&#34;:&#34;CAR&#34;,&#34;cases&#34;:&#34;14,649&#34;,&#34;deaths&#34;:&#34;113&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,859&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;7,677&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,941&#34;,&#34;deaths_per_1m_population&#34;:&#34;23&#34;,&#34;total_tests&#34;:&#34;81,294&#34;,&#34;tests_per_1m_population&#34;:&#34;16,320&#34;},{&#34;country_name&#34;:&#34;Grenada&#34;,&#34;cases&#34;:&#34;14,428&#34;,&#34;deaths&#34;:&#34;220&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,945&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;263&#34;,&#34;total_cases_per_1m_population&#34;:&#34;127,159&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,939&#34;,&#34;total_tests&#34;:&#34;148,567&#34;,&#34;tests_per_1m_population&#34;:&#34;1,309,376&#34;},{&#34;country_name&#34;:&#34;Bermuda&#34;,&#34;cases&#34;:&#34;13,143&#34;,&#34;deaths&#34;:&#34;131&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;12,719&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;293&#34;,&#34;total_cases_per_1m_population&#34;:&#34;212,453&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,118&#34;,&#34;total_tests&#34;:&#34;866,313&#34;,&#34;tests_per_1m_population&#34;:&#34;14,003,734&#34;},{&#34;country_name&#34;:&#34;Solomon Islands&#34;,&#34;cases&#34;:&#34;12,437&#34;,&#34;deaths&#34;:&#34;139&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,194&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,104&#34;,&#34;total_cases_per_1m_population&#34;:&#34;17,339&#34;,&#34;deaths_per_1m_population&#34;:&#34;194&#34;,&#34;total_tests&#34;:&#34;5,117&#34;,&#34;tests_per_1m_population&#34;:&#34;7,134&#34;},{&#34;country_name&#34;:&#34;Dominica&#34;,&#34;cases&#34;:&#34;12,011&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,926&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;22&#34;,&#34;total_cases_per_1m_population&#34;:&#34;166,107&#34;,&#34;deaths_per_1m_population&#34;:&#34;871&#34;,&#34;total_tests&#34;:&#34;187,690&#34;,&#34;tests_per_1m_population&#34;:&#34;2,595,666&#34;},{&#34;country_name&#34;:&#34;Gambia&#34;,&#34;cases&#34;:&#34;11,995&#34;,&#34;deaths&#34;:&#34;365&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,591&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;39&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,724&#34;,&#34;deaths_per_1m_population&#34;:&#34;144&#34;,&#34;total_tests&#34;:&#34;155,686&#34;,&#34;tests_per_1m_population&#34;:&#34;61,314&#34;},{&#34;country_name&#34;:&#34;Greenland&#34;,&#34;cases&#34;:&#34;11,971&#34;,&#34;deaths&#34;:&#34;21&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,761&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;9,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;210,209&#34;,&#34;deaths_per_1m_population&#34;:&#34;369&#34;,&#34;total_tests&#34;:&#34;164,926&#34;,&#34;tests_per_1m_population&#34;:&#34;2,896,081&#34;},{&#34;country_name&#34;:&#34;Yemen&#34;,&#34;cases&#34;:&#34;11,818&#34;,&#34;deaths&#34;:&#34;2,148&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;669&#34;,&#34;total_cases_per_1m_population&#34;:&#34;381&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;265,253&#34;,&#34;tests_per_1m_population&#34;:&#34;8,553&#34;},{&#34;country_name&#34;:&#34;Monaco&#34;,&#34;cases&#34;:&#34;11,604&#34;,&#34;deaths&#34;:&#34;54&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;188&#34;,&#34;total_cases_per_1m_population&#34;:&#34;291,969&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,359&#34;,&#34;total_tests&#34;:&#34;54,960&#34;,&#34;tests_per_1m_population&#34;:&#34;1,382,850&#34;},{&#34;country_name&#34;:&#34;Saint Martin&#34;,&#34;cases&#34;:&#34;10,279&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,399&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;8,817&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,903&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,581&#34;,&#34;total_tests&#34;:&#34;112,382&#34;,&#34;tests_per_1m_population&#34;:&#34;2,819,701&#34;},{&#34;country_name&#34;:&#34;Sint Maarten&#34;,&#34;cases&#34;:&#34;9,990&#34;,&#34;deaths&#34;:&#34;86&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,841&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;63&#34;,&#34;total_cases_per_1m_population&#34;:&#34;228,317&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,965&#34;,&#34;total_tests&#34;:&#34;62,056&#34;,&#34;tests_per_1m_population&#34;:&#34;1,418,261&#34;},{&#34;country_name&#34;:&#34;Eritrea&#34;,&#34;cases&#34;:&#34;9,733&#34;,&#34;deaths&#34;:&#34;103&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,629&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,678&#34;,&#34;deaths_per_1m_population&#34;:&#34;28&#34;,&#34;total_tests&#34;:&#34;23,693&#34;,&#34;tests_per_1m_population&#34;:&#34;6,518&#34;},{&#34;country_name&#34;:&#34;Caribbean Netherlands&#34;,&#34;cases&#34;:&#34;9,592&#34;,&#34;deaths&#34;:&#34;34&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,392&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;166&#34;,&#34;total_cases_per_1m_population&#34;:&#34;359,749&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,275&#34;,&#34;total_tests&#34;:&#34;30,126&#34;,&#34;tests_per_1m_population&#34;:&#34;1,129,880&#34;},{&#34;country_name&#34;:&#34;Tonga&#34;,&#34;cases&#34;:&#34;9,553&#34;,&#34;deaths&#34;:&#34;11&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,306&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,236&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,571&#34;,&#34;deaths_per_1m_population&#34;:&#34;102&#34;,&#34;total_tests&#34;:&#34;408,213&#34;,&#34;tests_per_1m_population&#34;:&#34;3,784,761&#34;},{&#34;country_name&#34;:&#34;Niger&#34;,&#34;cases&#34;:&#34;8,914&#34;,&#34;deaths&#34;:&#34;309&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;98&#34;,&#34;total_cases_per_1m_population&#34;:&#34;346&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;249,026&#34;,&#34;tests_per_1m_population&#34;:&#34;9,657&#34;},{&#34;country_name&#34;:&#34;Guinea-Bissau&#34;,&#34;cases&#34;:&#34;8,185&#34;,&#34;deaths&#34;:&#34;171&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;499&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,989&#34;,&#34;deaths_per_1m_population&#34;:&#34;83&#34;,&#34;total_tests&#34;:&#34;132,611&#34;,&#34;tests_per_1m_population&#34;:&#34;64,628&#34;},{&#34;country_name&#34;:&#34;Comoros&#34;,&#34;cases&#34;:&#34;8,100&#34;,&#34;deaths&#34;:&#34;160&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,933&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;8,970&#34;,&#34;deaths_per_1m_population&#34;:&#34;177&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Sierra Leone&#34;,&#34;cases&#34;:&#34;7,681&#34;,&#34;deaths&#34;:&#34;125&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;929&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;259,958&#34;,&#34;tests_per_1m_population&#34;:&#34;31,435&#34;},{&#34;country_name&#34;:&#34;Antigua and Barbuda&#34;,&#34;cases&#34;:&#34;7,571&#34;,&#34;deaths&#34;:&#34;135&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,402&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;34&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,172&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,358&#34;,&#34;total_tests&#34;:&#34;18,901&#34;,&#34;tests_per_1m_population&#34;:&#34;190,164&#34;},{&#34;country_name&#34;:&#34;Liberia&#34;,&#34;cases&#34;:&#34;7,432&#34;,&#34;deaths&#34;:&#34;294&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,747&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,391&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,410&#34;,&#34;deaths_per_1m_population&#34;:&#34;56&#34;,&#34;total_tests&#34;:&#34;139,824&#34;,&#34;tests_per_1m_population&#34;:&#34;26,521&#34;},{&#34;country_name&#34;:&#34;Chad&#34;,&#34;cases&#34;:&#34;7,396&#34;,&#34;deaths&#34;:&#34;193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,874&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;2,329&#34;,&#34;total_cases_per_1m_population&#34;:&#34;428&#34;,&#34;deaths_per_1m_population&#34;:&#34;11&#34;,&#34;total_tests&#34;:&#34;191,341&#34;,&#34;tests_per_1m_population&#34;:&#34;11,075&#34;},{&#34;country_name&#34;:&#34;Samoa&#34;,&#34;cases&#34;:&#34;7,185&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;5,567&#34;,&#34;total_cases_per_1m_population&#34;:&#34;35,783&#34;,&#34;deaths_per_1m_population&#34;:&#34;65&#34;,&#34;total_tests&#34;:&#34;53,893&#34;,&#34;tests_per_1m_population&#34;:&#34;268,399&#34;},{&#34;country_name&#34;:&#34;Vanuatu&#34;,&#34;cases&#34;:&#34;6,793&#34;,&#34;deaths&#34;:&#34;12&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,991&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;790&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,222&#34;,&#34;deaths_per_1m_population&#34;:&#34;37&#34;,&#34;total_tests&#34;:&#34;24,976&#34;,&#34;tests_per_1m_population&#34;:&#34;78,027&#34;},{&#34;country_name&#34;:&#34;St. Vincent Grenadines&#34;,&#34;cases&#34;:&#34;6,779&#34;,&#34;deaths&#34;:&#34;106&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,641&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,757&#34;,&#34;deaths_per_1m_population&#34;:&#34;950&#34;,&#34;total_tests&#34;:&#34;98,860&#34;,&#34;tests_per_1m_population&#34;:&#34;886,033&#34;},{&#34;country_name&#34;:&#34;British Virgin Islands&#34;,&#34;cases&#34;:&#34;6,296&#34;,&#34;deaths&#34;:&#34;62&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;205,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,027&#34;,&#34;total_tests&#34;:&#34;102,862&#34;,&#34;tests_per_1m_population&#34;:&#34;3,362,163&#34;},{&#34;country_name&#34;:&#34;Sao Tome and Principe&#34;,&#34;cases&#34;:&#34;5,953&#34;,&#34;deaths&#34;:&#34;73&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,875&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;5&#34;,&#34;total_cases_per_1m_population&#34;:&#34;26,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;322&#34;,&#34;total_tests&#34;:&#34;29,036&#34;,&#34;tests_per_1m_population&#34;:&#34;128,193&#34;},{&#34;country_name&#34;:&#34;Turks and Caicos&#34;,&#34;cases&#34;:&#34;5,941&#34;,&#34;deaths&#34;:&#34;36&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,862&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;149,791&#34;,&#34;deaths_per_1m_population&#34;:&#34;908&#34;,&#34;total_tests&#34;:&#34;478,593&#34;,&#34;tests_per_1m_population&#34;:&#34;12,066,789&#34;},{&#34;country_name&#34;:&#34;Saint Kitts and Nevis&#34;,&#34;cases&#34;:&#34;5,561&#34;,&#34;deaths&#34;:&#34;43&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,517&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;798&#34;,&#34;total_tests&#34;:&#34;65,141&#34;,&#34;tests_per_1m_population&#34;:&#34;1,209,046&#34;},{&#34;country_name&#34;:&#34;Cook Islands&#34;,&#34;cases&#34;:&#34;4,727&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,990&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;737&#34;,&#34;total_cases_per_1m_population&#34;:&#34;268,686&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;15,740&#34;,&#34;tests_per_1m_population&#34;:&#34;894,674&#34;},{&#34;country_name&#34;:&#34;St. Barth&#34;,&#34;cases&#34;:&#34;4,432&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,279&#34;,&#34;deaths_per_1m_population&#34;:&#34;604&#34;,&#34;total_tests&#34;:&#34;78,646&#34;,&#34;tests_per_1m_population&#34;:&#34;7,919,243&#34;},{&#34;country_name&#34;:&#34;Palau&#34;,&#34;cases&#34;:&#34;4,396&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,879&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;511&#34;,&#34;total_cases_per_1m_population&#34;:&#34;240,877&#34;,&#34;deaths_per_1m_population&#34;:&#34;329&#34;,&#34;total_tests&#34;:&#34;45,500&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,151&#34;},{&#34;country_name&#34;:&#34;Kiribati&#34;,&#34;cases&#34;:&#34;3,076&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,597&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;466&#34;,&#34;total_cases_per_1m_population&#34;:&#34;25,058&#34;,&#34;deaths_per_1m_population&#34;:&#34;106&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Anguilla&#34;,&#34;cases&#34;:&#34;2,731&#34;,&#34;deaths&#34;:&#34;9&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,716&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;6&#34;,&#34;total_cases_per_1m_population&#34;:&#34;179,141&#34;,&#34;deaths_per_1m_population&#34;:&#34;590&#34;,&#34;total_tests&#34;:&#34;51,382&#34;,&#34;tests_per_1m_population&#34;:&#34;3,370,417&#34;},{&#34;country_name&#34;:&#34;Saint Pierre Miquelon&#34;,&#34;cases&#34;:&#34;2,641&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,449&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;191&#34;,&#34;total_cases_per_1m_population&#34;:&#34;459,864&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;22,941&#34;,&#34;tests_per_1m_population&#34;:&#34;3,994,602&#34;},{&#34;country_name&#34;:&#34;Diamond Princess&#34;,&#34;cases&#34;:&#34;712&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;699&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Wallis and Futuna&#34;,&#34;cases&#34;:&#34;454&#34;,&#34;deaths&#34;:&#34;7&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;438&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;9&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,713&#34;,&#34;deaths_per_1m_population&#34;:&#34;643&#34;,&#34;total_tests&#34;:&#34;20,508&#34;,&#34;tests_per_1m_population&#34;:&#34;1,884,234&#34;},{&#34;country_name&#34;:&#34;Montserrat&#34;,&#34;cases&#34;:&#34;183&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;174&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,622&#34;,&#34;deaths_per_1m_population&#34;:&#34;400&#34;,&#34;total_tests&#34;:&#34;9,700&#34;,&#34;tests_per_1m_population&#34;:&#34;1,941,165&#34;},{&#34;country_name&#34;:&#34;Falkland Islands&#34;,&#34;cases&#34;:&#34;128&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;34,944&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;8,632&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,538&#34;},{&#34;country_name&#34;:&#34;Macao&#34;,&#34;cases&#34;:&#34;82&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;123&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;5,375&#34;,&#34;tests_per_1m_population&#34;:&#34;8,079&#34;},{&#34;country_name&#34;:&#34;Vatican City&#34;,&#34;cases&#34;:&#34;29&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,025&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Marshall Islands&#34;,&#34;cases&#34;:&#34;15&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;250&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Western Sahara&#34;,&#34;cases&#34;:&#34;10&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16&#34;,&#34;deaths_per_1m_population&#34;:&#34;2&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;MS Zaandam&#34;,&#34;cases&#34;:&#34;9&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Niue&#34;,&#34;cases&#34;:&#34;8&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,860&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Nauru&#34;,&#34;cases&#34;:&#34;3&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;274&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Saint Helena&#34;,&#34;cases&#34;:&#34;2&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;327&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Micronesia&#34;,&#34;cases&#34;:&#34;1&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;}],&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;,&#34;world_total&#34;:{&#34;total_cases&#34;:&#34;509,268,964&#34;,&#34;new_cases&#34;:&#34;204,268&#34;,&#34;total_deaths&#34;:&#34;6,242,509&#34;,&#34;new_deaths&#34;:&#34;630&#34;,&#34;total_recovered&#34;:&#34;461,827,849&#34;,&#34;active_cases&#34;:&#34;41,198,606&#34;,&#34;serious_critical&#34;:&#34;42,510&#34;,&#34;total_cases_per_1m_population&#34;:&#34;65,334&#34;,&#34;deaths_per_1m_population&#34;:&#34;800.9&#34;,&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;}} . Build your own Web Service . To build a Web Service in the backend allows you to control information and errors between your app and the user. A proper Web Service requires more code:RESTful interface, error handling, and in this case reducing the calls to the service according to update frequency. . Project link: https://github.com/nighthawkcoders/spring_portfolio/blob/master/src/main/java/com/nighthawk/spring_portfolio/mvc/covid/CovidApiController.java | . package com.nighthawk.spring_portfolio.mvc.covid; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.util.Date; import java.util.HashMap; import org.json.simple.JSONObject; import org.json.simple.parser.JSONParser; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; @RestController // annotation to create a RESTful web services @RequestMapping(&quot;/api/covid&quot;) //prefix of API public class CovidApiController { private JSONObject body; //last run result private HttpStatus status; //last run status String last_run = null; //last run day of month // GET Covid 19 Stats @GetMapping(&quot;/daily&quot;) //added to end of prefix as endpoint public ResponseEntity&lt;JSONObject&gt; getCovid() { //calls API once a day, sets body and status properties String today = new Date().toString().substring(0,10); if (last_run == null || !today.equals(last_run)) { try { //APIs can fail (ie Internet or Service down) //RapidAPI header HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot;)) .header(&quot;x-rapidapi-key&quot;, &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;) .header(&quot;x-rapidapi-host&quot;, &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //JSONParser extracts text body and parses to JSONObject this.body = (JSONObject) new JSONParser().parse(response.body()); this.status = HttpStatus.OK; //200 success this.last_run = today; } catch (Exception e) { //capture failure info HashMap&lt;String, String&gt; status = new HashMap&lt;&gt;(); status.put(&quot;status&quot;, &quot;RapidApi failure: &quot; + e); //Setup object for error this.body = (JSONObject) status; this.status = HttpStatus.INTERNAL_SERVER_ERROR; //500 error this.last_run = null; } } //return JSONObject in RESTful style return new ResponseEntity&lt;&gt;(body, status); } } . Hacks . What are the benefits of using an API? . You can access information from the Internet as seen in the covid cases examples | You can better organize the data however you want | You can store the data for future personal use without having to go back to the Internet source | . | What are the benefits of backend implementation? . Easy and accessible storage of information that multiple frontend applications can reference | More people can access backend data for group projects --&gt; could be useful for our PBL project | . | . Example of Brian and I&#39;s example API . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://weatherbit-v1-mashape.p.rapidapi.com/forecast/3hourly?lat=35.5&amp;lon=-78.5&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;3d43659d98msh26d5e705bc7d8b6p1d6431jsnba44357aaf20&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;weatherbit-v1-mashape.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . {&#34;lon&#34;:-78.5,&#34;city_name&#34;:&#34;Four Oaks&#34;,&#34;timezone&#34;:&#34;America /New_York&#34;,&#34;state_code&#34;:&#34;NC&#34;,&#34;country_code&#34;:&#34;US&#34;,&#34;data&#34;:[{&#34;dewpt&#34;:12,&#34;uv&#34;:0,&#34;wind_dir&#34;:355,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:13.8,&#34;app_temp&#34;:13.8,&#34;wind_gust_spd&#34;:12.66,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:89,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:100,&#34;vis&#34;:14.496,&#34;pop&#34;:0,&#34;ozone&#34;:278.5,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1015,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664766000,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:03&#34;,&#34;wind_spd&#34;:5.76,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T03:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-02T23:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:11.3,&#34;uv&#34;:0,&#34;wind_dir&#34;:354,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:13.2,&#34;app_temp&#34;:13.2,&#34;wind_gust_spd&#34;:13.09,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:88,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008,&#34;clouds&#34;:100,&#34;vis&#34;:14.896,&#34;pop&#34;:0,&#34;ozone&#34;:280,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1014.5,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664776800,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:06&#34;,&#34;wind_spd&#34;:5.66,&#34;clouds_hi&#34;:22,&#34;timestamp_utc&#34;:&#34;2022-10-03T06:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T02:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:10.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:357,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.35984516,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.2,&#34;app_temp&#34;:12.2,&#34;wind_gust_spd&#34;:13.09,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:88,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:100,&#34;vis&#34;:14.696,&#34;pop&#34;:30,&#34;ozone&#34;:278.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1014.5,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664787600,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:09&#34;,&#34;wind_spd&#34;:5.01,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T09:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T05:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:9,&#34;uv&#34;:0.5,&#34;wind_dir&#34;:350,&#34;ghi&#34;:112.96,&#34;dhi&#34;:50.12,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:11.6,&#34;app_temp&#34;:11.6,&#34;wind_gust_spd&#34;:13.41,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:100,&#34;vis&#34;:16.496,&#34;pop&#34;:0,&#34;ozone&#34;:277.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664798400,&#34;dni&#34;:450.23,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:12&#34;,&#34;wind_spd&#34;:5.27,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T12:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T08:00:00&#34;,&#34;solar_rad&#34;:61.416},{&#34;dewpt&#34;:9.4,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:349,&#34;ghi&#34;:660.68,&#34;dhi&#34;:107.04,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.6,&#34;app_temp&#34;:12.6,&#34;wind_gust_spd&#34;:12.03,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:81,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:95,&#34;vis&#34;:17.888,&#34;pop&#34;:0,&#34;ozone&#34;:280.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:95,&#34;ts&#34;:1664809200,&#34;dni&#34;:855.58,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:15&#34;,&#34;wind_spd&#34;:5.8,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T15:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T11:00:00&#34;,&#34;solar_rad&#34;:161.2278},{&#34;dewpt&#34;:10.7,&#34;uv&#34;:2.9,&#34;wind_dir&#34;:352,&#34;ghi&#34;:765.62,&#34;dhi&#34;:113.49,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:14.4,&#34;app_temp&#34;:14.4,&#34;wind_gust_spd&#34;:12.66,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:76,&#34;vis&#34;:19.6,&#34;pop&#34;:0,&#34;ozone&#34;:279,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018,&#34;clouds_low&#34;:76,&#34;ts&#34;:1664820000,&#34;dni&#34;:888.69,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:18&#34;,&#34;wind_spd&#34;:7.14,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T18:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T14:00:00&#34;,&#34;solar_rad&#34;:470.6552},{&#34;dewpt&#34;:10.3,&#34;uv&#34;:1.2,&#34;wind_dir&#34;:354,&#34;ghi&#34;:329.23,&#34;dhi&#34;:80.32,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Broken clouds&#34;,&#34;icon&#34;:&#34;c03d&#34;,&#34;code&#34;:803},&#34;temp&#34;:15.3,&#34;app_temp&#34;:15.3,&#34;wind_gust_spd&#34;:12.82,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:72,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:68,&#34;vis&#34;:23.296,&#34;pop&#34;:0,&#34;ozone&#34;:278,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:68,&#34;ts&#34;:1664830800,&#34;dni&#34;:694.06,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-03:21&#34;,&#34;wind_spd&#34;:6.8,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-03T21:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T17:00:00&#34;,&#34;solar_rad&#34;:239.45114},{&#34;dewpt&#34;:7.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:351,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.2,&#34;app_temp&#34;:12.2,&#34;wind_gust_spd&#34;:15.16,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:75,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1011.5,&#34;clouds&#34;:100,&#34;vis&#34;:20.992,&#34;pop&#34;:0,&#34;ozone&#34;:282.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018.5,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664841600,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:00&#34;,&#34;wind_spd&#34;:5.88,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T00:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T20:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:6.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:355,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;wind_gust_spd&#34;:14.79,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:81,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1012,&#34;clouds&#34;:16,&#34;vis&#34;:17.6,&#34;pop&#34;:0,&#34;ozone&#34;:287.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1019,&#34;clouds_low&#34;:16,&#34;ts&#34;:1664852400,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:03&#34;,&#34;wind_spd&#34;:5.5,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T03:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-03T23:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:6.3,&#34;uv&#34;:0,&#34;wind_dir&#34;:352,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.0069999695,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:10,&#34;app_temp&#34;:10,&#34;wind_gust_spd&#34;:13.23,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:100,&#34;vis&#34;:19.392,&#34;pop&#34;:20,&#34;ozone&#34;:292.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664863200,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:06&#34;,&#34;wind_spd&#34;:4.67,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T06:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T02:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:6.1,&#34;uv&#34;:0,&#34;wind_dir&#34;:340,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:10.1,&#34;app_temp&#34;:10.1,&#34;wind_gust_spd&#34;:9.28,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:76,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:100,&#34;vis&#34;:20.192,&#34;pop&#34;:0,&#34;ozone&#34;:290.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664874000,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:09&#34;,&#34;wind_spd&#34;:3.95,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T09:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T05:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:5.7,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:330,&#34;ghi&#34;:110.28,&#34;dhi&#34;:49.59,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:9.3,&#34;app_temp&#34;:9.3,&#34;wind_gust_spd&#34;:7.73,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:1,&#34;vis&#34;:19.392,&#34;pop&#34;:0,&#34;ozone&#34;:291.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018,&#34;clouds_low&#34;:1,&#34;ts&#34;:1664884800,&#34;dni&#34;:445.23,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:12&#34;,&#34;wind_spd&#34;:3.77,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T12:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T08:00:00&#34;,&#34;solar_rad&#34;:110.27998},{&#34;dewpt&#34;:5.8,&#34;uv&#34;:1.4,&#34;wind_dir&#34;:346,&#34;ghi&#34;:656.61,&#34;dhi&#34;:106.81,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.6,&#34;app_temp&#34;:12.6,&#34;wind_gust_spd&#34;:14.13,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:63,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1009.5,&#34;clouds&#34;:100,&#34;vis&#34;:28.8,&#34;pop&#34;:0,&#34;ozone&#34;:294,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664895600,&#34;dni&#34;:854.55,&#34;clouds_mid&#34;:91,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:15&#34;,&#34;wind_spd&#34;:6.42,&#34;clouds_hi&#34;:100,&#34;timestamp_utc&#34;:&#34;2022-10-04T15:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T11:00:00&#34;,&#34;solar_rad&#34;:172.471},{&#34;dewpt&#34;:6.5,&#34;uv&#34;:2.3,&#34;wind_dir&#34;:328,&#34;ghi&#34;:760.49,&#34;dhi&#34;:113.23,&#34;precip&#34;:0.0009994507,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:13.2,&#34;app_temp&#34;:13.2,&#34;wind_gust_spd&#34;:11.88,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:64,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:88,&#34;vis&#34;:28.688,&#34;pop&#34;:20,&#34;ozone&#34;:294.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:88,&#34;ts&#34;:1664906400,&#34;dni&#34;:887.58,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:18&#34;,&#34;wind_spd&#34;:4.86,&#34;clouds_hi&#34;:100,&#34;timestamp_utc&#34;:&#34;2022-10-04T18:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T14:00:00&#34;,&#34;solar_rad&#34;:317.3131},{&#34;dewpt&#34;:7.2,&#34;uv&#34;:2,&#34;wind_dir&#34;:356,&#34;ghi&#34;:323.87,&#34;dhi&#34;:79.79,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801},&#34;temp&#34;:17.4,&#34;app_temp&#34;:17.4,&#34;wind_gust_spd&#34;:10.3,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:51,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1008,&#34;clouds&#34;:6,&#34;vis&#34;:24.096,&#34;pop&#34;:0,&#34;ozone&#34;:296.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1015.5,&#34;clouds_low&#34;:6,&#34;ts&#34;:1664917200,&#34;dni&#34;:690.48,&#34;clouds_mid&#34;:6,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-04:21&#34;,&#34;wind_spd&#34;:5.66,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-04T21:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T17:00:00&#34;,&#34;solar_rad&#34;:323.84955},{&#34;dewpt&#34;:6.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:322,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801},&#34;temp&#34;:14.5,&#34;app_temp&#34;:14.5,&#34;wind_gust_spd&#34;:4.7,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:60,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:4,&#34;vis&#34;:24.096,&#34;pop&#34;:0,&#34;ozone&#34;:300.8,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1664928000,&#34;dni&#34;:0,&#34;clouds_mid&#34;:4,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:00&#34;,&#34;wind_spd&#34;:1.91,&#34;clouds_hi&#34;:1,&#34;timestamp_utc&#34;:&#34;2022-10-05T00:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T20:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:6.5,&#34;uv&#34;:0,&#34;wind_dir&#34;:294,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801},&#34;temp&#34;:12.3,&#34;app_temp&#34;:12.3,&#34;wind_gust_spd&#34;:2.1,&#34;wind_cdir&#34;:&#34;WNW&#34;,&#34;rh&#34;:68,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:4,&#34;vis&#34;:24.096,&#34;pop&#34;:0,&#34;ozone&#34;:299.8,&#34;wind_cdir_full&#34;:&#34;west-northwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:2,&#34;ts&#34;:1664938800,&#34;dni&#34;:0,&#34;clouds_mid&#34;:4,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:03&#34;,&#34;wind_spd&#34;:1.82,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T03:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-04T23:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:5.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:294,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;,&#34;code&#34;:800},&#34;temp&#34;:10.8,&#34;app_temp&#34;:10.8,&#34;wind_gust_spd&#34;:2.4,&#34;wind_cdir&#34;:&#34;WNW&#34;,&#34;rh&#34;:71,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008,&#34;clouds&#34;:0,&#34;vis&#34;:24.096,&#34;pop&#34;:0,&#34;ozone&#34;:297.5,&#34;wind_cdir_full&#34;:&#34;west-northwest&#34;,&#34;slp&#34;:1016,&#34;clouds_low&#34;:0,&#34;ts&#34;:1664949600,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:06&#34;,&#34;wind_spd&#34;:2.1,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T06:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T02:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:2.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:316,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.4,&#34;app_temp&#34;:12.4,&#34;wind_gust_spd&#34;:10.7,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:51,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1007,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:296.8,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1015,&#34;clouds_low&#34;:100,&#34;ts&#34;:1664960400,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:09&#34;,&#34;wind_spd&#34;:3.48,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T09:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T05:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:3.5,&#34;uv&#34;:0.5,&#34;wind_dir&#34;:315,&#34;ghi&#34;:107.59,&#34;dhi&#34;:49.05,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;,&#34;code&#34;:804},&#34;temp&#34;:12.5,&#34;app_temp&#34;:12.5,&#34;wind_gust_spd&#34;:8.9,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:54,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1007.5,&#34;clouds&#34;:94,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:297.3,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1015.5,&#34;clouds_low&#34;:94,&#34;ts&#34;:1664971200,&#34;dni&#34;:440.1,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:12&#34;,&#34;wind_spd&#34;:3.09,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T12:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T08:00:00&#34;,&#34;solar_rad&#34;:77.4681},{&#34;dewpt&#34;:5.7,&#34;uv&#34;:4.5,&#34;wind_dir&#34;:337,&#34;ghi&#34;:652.51,&#34;dhi&#34;:106.58,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801},&#34;temp&#34;:18.5,&#34;app_temp&#34;:17.6,&#34;wind_gust_spd&#34;:7.2,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:43,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1008,&#34;clouds&#34;:2,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:293.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016,&#34;clouds_low&#34;:2,&#34;ts&#34;:1664982000,&#34;dni&#34;:853.5,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:15&#34;,&#34;wind_spd&#34;:4.6,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T15:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T11:00:00&#34;,&#34;solar_rad&#34;:652.50867},{&#34;dewpt&#34;:10.2,&#34;uv&#34;:5.5,&#34;wind_dir&#34;:339,&#34;ghi&#34;:755.35,&#34;dhi&#34;:112.97,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801},&#34;temp&#34;:22,&#34;app_temp&#34;:21.5,&#34;wind_gust_spd&#34;:5.41,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:47,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1007,&#34;clouds&#34;:10,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:291.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1014.5,&#34;clouds_low&#34;:10,&#34;ts&#34;:1664992800,&#34;dni&#34;:886.46,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:18&#34;,&#34;wind_spd&#34;:4.4,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T18:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T14:00:00&#34;,&#34;solar_rad&#34;:755.0609},{&#34;dewpt&#34;:10.7,&#34;uv&#34;:1.4,&#34;wind_dir&#34;:353,&#34;ghi&#34;:318.53,&#34;dhi&#34;:79.26,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Broken clouds&#34;,&#34;icon&#34;:&#34;c03d&#34;,&#34;code&#34;:803},&#34;temp&#34;:20.3,&#34;app_temp&#34;:19.8,&#34;wind_gust_spd&#34;:5.91,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:54,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:50,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:293.3,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1014.5,&#34;clouds_low&#34;:50,&#34;ts&#34;:1665003600,&#34;dni&#34;:686.84,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-05:21&#34;,&#34;wind_spd&#34;:5.34,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-05T21:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T17:00:00&#34;,&#34;solar_rad&#34;:282.52707},{&#34;dewpt&#34;:10.1,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:16.2,&#34;app_temp&#34;:16.2,&#34;wind_gust_spd&#34;:2.62,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:67,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:81,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:295,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:81,&#34;ts&#34;:1665014400,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:00&#34;,&#34;wind_spd&#34;:2.53,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-06T00:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T20:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:10.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:20,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:17,&#34;app_temp&#34;:17,&#34;wind_gust_spd&#34;:8.01,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:64,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:95,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:294.3,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:95,&#34;ts&#34;:1665025200,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:03&#34;,&#34;wind_spd&#34;:2.52,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-06T03:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-05T23:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:9.3,&#34;uv&#34;:0,&#34;wind_dir&#34;:342,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;,&#34;code&#34;:804},&#34;temp&#34;:16.3,&#34;app_temp&#34;:16.3,&#34;wind_gust_spd&#34;:5.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:63,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:90,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:294.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1017,&#34;clouds_low&#34;:90,&#34;ts&#34;:1665036000,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:06&#34;,&#34;wind_spd&#34;:2.17,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-06T06:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T02:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:8.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:337,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801},&#34;temp&#34;:14.6,&#34;app_temp&#34;:14.6,&#34;wind_gust_spd&#34;:3.11,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:67,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:297.8,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1017,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665046800,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:09&#34;,&#34;wind_spd&#34;:2.29,&#34;clouds_hi&#34;:5,&#34;timestamp_utc&#34;:&#34;2022-10-06T09:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T05:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:8.8,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:302,&#34;ghi&#34;:104.89,&#34;dhi&#34;:48.5,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:14.2,&#34;app_temp&#34;:14.2,&#34;wind_gust_spd&#34;:1.93,&#34;wind_cdir&#34;:&#34;WNW&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1009.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:300.8,&#34;wind_cdir_full&#34;:&#34;west-northwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665057600,&#34;dni&#34;:434.85,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:12&#34;,&#34;wind_spd&#34;:1.67,&#34;clouds_hi&#34;:2,&#34;timestamp_utc&#34;:&#34;2022-10-06T12:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T08:00:00&#34;,&#34;solar_rad&#34;:104.89},{&#34;dewpt&#34;:11.5,&#34;uv&#34;:4.5,&#34;wind_dir&#34;:245,&#34;ghi&#34;:648.36,&#34;dhi&#34;:106.35,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:20.8,&#34;app_temp&#34;:20.4,&#34;wind_gust_spd&#34;:3.8,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:55,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:298.8,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1018.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665068400,&#34;dni&#34;:852.42,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:15&#34;,&#34;wind_spd&#34;:2.88,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-06T15:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T11:00:00&#34;,&#34;solar_rad&#34;:627.3599},{&#34;dewpt&#34;:11.2,&#34;uv&#34;:5.8,&#34;wind_dir&#34;:254,&#34;ghi&#34;:750.18,&#34;dhi&#34;:112.7,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:24.6,&#34;app_temp&#34;:24.2,&#34;wind_gust_spd&#34;:5.41,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:43,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:294.5,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665079200,&#34;dni&#34;:885.31,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:18&#34;,&#34;wind_spd&#34;:4.07,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-06T18:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T14:00:00&#34;,&#34;solar_rad&#34;:726.7842},{&#34;dewpt&#34;:10.5,&#34;uv&#34;:2.1,&#34;wind_dir&#34;:257,&#34;ghi&#34;:313.22,&#34;dhi&#34;:78.72,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801},&#34;temp&#34;:25,&#34;app_temp&#34;:24.6,&#34;wind_gust_spd&#34;:5.3,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:40,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1007.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:295.3,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1015,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665090000,&#34;dni&#34;:683.15,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-06:21&#34;,&#34;wind_spd&#34;:3.6,&#34;clouds_hi&#34;:5,&#34;timestamp_utc&#34;:&#34;2022-10-06T21:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T17:00:00&#34;,&#34;solar_rad&#34;:303.71323},{&#34;dewpt&#34;:9.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:272,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;,&#34;code&#34;:800},&#34;temp&#34;:18.7,&#34;app_temp&#34;:18,&#34;wind_gust_spd&#34;:2.11,&#34;wind_cdir&#34;:&#34;W&#34;,&#34;rh&#34;:55,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:295.5,&#34;wind_cdir_full&#34;:&#34;west&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665100800,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:00&#34;,&#34;wind_spd&#34;:2.07,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T00:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T20:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:8.3,&#34;uv&#34;:0,&#34;wind_dir&#34;:239,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;,&#34;code&#34;:800},&#34;temp&#34;:16.9,&#34;app_temp&#34;:16.9,&#34;wind_gust_spd&#34;:2.5,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:57,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:301.8,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665111600,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:03&#34;,&#34;wind_spd&#34;:2.49,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T03:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-06T23:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:7.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:245,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;,&#34;code&#34;:800},&#34;temp&#34;:15.6,&#34;app_temp&#34;:15.6,&#34;wind_gust_spd&#34;:4.9,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:60,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:300.5,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665122400,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:06&#34;,&#34;wind_spd&#34;:3.08,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T06:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T02:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:9.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:245,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:801},&#34;temp&#34;:14.6,&#34;app_temp&#34;:14.6,&#34;wind_gust_spd&#34;:5.8,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009.5,&#34;clouds&#34;:4,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:300.8,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1017.5,&#34;clouds_low&#34;:4,&#34;ts&#34;:1665133200,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:09&#34;,&#34;wind_spd&#34;:2.99,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T09:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T05:00:00&#34;,&#34;solar_rad&#34;:0},{&#34;dewpt&#34;:9.5,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:242,&#34;ghi&#34;:102.19,&#34;dhi&#34;:47.94,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:14.7,&#34;app_temp&#34;:14.7,&#34;wind_gust_spd&#34;:5.91,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:71,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:299.3,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1018,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665144000,&#34;dni&#34;:429.47,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:12&#34;,&#34;wind_spd&#34;:2.72,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T12:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T08:00:00&#34;,&#34;solar_rad&#34;:102.19},{&#34;dewpt&#34;:9.8,&#34;uv&#34;:4.5,&#34;wind_dir&#34;:242,&#34;ghi&#34;:644.19,&#34;dhi&#34;:106.11,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;,&#34;code&#34;:801},&#34;temp&#34;:22.7,&#34;app_temp&#34;:22.1,&#34;wind_gust_spd&#34;:6.11,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:44,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1011,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:297.8,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1018.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665154800,&#34;dni&#34;:851.32,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:15&#34;,&#34;wind_spd&#34;:4.2,&#34;clouds_hi&#34;:4,&#34;timestamp_utc&#34;:&#34;2022-10-07T15:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T11:00:00&#34;,&#34;solar_rad&#34;:644.1899},{&#34;dewpt&#34;:9.5,&#34;uv&#34;:5.7,&#34;wind_dir&#34;:256,&#34;ghi&#34;:744.99,&#34;dhi&#34;:112.43,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:26.7,&#34;app_temp&#34;:26.4,&#34;wind_gust_spd&#34;:4.8,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:296,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665165600,&#34;dni&#34;:884.15,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:18&#34;,&#34;wind_spd&#34;:3.59,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T18:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T14:00:00&#34;,&#34;solar_rad&#34;:744.99},{&#34;dewpt&#34;:11.4,&#34;uv&#34;:2,&#34;wind_dir&#34;:265,&#34;ghi&#34;:307.93,&#34;dhi&#34;:78.17,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;,&#34;code&#34;:800},&#34;temp&#34;:26.9,&#34;app_temp&#34;:26.7,&#34;wind_gust_spd&#34;:5.81,&#34;wind_cdir&#34;:&#34;W&#34;,&#34;rh&#34;:38,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1008,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:294.3,&#34;wind_cdir_full&#34;:&#34;west&#34;,&#34;slp&#34;:1015.5,&#34;clouds_low&#34;:0,&#34;ts&#34;:1665176400,&#34;dni&#34;:679.4,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-07:21&#34;,&#34;wind_spd&#34;:3.36,&#34;clouds_hi&#34;:0,&#34;timestamp_utc&#34;:&#34;2022-10-07T21:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T17:00:00&#34;,&#34;solar_rad&#34;:297.98105},{&#34;dewpt&#34;:10.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:255,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;,&#34;code&#34;:802},&#34;temp&#34;:20.6,&#34;app_temp&#34;:20.1,&#34;wind_gust_spd&#34;:1.21,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:53,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:25,&#34;vis&#34;:24.128,&#34;pop&#34;:0,&#34;ozone&#34;:293,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1016.5,&#34;clouds_low&#34;:7,&#34;ts&#34;:1665187200,&#34;dni&#34;:0,&#34;clouds_mid&#34;:0,&#34;snow&#34;:0,&#34;datetime&#34;:&#34;2022-10-08:00&#34;,&#34;wind_spd&#34;:1.13,&#34;clouds_hi&#34;:98,&#34;timestamp_utc&#34;:&#34;2022-10-08T00:00:00&#34;,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-07T20:00:00&#34;,&#34;solar_rad&#34;:0}],&#34;lat&#34;:35.5} .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/28/RapidAPI.html",
            "relUrl": "/jupyter/2022/09/28/RapidAPI.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Calculator Code",
            "content": "&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt; Calculator using HTML Example &lt;/title&gt; &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Cookie&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; &lt;!-- CSS property to create interactive calculator interface --&gt; &lt;style&gt; body { background-color: pink; } .box { background-color: #2fba97; height: 300px; width: 270px; border-radius: 10px; position: relative; top: 80px; left: 40%; } .display { background-color: #222; width: 220px; position: relative; left: 15px; top: 20px; height: 40px; } .display input { position: relative; left: 2px; top: 2px; height: 35px; color: black; background-color: #bccd95; font-size: 21px; text-align: right; } .keys { position: relative; top: 15px; } .button { width: 40px; height: 30px; border: none; border-radius: 8px; margin-left: 17px; cursor: pointer; border-top: 2px solid transparent; } .button.gray { color: black; font-color: black; background-color: #6f6f6f; border-bottom: black 2px solid; border-top: 2px #6f6f6f solid; } .title:hover { color: #fff; } .title { margin-bottom: 10px; margin-top: 30px; padding: 5px 0; font-size: 40px; font-weight: bold; text-align: center; color: black; font-family: &#39;Cookie&#39;, cursive; } .button.pink { color: black; background-color: #ff4561; border-bottom: black 2px solid; } .button.black { color: black; background-color: 303030; border-bottom: black 2px solid; border-top: 2px 303030 solid; font-weight: bold; } .button.orange { color: black; background-color: FF9933; border-bottom: black 2px solid; border-top: 2px FF9933 solid; } .gray:active { border-top: black 2px solid; border-bottom: 2px #6f6f6f solid; } .pink:active { border-top:black 2px solid; border-bottom:#ff4561 2px solid; } .black:active { border-top: black 2px solid; border-bottom: #303030 2px solid; } .orange:active { border-top: black 2px solid; border-bottom: FF9933 2px solid; } p { line-height: 10px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class = &quot;title? align=&quot;centre&quot;&gt; Example of Calculator using HTML &lt;/div&gt; &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;display&quot;&gt; &lt;input type=&quot;text&quot; readonly size=&quot;18&quot; id=&quot;d&quot;&gt; &lt;/div&gt; &lt;div class=&quot;keys&quot;&gt; &lt;p&gt; &lt;input type=&quot;button&quot; class=&quot;button gray&quot; value=&quot;mrc&quot; onclick=&#39;c(&quot;Created....................&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button gray&quot; value=&quot;m-&quot; onclick=&#39;c(&quot;...............by............&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button gray&quot; value=&quot;m+&quot; onclick=&#39;c(&quot;.....................Anoop&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button pink&quot; value=&quot;/&quot; onclick=&#39;v(&quot;/&quot;)&#39;&gt; &lt;/p&gt; &lt;p&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;7&quot; onclick=&#39;v(&quot;7&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;8&quot; onclick=&#39;v(&quot;8&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;9&quot; onclick=&#39;v(&quot;9&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button pink&quot; value=&quot;*&quot; onclick=&#39;v(&quot;*&quot;)&#39;&gt; &lt;/p&gt; &lt;p&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;4&quot; onclick=&#39;v(&quot;4&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;5&quot; onclick=&#39;v(&quot;5&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;6&quot; onclick=&#39;v(&quot;6&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button pink&quot; value=&quot;-&quot; onclick=&#39;v(&quot;-&quot;)&#39;&gt; &lt;/p&gt; &lt;p&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;1&quot; onclick=&#39;v(&quot;1&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;2&quot; onclick=&#39;v(&quot;2&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;3&quot; onclick=&#39;v(&quot;3&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button pink&quot; value=&quot;+&quot; onclick=&#39;v(&quot;+&quot;)&#39;&gt; &lt;/p&gt; &lt;p&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;0&quot; onclick=&#39;v(&quot;0&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;.&quot; onclick=&#39;v(&quot;.&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button black&quot; value=&quot;C&quot; onclick=&#39;c(&quot;&quot;)&#39;&gt; &lt;input type=&quot;button&quot; class=&quot;button orange&quot; value=&quot;=&quot; onclick=&#39;e()&#39;&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt; function c(val) { document.getElementById(&quot;d&quot;).value=val; } function v(val) {document.getElementById(&quot;d&quot;).value+=val; } function e() { try { c(eval(document.getElementById(&quot;d&quot;).value)) } catch(e) { c(&#39;Error&#39;) } } &lt;/script&gt; &lt;/html&gt; .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/27/CalculatorCode.html",
            "relUrl": "/jupyter/2022/09/27/CalculatorCode.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Abstract Class Fibonacci",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(30); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } } . public class FiboFor extends Fibo { public FiboFor() { super(); } public FiboFor(int nth) { super(nth); } @Override protected void init() { super.name = &quot;For Extends&quot;; long limit = this.size; // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = For Extends fibonacci Number 30 = 514229 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765], 21=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946], 22=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711], 23=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657], 24=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368], 25=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025], 26=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393], 27=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418], 28=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811], 29=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Sequence 21 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Sequence 22 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946] fibonacci Sequence 23 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711] fibonacci Sequence 24 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657] fibonacci Sequence 25 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368] fibonacci Sequence 26 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025] fibonacci Sequence 27 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393] fibonacci Sequence 28 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418] fibonacci Sequence 29 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811] fibonacci Sequence 30 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229] . public class FiboStream extends Fibo { public FiboStream() { super(); } public FiboStream(int nth) { super(nth); } @Override protected void init() { super.name = &quot;Stream Extends&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(super.size) .forEach(f -&gt; super.setData(f[0]) ); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboStream fib = new FiboStream(); fib.print(); } } FiboStream.main(null); . Init method = Stream Extends fibonacci Number 30 = 514229 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765], 21=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946], 22=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711], 23=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657], 24=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368], 25=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025], 26=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393], 27=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418], 28=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811], 29=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Sequence 21 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Sequence 22 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946] fibonacci Sequence 23 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711] fibonacci Sequence 24 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657] fibonacci Sequence 25 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368] fibonacci Sequence 26 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025] fibonacci Sequence 27 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393] fibonacci Sequence 28 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418] fibonacci Sequence 29 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811] fibonacci Sequence 30 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229] .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/27/Abstract.html",
            "relUrl": "/jupyter/2022/09/27/Abstract.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Java Script and HTML",
            "content": "Console Log Output . console.log(&quot;Hello, World!&quot;); . Hello, World! . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . console.log(&quot;Reuse!&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse! Hello, Students! 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;Hi Class!&quot;); // String logItType(2022); // Number logItType([1, 2, 3]); . Looking at dynamic nature of types in JavaScript string ; Hi Class! number ; 2022 object ; [ 1, 2, 3 ] . Building a Person Function/Class object . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Hacks . Sample Calculator using HTML: https://hetvit27.github.io/hetvitrivedi/calculator/ . Used basic math like addition, subtraction, multiplication, and division and defined operations | Used grids for design of the numbers | Styled the calculator with color and pixels | Another idea is that on the backend, I could&#39;ve used a console that show a tab at the top of the page for outputs | . //logging function function logIt(output) { console.log(output); } // define a function to hold data for a Person function Name(age, grade, hobbies) { this.age = age; this.grade = grade; this.hobbies = hobbies; this.role = &quot;&quot;; } // define a setter for role in Person data Name.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Name.prototype.toJSON = function() { const obj = {age: this.age, grade: this.grade, hobbies: this.hobbies, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var SoccerCaptain = new Member(&quot;Shree Mehta&quot;, &quot;12th&quot;, [&quot;Dancing&quot;, &quot;Going to the beach&quot;, &quot;Painting&quot;]); // object type is easy to work with in JavaScript logItType(SoccerCaptain); // before role logItType(SoccerCaptain.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher SoccerCaptain.setRole(&quot;Soccer Captain&quot;); // set the role logItType(SoccerCaptain); logItType(SoccerCaptain.toJSON()); . object ; Member { name: &#39;Shree Mehta&#39;, grade: &#39;12th&#39;, events: [ &#39;Dancing&#39;, &#39;Going to the beach&#39;, &#39;Painting&#39; ], role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Shree Mehta&#34;,&#34;grade&#34;:&#34;12th&#34;,&#34;events&#34;:[&#34;Dancing&#34;,&#34;Going to the beach&#34;,&#34;Painting&#34;],&#34;role&#34;:&#34;&#34;} object ; Member { name: &#39;Shree Mehta&#39;, grade: &#39;12th&#39;, events: [ &#39;Dancing&#39;, &#39;Going to the beach&#39;, &#39;Painting&#39; ], role: &#39;Soccer Captain&#39; } string ; {&#34;name&#34;:&#34;Shree Mehta&#34;,&#34;grade&#34;:&#34;12th&#34;,&#34;events&#34;:[&#34;Dancing&#34;,&#34;Going to the beach&#34;,&#34;Painting&#34;],&#34;role&#34;:&#34;Soccer Captain&#34;} .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/25/JavaScriptandHTML.html",
            "relUrl": "/jupyter/2022/09/25/JavaScriptandHTML.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Fibonacci Classes",
            "content": "Mr. M&#39;s base code . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . For Loop . public class FiboFor extends Fibo { /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public FiboFor() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public FiboFor(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } protected void init(){ this.name = &quot;For&quot;; this.setData(0); this.setData(1); // 1b. for each index up to the desired index, calculate and set the data and move to the next index // 4c. both the for loop and while loop end up looping over the same numbers and perform the same action, so the result is expected to be the same // 5a. recursion recalculates each of the previous indexes each time it runs, while the for loop and while loop calculate every index only once. for(int iter = 2; iter &lt; this.size; iter++){ this.setData(this.list.get(iter-2)+this.list.get(iter-1)); } } static public void main(String[] args) { FiboFor fib = new FiboFor(5); fib.print(); } } FiboFor.main(null); . Init method = For fibonacci Number 5 = 3 fibonacci List = [0, 1, 1, 2, 3] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0], 21=[0, 1], 22=[0, 1, 1], 23=[0, 1, 1, 2], 24=[0, 1, 1, 2, 3]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] Init method runtime = 0 . While Loop . public class FiboWhile extends Fibo { /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public FiboWhile() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public FiboWhile(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } protected void init(){ this.name = &quot;While&quot;; this.setData(0); this.setData(1); int iter = 2; // 1b. while the index is less than the desired index, calculate and set the data and move to the next index // 4c. both the for loop and while loop end up looping over the same numbers and perform the same action, so the result is expected to be the same while(iter &lt; this.size){ this.setData(this.list.get(iter-2)+this.list.get(iter-1)); iter++; } } static public void main(String[] args) { FiboWhile fib = new FiboWhile(); fib.print(); } } FiboWhile.main(null); . Recursion . public class FiboRecursion extends Fibo { /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public FiboRecursion() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public FiboRecursion(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } protected void init(){ this.name = &quot;Recursion&quot;; for(int index = 0; index &lt; this.size; index++){ this.setData(this.calc(index)); } } // 1b. Calculate the result based on the previous two indexes starting with 0 and 1 at the bottom public int calc(int index) { if (index &lt; 2) { return index; } return this.calc(index-2) + this.calc(index-1); } static public void main(String[] args) { FiboRecursion fib = new FiboRecursion(); fib.print(); } } FiboRecursion.main(null); . Init method = Recursion Method Demonstration fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] Init method runtime = 61625 . Hacks . Skill 1.B: Used different types of loops or methods of program for each situation | . I did a for loop, while loops, and recursion method to show different situations with Fibonacci Calculations. . Skill 4.C: Code segments produce same results because the output is printed in the same format, the only thing changing is the type of loop. Key Finding: Different Loops can produce same output as long as the loops have the same purpose- in this case with for and while loops | . All the methods produce the same output. . Skill 5.A: Recursion runs the fastest since it&#39;s not a loop, but all methods work equally well. It&#39;s important to know how to recreate a program in different ways. . We recreated the fibonacci program in different ways that all work successfully. Recursion is the slowest while the for and while loops are the fastest. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/24/FibonacciClass.html",
            "relUrl": "/jupyter/2022/09/24/FibonacciClass.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Methods in Java",
            "content": "What is a Method? . Function or sub-code that is associated with a class in object-oriented programming | Can contain a set of codes that performs an action | It can also take an input and return an output based on the user | . Creating a Method . A method is created within a class | It is defined with the name, followed by () | An example of a Java pre-defined method is System.out.println() | . Example Code . public class Main { static void ExampleMethod(){ // ExampleMethod is the name of the method; static means that the method belongs to the Main class and not an object System.out.println(&quot;Hi!&quot;); } } . Calling a Method . With Java, you can call a method by writing the method&#39;s name and then having (); after it | . Example Code . public class Main { static void ExampleMethod() { System.out.println(&quot;Hello AP CSA!&quot;); } public static void main(String[] args) { ExampleMethod(); } } // Outputs &quot;I just got executed!&quot; . Hacks . Fill in the missing code: | . static void myMethod() { System.out.println(&quot;I just got executed&quot;); } public static void main(String[] args) { __; } . Describe what the Method does: public String myMethod(String s,int i){ String r = &#39;&#39;; for(int j = 0; j &lt; s.length(); j++) { r += (char)(s.charAt(j)+i); . } return r; } | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/19/Methods.html",
            "relUrl": "/jupyter/2022/09/19/Methods.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Control Structures in Java",
            "content": "Overview to Control Structures . Programming blocks that can change the path taken to complete a set of instructions | There are three kinds of structures: Conditional branches, Loops, and Branching Statements | Conditional Branches are used for choosing between two or more paths: if/else/else if and switch case | Loops are used to sift through different objects and run loops of specific codes: for, while, and do while | Branching Statements are used to change the process of loops: break and continue | . If/Else/Else If . We used this when we make our own learnings last week about if/else statements and Boolean expressions . | Chooses between two paths . | . if (count &gt; 6) { System.out.println(&quot;Count is higher than 6&quot;); } else { System.out.println(&quot;Count is lower or equal than 6&quot;); } . Ternary Operator . Takes three operands rather than one or two . | Shorter way to write an if else code; uses a question mark . | . System.out.println(count &gt; 6 ? &quot;Count is higher than 6&quot; : &quot;Count is lower or equal than 6&quot;); . Switch case . If-else ladder that checks multiple conditions at once | Value inputted is checked with each given case until a match is found | Things to remember: two cases can&#39;t have the same value, data variable needs to be the same in all cases, and the value needs to be literal or constant not a variable. | . import java.util.Scanner; public class SwitchExample { // sets up class and objects for scanner public void go() { Scanner scan = new Scanner(System.in); int score = scan.nextInt(); switch (score){ // switch statement with condition that goes through different cases to find a match case 1: // for the score of less than 60 System.out.println(&quot;You got an F&quot;); break; case 2: // for the score between 60 and 70 System.out.println(&quot;You got a D&quot;); break; case 3: // for a score between 70 and 80 System.out.println(&quot;You got a C&quot;); break; case 4: // for a score between an 80 and a 90 System.out.println(&quot;You got a B&quot;); break; case 5: // for a score between a 90 and 100 System.out.println(&quot;You got an A&quot;); break; default: // if none of the cases are a match, this is what will be the code automatically executed System.out.println(&quot;You didn&#39;t even get a grade&quot;); } } public static void main(String[] args) { SwitchExample cond = new SwitchExample(); cond.go(); } } SwitchExample.main(null); . You didn&#39;t even get a grade . Loops . Used to repeat a code multiple times . | We can set the number of times we want the code to be repeated . | . for (int i = 5; i &lt;= 90; i++) { methodToRepeat(); } int whileCounter = 5; while (whileCounter &lt;= 90) { methodToRepeat(); whileCounter++; } . Break and Continue . A break is used to leave a loop earlier than expected | A continue is used to skip a loop we were already in | . List&lt;String&gt; names = getNameList(); String name = &quot;Group 3&quot;; int index = 0; for ( ; index &lt; names.length; index++) { if (names[index].equals(name)) { break; } } // Using a list of groups to find one in specific. When we find Group 3, the code will &quot;break&quot; or stop. . List&lt;String&gt; names = getNameList(); String name = &quot;Group 3&quot;; String list = &quot;&quot;; for (int i = 0; i &lt; names.length; i++) { if (names[i].equals(name)) { continue; } list += names[i]; } // Here, if Group 3 is identified, this code will stop and the program will move on to the next; it will &quot;continue&quot; .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/19/ControlStructure.html",
            "relUrl": "/jupyter/2022/09/19/ControlStructure.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "2D Array",
            "content": "Mr. M&#39;s Code . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ (◕‿◕✿) _⍾_/ ==4== _/ _ 4 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ 3 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 2 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ 1 little monkeys jumping on the bed... ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Bats and More Lines of the Song . class BatLoop { String [][] bats; public BatLoop() { bats = new String[][]{ // added bats instead of monkeys! //Bat 0 { &quot; / hetvi / &quot;, &quot;/ &#39;._ ( _/) _.&#39;/ &quot;, &quot;|.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| &quot;, &quot; _ / `;=/ =;` _/ &quot;, &quot; ` __| ___/ |__/` &quot;, &quot; (_|_)/ &quot;, }, //Bat 1 { &quot; / brian / &quot;, &quot;/ &#39;._ ( _/) _.&#39;/ &quot;, &quot;|.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| &quot;, &quot; _ / `;=/ =;` _/ &quot;, &quot; ` __| ___/ |__/` &quot;, &quot; (_|_)/ &quot;, }, //Bat 2 { &quot; / ellen / &quot;, &quot;/ &#39;._ ( _/) _.&#39;/ &quot;, &quot;|.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| &quot;, &quot; _ / `;=/ =;` _/ &quot;, &quot; ` __| ___/ |__/` &quot;, &quot; (_|_)/ &quot;, }, //Bat 3 { &quot; / jazair / &quot;, &quot;/ &#39;._ ( _/) _.&#39;/ &quot;, &quot;|.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| &quot;, &quot; _ / `;=/ =;` _/ &quot;, &quot; ` __| ___/ |__/` &quot;, &quot; (_|_)/ &quot;, }, //Bat 4 { &quot; / Mr. M / &quot;, &quot;/ &#39;._ ( _/) _.&#39;/ &quot;, &quot;|.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| &quot;, &quot; _ / `;=/ =;` _/ &quot;, &quot; ` __| ___/ |__/` &quot;, &quot; (_|_)/ &quot;, }, }; } public void printPoem() { System.out.println(); System.out.println(&quot;Bat Jumpers Poem in Java Loopy&quot;); int batCount = bats.length; for (int i = batCount; i &gt;= 1; i--) { for (int row = 0; row &lt; batCount; row++) { for (int col = 0; col &lt; bats[row].length; col++) { System.out.print(bats[row][col] + &quot; &quot;); System.out.println(); } System.out.println(); } // Added the rest of the poem under the bat print if (i &gt; 1){ System.out.println(i + &quot; little bats jumping on the bed...&quot;); } else{ System.out.println(i + &quot; little bats jumping on the bed...&quot;); } System.out.println(&quot;One fell down and bumped his head!&quot;); System.out.println(&quot;Mama called the doctor and the doctor said:&quot;); if (i == 1){ System.out.println(&quot;Put those bats right to bed!&quot;); } else{ System.out.println(&quot;No more bats jumping on the bed!&quot;); } System.out.println(); batCount -= 1; } System.out.println(&quot;All the bats are off the bed!&quot;); System.out.println(&quot;Bye Bye Bats&quot;); } public static void main(String[] args) { new BatLoop().printPoem(); } } BatLoop.main(null); . Bat Jumpers Poem in Java Loopy / hetvi / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / brian / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / ellen / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / jazair / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / Mr. M / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ 5 little bats jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more bats jumping on the bed! / hetvi / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / brian / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / ellen / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / jazair / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ 4 little bats jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more bats jumping on the bed! / hetvi / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / brian / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / ellen / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ 3 little bats jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more bats jumping on the bed! / hetvi / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ / brian / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ 2 little bats jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more bats jumping on the bed! / hetvi / / &#39;._ ( _/) _.&#39;/ |.&#39;&#39;._&#39;--(o.o)--&#39;_.&#39;&#39;.| _ / `;=/ =;` _/ ` __| ___/ |__/` (_|_)/ 1 little bats jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: Put those bats right to bed! All the bats are off the bed! Bye Bye Bats . class MonkeyLoop { String [][] monkeys; public MonkeyLoop() { monkeys = new String[][]{ //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot;hetvi-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot; ʕ༼ ◕_◕ ༽ʔ &quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; +++brian+++&quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ &quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-ellen-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ &quot;, //[3][0] &quot; _⍾_/ &quot;, &quot;==jazair== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot;==mr.m== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } public void printPoem() { System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) { for (int col = 0; col &lt; monkeys[col].length; col++) { for (int row = 0; row &lt; monkeyCount; row++) { System.out.print(monkeys[row][col]); //print rows then columns instead of opposite System.out.print(&quot; t&quot;); //insert tab in text to line up each monkey in row } System.out.println(); } if (i &gt; 1){ System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); } else{ System.out.println(i + &quot; little monkey jumping on the bed...&quot;); } System.out.println(&quot;One fell down and bumped his head!&quot;); System.out.println(&quot;Mama called the doctor and the doctor said:&quot;); if (i == 1){ // if there is one monkey left, print the last line System.out.println(&quot;Put those monkeys right to bed!&quot;); } else{ System.out.println(&quot;No more monkey&#39;s jumping on the bed!&quot;); } System.out.println(); monkeyCount -= 1; } System.out.println(&quot;All the monkeys stopped jumping&quot;); System.out.println(&quot;Bye-bye monkeys&quot;); } public static void main(String[] args) { new MonkeyLoop().printPoem(); } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ (◕‿◕✿) _⏄_/ _⎏_/ _⎐_/ _⍾_/ _⍾_/ hetvi-- +++brian+++ &lt;-ellen-&gt; ==jazair== ==mr.m== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ _/ _ 5 little monkeys jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more monkey&#39;s jumping on the bed! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ _⏄_/ _⎏_/ _⎐_/ _⍾_/ hetvi-- +++brian+++ &lt;-ellen-&gt; ==jazair== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ 4 little monkeys jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more monkey&#39;s jumping on the bed! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ _⏄_/ _⎏_/ _⎐_/ hetvi-- +++brian+++ &lt;-ellen-&gt; ⎛ ⎞ ⌋ ⌊ 〈 〉 3 little monkeys jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more monkey&#39;s jumping on the bed! ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ _⏄_/ _⎏_/ hetvi-- +++brian+++ ⎛ ⎞ ⌋ ⌊ 2 little monkeys jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: No more monkey&#39;s jumping on the bed! ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ hetvi-- ⎛ ⎞ 1 little monkey jumping on the bed... One fell down and bumped his head! Mama called the doctor and the doctor said: Put those monkeys right to bed! All the monkeys stopped jumping Bye-bye monkeys . Hacks Questions . Is this program in more of an Imperative Programming Style or OOP Style? Explain. | . This is more Imperative Programming Style because it is not based on objects. Object based programming is more for data sets and manipulating them. Imperative programming is more similar to what we are doing here: coding for each monkey to resolve the problem -- it fell off the bed. . Are the monkeys objects? | . No they are not objects . How to access 2-D arrays? | . You can access the 2-D array by using the row index value and column index value: Name_of_the arrays[row_index][column_index]; . Notes and Takeaways . 2D arrays are like tables; they have rows and columns for storing data . | Teachers can use a 2-D array to store students&#39; grades Accessing 2D Arrays: Use[first][second] where the first index is the desired row, and the second index is the the desired column . | 2D arrays are indexed starting at 0 . | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/19/2dArray.html",
            "relUrl": "/jupyter/2022/09/19/2dArray.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "2018 FRQ 1",
            "content": "public class FrogSimulation { /** Distance, in inches, from the starting position to the goal. */ private int goalDistance; /** Maximum number of hops allowed to reach the goal. */ private int maxHops; /** Constructs a FrogSimulation where dist is the distance, in inches, from the starting * position to the goal, and numHops is the maximum number of hops allowed to reach the goal. * Precondition: dist &gt; 0; numHops &gt; 0 */ public FrogSimulation(int dist, int numHops) { goalDistance = dist; maxHops = numHops; } /** Returns an integer representing the distance, in inches, to be moved when the frog hops. */ private int hopDistance() { /* implementation not shown */ } /** Simulates a frog attempting to reach the goal as described in part (a). * Returns true if the frog successfully reached or passed the goal during the simulation; * false otherwise. */ public boolean simulate() { /* to be implemented in part (a) */ } /** Runs num simulations and returns the proportion of simulations in which the frog * successfully reached or passed the goal. * Precondition: num &gt; 0 */ public double runSimulations(int num) { /* to be implemented in part (b) */ } } . Part A and Explanation . Write the simulate method, which simulates the frog attempting to hop in a straight line to a goal from the frog&#39;s starting position of 0 within a maximum number of hops. The method returns true if the frog successfully reached the goal within the maximum number of hops; otherwise, the method returns false. . public boolean simulate() { int position = 0; for (int count = 0; count &lt; MaxHops; count++) { position += hopDistance(); // calling hopDistance method if (position &gt;= goalDistance) // distance of multiple hops is at least goal distance { return true; // goal reached } else if (position &lt; 0) // distance of multiple hops is less than initial position { return false; // goal not reached } } return false; } . Keep track of position and set starting position as zero | We have to track this position through a &quot;for&quot; loop that is initially 0 and go to our maximum number of hops | We need to have a code that adds hop distance to our position | Things that will stop the code: if we have reached the maximum number of hops OR if the position is = goal distance | Using the &quot;if/else if&quot; statements, if the position is greater than or equal to the goal Distance, the code will be true | However, if our position is negative, we want to return false | If neither true or false occurs, the code will run until we reach maximum number of hops | Starting count at 0 and keeps going until frog reaches goal distance (true) or negative position (false) or reaches maximum number of hops (false) | . Part B and Explanation . Write the runSimulations method, which performs a given number of simulations and returns the proportion of simulations in which the frog successfully reached or passed the goal. For example, if the parameter passed to runSimulations is 400, and 100 of the 400 simulate method calls returned true, then the runSimulations method should return 0.25. Complete method runSimulations below. Assume that simulate works as specified, regardless of what you wrote in part (a). You must use simulate appropriately to receive full credit. . public double runSimulation(int num) // int is the number of times we want to run the loop; called simulate method { int countSuccess = 0; for (int i = 0; i &lt; num; i++){ // keeps track of the counts so far if (simulate()){ countSuccess++; // if it&#39;s successful, the hops will increase by 1 } } return (double) countSuccess / num; // gives a proportion of successes with double arthmetic } . Need to declare a double and start it at zero | We need to keep track of runs | Simulate is a boolean function that returns true or false | If true, then I want to increase the number of successes | If false, then the run is a fail | At the end, I want to return successes/# of simulations for the frog | . Scoring Guidelines . Part A: Calls hopDistance and uses returned distance to adjust (or represent) the frog’s position | Initializes and accumulates the frog’s position at most maxHops times (must be in context of a loop) | Determines if a distance representing multiple hops is at least goalDistance | Determines if a distance representing multiple hops is less than starting position | Returns true if goal ever reached, false if goal never reached or position ever less than starting position | . | Part B Calls simulate the specified number of times (no bounds errors) | Initializes and accumulates a count of true results | Calculates proportion of successful simulations using double arithmetic | Returns calculated value | . | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/frq/2022/09/18/2018FRQ1.html",
            "relUrl": "/frq/2022/09/18/2018FRQ1.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Focus and Skills",
            "content": "Notes from the Video . Students in college start sacrificing their mental health for their grades and to just get to classes | It&#39;s important to build habits for yourself; do the things that you love | Brainstorm: podcasting, reading, running, drinking coffee, going to the beach | Be grateful for the opportunities and resources you have, but don&#39;t burn yourself out | . Thank you note . Dear Ms. Hinds, Thank you for always being there for me whenever I need a break. You always encourage me to be my best self and to stand up to life&#39;s challenges. I&#39;m grateful for all the lessons you&#39;ve taught me from standing up for myself to leaving people with bad energy behind. I look forward to seeing you every week to laugh at jokes together and just talk about life. You are not only a teacher to me but also a second mom and a best friend. . Gratitude List . My health: being able to learn and walk | My family who always supports me in my goals | A bunch of learning resources and opportunities | Beautiful weather in SD | My friends | . Personal and Academic goals . To always be kind to others | To surround myself with uplifting people | To make a change on DNHS&#39;s campus | To get into a college that I truly believe I belong in | To always put my 100% effort into what I pursue | To use my energy and resources to make a positive impact in the campuses and communities I&#39;m apart of | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/extra/2022/09/10/Focus.html",
            "relUrl": "/extra/2022/09/10/Focus.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Boolean Expressions and If Statements",
            "content": "If Statements . This type of conditional statement is composed of the idea that if a specific condition is met, then an action/code will be executed. Just check to see if something is true and will execute the code accordingly. . if (score &gt;= 90) {// the condition here is the score received on the test grade = &#39;A&#39;; // if the score is greater than 90, the action executed will be telling the user they got an A grade; if it&#39;s not true, the rest of the code will be executed and ignore what is between the brackets } . If-else Statements . A conditional statement that runs a separate (else) code if the statement is false. It&#39;s a default action. . if (score &gt;= 90) {// the condition here is the score received on the test grade = &#39;A&#39;; // if the score is greater than 90, the action executed will be telling the user they got an A grade; if it&#39;s not true, the rest of the code will be executed and ignore what is between the brackets } else { grade = &#39;Lower than an A&#39;; // if the score is less than a 90, then this alternate code will run } . If-else If-else Statement . This conditional statement allows you to have a string of codes if all the specific conditions are false . if (time &lt; 10) { // the condition here is the time greeting = &quot;Good morning&quot;; // if the time is less than 10, the code will be executed } else if (time &lt; 20) { // the second condition is here if the number is not less than 10; it must be less than 20 for the code to run greeting = &quot;Good day&quot;; // if the time is less than 20 but greater than 10, the code will be executed } else { // if the number is greater than 20, then this alternate code will run since the first two statements were false greeting = &quot;Good evening&quot;; // this code will be executed if the number is greater than 20 } . If-else 5 conditions example . Here is a code I wrote . import java.util.Scanner; public class IfElseStatements { public void go() { Scanner scan = new Scanner(System.in); int score = scan.nextInt(); if (score &lt;= 60) { System.out.println(&quot;You got an F&quot;); } else if (score &lt;= 70) { System.out.println(&quot;You got a D&quot;); } else if (score &lt;= 80) { System.out.println(&quot;You got a C&quot;); } else if (score &lt;= 90) { System.out.println(&quot;You got a B&quot;); } else if (score &lt;= 100) { System.out.println(&quot;You got an A&quot;); } else { System.out.println(&quot;You didn&#39;t even get a grade!&quot;); } } public static void main(String[] args) { IfElseStatements cond = new IfElseStatements(); cond.go(); } } IfElseStatements.main(null); . You got an A . Switch Case . A switch case is an if-else ladder that checks multiple conditions at once. The value that is inputted is checked with each given case until a match is found. Things to remember: two cases can&#39;t have the same value, data variable needs to be the same in all cases, and the value needs to be literal or constant not a variable. . import java.util.Scanner; public class SwitchExample { // sets up class and objects for scanner public void go() { Scanner scan = new Scanner(System.in); int score = scan.nextInt(); switch (score){ // switch statement with condition that goes through different cases to find a match case 1: // for the score of less than 60 System.out.println(&quot;You got an F&quot;); break; case 2: // for the score between 60 and 70 System.out.println(&quot;You got a D&quot;); break; case 3: // for a score between 70 and 80 System.out.println(&quot;You got a C&quot;); break; case 4: // for a score between an 80 and a 90 System.out.println(&quot;You got a B&quot;); break; case 5: // for a score between a 90 and 100 System.out.println(&quot;You got an A&quot;); break; default: // if none of the cases are a match, this is what will be the code automatically executed System.out.println(&quot;You didn&#39;t even get a grade&quot;); } } public static void main(String[] args) { SwitchExample cond = new SwitchExample(); cond.go(); } } SwitchExample.main(null); . You got an F . De Morgan&#39;s Law . Allows for specific Boolean statements to be written in different ways to have the same effect. It&#39;s similar to probability in statistics. The || means &quot;or&quot; and the &amp;&amp; means &quot;and&quot; . Written as: not (A or B) = (not A) and (not B) . not (A and B) = (not A) or (not B) . In code it&#39;s written as: . !(A &amp;&amp; B) == !A || !B !(A &amp;&amp; B) == !A &amp;&amp; !B . boolean dog = false; boolean labrador = true; if (!(dog &amp;&amp; windy)) { // using the &quot;and&quot; System.out.println(&quot;You have a dog that&#39;s a labrador&quot;); } else { System.out.println (&quot;Your dog is another breed&quot;); } // checks if both boolean expressions are true and then inverses the results . You have a dog that&#39;s a labrador . boolean dog = false; boolean labrador = true; if (!dog || !labrador) { // using the &quot;or&quot; System.out.println(&quot;You have a dog that&#39;s a labrador&quot;); } else { System.out.println (&quot;Your dog is another breed!&quot;); } // checks if dog is false or labrador is false . You have a dog that&#39;s a labrador . Resources I used aside from the given . Video 1: https://www.youtube.com/watch?v=HQ3dCWjfRZ4&amp;ab_channel=Transcode | Video 2: https://www.youtube.com/watch?v=SOnpOBvyhDM&amp;t=26s&amp;ab_channel=thenewboston | Video 3: https://www.youtube.com/watch?v=2CIohicXNAY&amp;ab_channel=BillButterfield | Article 1: https://www.w3schools.com/js/js_if_else.asp | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/10/BooleanExpression.html",
            "relUrl": "/jupyter/2022/09/10/BooleanExpression.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Objects Usage",
            "content": "Console Based Menu . Objects Used: . Used scanner class to get user input and make objects | Used system class to print out static methods- | Used the java Math Class to calculate for GCM and LCM | . PBL Takeaways: . By using the Menu () code, the user is able to select which option they want to start. This connects to Frontend because the code allows the program to be more user friendly. -The user is entering what they want the code to process which is different than GUI console which allows the user to select and view different options | . import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Greatest Common Factor&quot;); System.out.println(&quot;5 - Least Common Multiple&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: // two numbers from user input Scanner input = new Scanner(System.in); System.out.println(&quot;Enter a number: &quot;); int a = input.nextInt(); System.out.println(&quot;Enter another number: &quot;); Scanner input2 = new Scanner(System.in); int b = input2.nextInt(); int c = Math.min(a, b); input.close(); input2.close(); int gcd = 1; for(int i = c; i &gt; 0; i--){ // descending if(a % i == 0 &amp;&amp; b % i == 0){ gcd = i; break; // exit loop if it is a factor } } System.out.println(&quot;The greatest common factor of &quot; + a + &quot; and &quot; + b + &quot; is &quot; + gcd); break; case 5: Scanner num1 = new Scanner(System.in); System.out.println(&quot;Enter a number: &quot;); int x = num1.nextInt(); Scanner num2 = new Scanner(System.in); System.out.println(&quot;Enter another number: &quot;); int y = num2.nextInt(); num1.close(); num2.close(); int m = Math.max(x, y); // least common multiple must be at least as large as the larger of the two numbers while (true) { // repeat until break if(m % x == 0 &amp;&amp; m % y == 0){ System.out.println(&quot;The least common multiple of &quot; + x + &quot; and &quot; + y + &quot; is &quot; + m); break; } m += 1; } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Greatest Common Factor 5 - Least Common Multiple 0 - Quit - 1: Hello, World! 2: DefaultRedGreenYellowBluePurpleCyanWhite 3: Loading...#################### 4: Enter a number: Enter another number: The greatest common factor of 8 and 12 is 4 5: Enter a number: Enter another number: The least common multiple of 2 and 4 is 4 0: Goodbye, World! . Desktop GUI Menu . See Brian and I&#39;s GUI Console that we put together: https://bgt072105.github.io/CSA-tri1-teamrepo/2022/09/05/GUImenu.html . Objects Used: . Used the if else, if else structure that allows text to show up based on what the user selects | Scanner class | Static variable since GUI doesn&#39;t allow inputs | . PBL Learnings: . Graphical User Interface allows for the user to click and navigate through the console based on what they want to see | More faster and easier to understand | More visual for the user compared to Console | . Hacks . Explain where a Class is defined . You define a class whenever you need to add variables, objects or methods to your code | . // class definition public class classname . Explain where an instances of a Class is defined: A class is defined when you have an object. Here, I created a new menu for the user to select different options to input values for. . // new instance of class (object) new Menu(); . Explain where an object is Calling a Method: An object is calling a method when an action needs to be performed for the code to run. Here, I created an object where I can input an integer . // object calling method int choice = sc.nextInt(); // sc object calls nextInt() method . Explain where an object is Mutating data . // mutating data refers to a change in the original data. Here, the primitive data type is number that is being mutated to create a least common multiple int x = num1.nextInt(); Scanner num2 = new Scanner(System.in); System.out.println(&quot;Enter another number: &quot;); int y = num2.nextInt(); num1.close(); num2.close(); int m = Math.max(x, y); . Describe Console, GUI differences, or Code.org differences. . Console: . User enters inputs and get respective outputs | Not as visual | Requires very good understanding of script and syntax | Example: Bash shell --&gt; inputs by user, outputs through the code | . | GUI: . More clickable platform | Comfortable to use because it&#39;s user-friendly | Visual feedback and display | Can&#39;t really perform multiple tasks at once | You can access another computer/platform remotely | example: Apple&#39;s Macintosh operating system | . | Code.org: . Uses the painter as a visual object to help the user understand the code&#39;s implementations | File and public class &quot; name &quot; should be same | Public class was My Neighborhood same as what the file was named | Calling a method is done through &quot;variableName.methodName(); | More basic platform | . | . Extra Observations . Need to be very careful with syntax and brackets otherwise it throws off your whole code | For GUI Console, inputs would&#39;ve been useful | A problem we faced was that the regular list console wasn&#39;t working on Brian&#39;s computer so we used a GUI instead | We could try having a more visually appealing GUI for our user | Need to be careful when naming doubles and integers being attentive to their definitions | Not as interesting that the GUI can&#39;t take a user input in case we want to make a calculator or something like that | .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/09/05/MathConsole.html",
            "relUrl": "/jupyter/2022/09/05/MathConsole.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Extra Credit Panel",
            "content": "What made you realize you wanted to major in comp sci? . They experimented through other organization i.e. clubs and jobs | Had a niche for problem solving | Took time to explore and reflect on skills | Recognized necessity of programming in different careers and also know how to logically think | Applied programming to the real world to see benefits | Worked on specific projects | . What’s the biggest challenge you’ve encountered? . Coding errors: persist through it and make sure to use google or ask for help | Combatting egos: focus on your own path and don’t dispute with people; it’s not worth it | Learn the theory: knowing the basics is necessary so that you can go above and beyond with projects | Finding motivation: Need to find courage to learn material; application of CS to projects was motivating | Not everything is just a box to check off; focus on the learning | . How have you applied CS if you’re not majoring in it? . Use CS in MATLAB for if and then statement, optimization, and to make tasks faster | Useful to know how to code for internships or statistical testing | Used in really all fields and a good skill to have in your back pocket | . What are some job opportunities for college students? . Research in labs | Code ninjas and other industrial internships | Join new clubs i.e. robotics | Teacher assistants and tutoring | . Reflection . I never realized how useful the skill of programming can be in daily life and in almost all fields. I think it’s very interesting to hear how coding is almost foundational to many STEM majors and can help you go above and beyond in your projects and how you approach real-world problems and solutions. As someone interested in biotechnology and bioengineering, I know that coding will come up in multiple aspects of my career so I really hope to learn as much as I can through CSA as Mr. M and my peers are there to help me whenever I struggle. I’m even more excited to work on more PBL and get to work with real-world problems. I genuinely believe that when you can apply and teach someone else what you learn, you take a step towards mastery. That my ultimate goal in CSA this year. These panelists are who I envision to be - people who have taken what they’ve learned in the classroom and creatively crafted working, tangible projects that showcase their abilities. I’m looking forward to future opportunities. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/markdown/2022/08/29/ExtraCredit.html",
            "relUrl": "/markdown/2022/08/29/ExtraCredit.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "AP Government Notes",
            "content": "Forms of Government we have discussesd . -Autocracy: One person has all power; monarchy or dictatorship . -Democracy: citizens have power; representative or direct . -Oligarchy: few people control the county; military dictatorship . -Religious Rule: theocracy; god is the ultimate authority here . Liberals and Conservatives . -Liberals: want the government to intervene more to help uplift social and economic welfare when needed . -Conservatives: want individual rights to be emphasized; follow laissez-faire policy . Types of Media . -Print: newspapers, magazines, and journals -Broadcast media: news from TV or radio -Talk Radio: Interviews with commentary mostly always bias -Internet: mix of traditional and blog sites . Types of Sources . -On the record: everything the sources says can be used in article . -On background: reporter may quote the source and give a hint as to where they work . -Off the record: source&#39;s information can&#39;t be used at all so the reporter has to do more searching . -Deep background: can&#39;t quote or identify the source; example: Watergate Scandal .",
            "url": "https://hetvit27.github.io/hetvitrivedi/ap%20gov/2022/08/28/APGov.html",
            "relUrl": "/ap%20gov/2022/08/28/APGov.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "JavaPrimitives",
            "content": "Integer Usage . int a = 4; float b = 4; float sub= (a - b); System.out.println(sub); . 0.0 . String Usage . String x = &quot;hetvi&quot;; String y = &quot;is&quot;; String z = &quot;in CSA period 2&quot;; String name = x + &quot; &quot; + y + &quot; &quot; + z; System.out.println(name); . hetvi is in CSA period 2 . Boolean Usage . boolean is_so_amazing = true; boolean is_not_amazing = false; if (is_so_amazing){ System.out.println(&quot;you are taking CSA!&quot;); } else if (is_not_amazing){ System.out.println(&quot;you are taking another class&quot;); } . you are taking CSA! . Solving for Potential Energy on Earth . public class PotentialEnergyCalculator { public PotentialEnergyCalculator() { this.enterVals(); } private double PE; // initialize PE double. Stores the final output value. private double mass; // initialize mass double. Stores it from the user input. private double height; // initialize height double. Stores it from the user input. private static double g = 9.80; // initialize static double. Stores the constant value. private void enterVals() { while (true) { Scanner dd = new Scanner(System.in); System.out.print(&quot;Enter mass of object in grams: &quot;); try { mass = dd.nextDouble(); System.out.println(mass); // sets variable to True meaning if the double is entered correctly break; } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); // if it&#39;s not a number, it will close. } dd.close(); } while (true) { Scanner dd = new Scanner(System.in); System.out.print(&quot;Enter height at which object is placed in meters: &quot;); try { height = dd.nextDouble(); System.out.println(height); break; } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } dd.close(); } } public double calculate() { double g = 9.80; PE = (mass*height*g); // equation for calculating potential energy return PE; // outputs calculated value. } public static void main(String[] args) { PotentialEnergyCalculator PE = new PotentialEnergyCalculator(); System.out.println(&quot;Your potential energy in Joules is &quot; + String.format(&quot;%.2f&quot;, PE.calculate())); // script for what the output will look like using string } } PotentialEnergyCalculator.main(null); . Enter mass of object in grams: 3.0 Enter height at which object is placed in meters: 4.0 Your potential energy in Joules is 117.60 .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/08/27/JavaPrimitives.html",
            "relUrl": "/jupyter/2022/08/27/JavaPrimitives.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Bash Checks",
            "content": "Python Check . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Anaconda Check . conda list . # packages in environment at /Users/ht/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.1.4 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Check . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/ht/Library/Jupyter/kernels/bash java /Users/ht/Library/Jupyter/kernels/java javascript /Users/ht/Library/Jupyter/kernels/javascript python3 /Users/ht/opt/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Users/ht/opt/anaconda3/share/jupyter/kernels/python3 . Bash Hacks Q&amp;A . Is there anything we can use to verify tools we install? . You can use the command &quot;apt list installed&quot; . Is there anything we could use to verify with Anaconda? . You can use the command &quot;conda list&quot; to see within the conda enviornment and what packages are on your device . How would you update a repository? . The command &quot;git pull upstream master&quot; would update your repository . Really cool would be automating a procedure from installation. . I&#39;m not sure about this one .... :O .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/08/27/BashPost.html",
            "relUrl": "/jupyter/2022/08/27/BashPost.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Problems, Solutions, and Reflections",
            "content": "Introduction . This is the page where I will keep track of my tasks for the week and also note the problems/solutions I encounter . Problems I faced . Computer Science is all about learning from errors and developing innovations. Here are some of the problems I’ve faced in my computer science journey: . -Week One: I had trouble figuring out why my primitive code for potential energy wasn’t actually solving for the value. . Solutions to the problems . While problems are a must in life, solutions are also just a step away. For the problems I faced while coding, here are the solutions I pondered: . -Week One Solution: I had to figure out the difference between static and non-static variables for it to actually compute the answer . Reflection . -Week One Reflection: I really liked using Code.org because I felt like it established the basics that were necessary. I liked building my fastpages more to be personalized and for other classes like AP Gov. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/markdown/2022/08/21/todolist.html",
            "relUrl": "/markdown/2022/08/21/todolist.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Python Jupyter Notebook",
            "content": "msg = &quot;Hi Hetvi&quot; print(msg) . Hi Hetvi .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/08/21/PythonJupyterNotebook.html",
            "relUrl": "/jupyter/2022/08/21/PythonJupyterNotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Java Jupyter Notebook",
            "content": "System.out.println(&quot;Hello&quot;); . Hello .",
            "url": "https://hetvit27.github.io/hetvitrivedi/jupyter/2022/08/21/JavaJupyterNotebook.html",
            "relUrl": "/jupyter/2022/08/21/JavaJupyterNotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "My First Post!",
            "content": "Hi There! . This is my first post! I’m so excited to learn more about computer science with my class. .",
            "url": "https://hetvit27.github.io/hetvitrivedi/markdown/2022/08/21/Firstpost!.html",
            "relUrl": "/markdown/2022/08/21/Firstpost!.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Skills!",
          "content": "Middle School Clubs . Heavily immersed in Science Olympiad where I explored a bunch of different fields like Anatomy, Experimental Design, Epidemiology, and Thermodynamics | I participated in Robotics until 6th grade and then never really tried again until 9th grade | . High School Extracurricululars . Peer Counseling: Lead and organize activities to foster a safe and inclusive environment on campus | Science Olympiad: Continuing to learn more about college level science | Del Norte Food Bank Club: Spreading awareness about the hunger crisis | WHAT Tutor: Helping underclassmen grow their writing and editing skills | NHS Member: Participating in Community Service alongside my peers | . Outside of School Activities . Research at UCSD | Volunteer in community | Author | Bharatnatyam Classical Dance | . Skills . Organized | Leader | Good at public speaking | .",
          "url": "https://hetvit27.github.io/hetvitrivedi/_pages/Skills.html",
          "relUrl": "/_pages/Skills.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Who's Hetvi?🤨",
          "content": "My name is Hetvi and I’m a senior at Del Norte. I really love learning and being able to problem solve through using different resources and collaborating with my peers. This year my goals are to learn different programming language and to get to be creative with the projects I do. .",
          "url": "https://hetvit27.github.io/hetvitrivedi/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
      ,"page5": {
          "title": "CSA Notes",
          "content": "Unit One: Primitive Types . Goal: To learn the fundamentals of Java and other foundational concepts for coding. . Fastpages Notes _notebooks: mostly jupyter files. This allows building block of markdown, python, java, javascript into a jupyter notebook. _posts: markdown .md files. This supports frontend web design with markdown, html, and javascript. _word: word .docx files. This allows you to save Microsoft or Google documents into a docx format. Saving these directly to _word folder will help streamline steps. . Homepage notes The Home page is sourced by the index.html file. This is the file to personalize and customize your Fastpages home page. BTW, index.html is the standard name for your web sites landing page. . Primitive Notes The primitive data types in Java are: boolean, byte, char, short, int, long, float, and double. For each primitive data type, Java provides a wrapper class that allows the data to be represented as objects. The corresponding wrapper classes are: Boolean, Byte, Character, Short, Integer, Long, Float, and Double. The output is key to formatting and combining data Wrapper Classes are non-primitive data type that do not require declaration. Collegeboard provides the example of String – they are capitalized unlike primitives . Unit Two: Using Objects . Goal: Explore reference data in order to represent real-world objects in a digital world and discover methods to initiate more complex operations . Unit Three: Boolean Expressions and if Statements . Goal: Dive into the building blocks of algorithms and use conditional statements to solve problems and have control over your results . Unit Four: Iteration . Goal: Learn about iteration which is used for repetition in algorithms . Unit Five: Writing Clauses . Goal: Explore real-world interactions that can be expressed through code by organizing behaviors and attribites into classes – also learn about the legal and ethical implications of programming . Unit Six: Array . Goal: Learn techniques and standard algorithms to work with collections of data structures . Unit Seven: ArrayList . Goal: Delve into data setts, exploring ArrayList objects for larger amounts of data, as well as the privacy concerns for your personal data storage . Unit Eight: 2D Array . Goal: Experiment with data sets represented in a table . Unit Nine: Inheritance . Goal: Manipulate programming without altering original code by using subclasses to create a hierarchy . Unit Ten: Recurision . Goal: Solve larger problems by solving small versions of the same problems using recursive methods .",
          "url": "https://hetvit27.github.io/hetvitrivedi/_pages/notes.html",
          "relUrl": "/_pages/notes.html",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://hetvit27.github.io/hetvitrivedi/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}